{"version":3,"sources":["../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/TorrClient.js","components/stateDictionary.js","components/TorrentBox.js","utils/Storage.js","components/LogoHeader.js","utils/useInterval.js","components/TorrentInfo.js","components/Torrents.js","components/TorrentsCol.js","searchAPIs/yts.js","components/Search.js","components/Settings.js","components/TorrentsTopControls.js","components/Tabs.js","components/TabletView.js","utils/useWindowSize.js","components/BottomSheet.js","App.js","serviceWorker.js","index.js","images/logo_round.png","images/logo-YTS.svg","images/imagemissing.png","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","serverAddress","window","location","href","substring","length","console","log","baseURL","APICall","axios","create","withCredentials","login","a","username","password","get","params","sync","rid","resume","hash","hashes","pause","remove","deleteFiles","addTorrent","url","urls","getPrefs","updatePref","json","stateDictionary","error","long","short","missingFiles","uploading","pausedUP","queuedUP","stalledUP","checkingUP","forcedUP","allocating","downloading","metaDL","pausedDL","queuedDL","stalledDL","checkingDL","forceDL","checkingResumeData","moving","unknown","TorrentBox","props","item","name","filter","torrentData","progress","eta","state","num_leechs","num_seeds","upspeed","dlspeed","useState","actionLoading","setActionLoading","date","Date","setSeconds","timeString","toISOString","substr","isDone","includes","isPaused","isDL","statsIconStyle","color","marginRight","useEffect","setTimeout","className","toFixed","style","paddingBottom","value","secondaryValue","icon","faCloudUpload","faCloudDownload","faTachometerAltFast","filesize","round","type","onClick","openAction","size","disabled","saveStorage","key","localStorage","setItem","JSON","stringify","setInterval","undefined","getItem","LogoHeader","alt","src","roundLogo","useInterval","callback","delay","savedCallback","useRef","current","clearInterval","StatsRow","title","data","label","TorrentInfo","torrent","setTorrent","resp","torrents","AmountRow","fileSize","downloaded","faDownload","downloaded_session","faPallet","uploaded","faUpload","uploaded_session","faPalletAlt","ratio","faShareAlt","SpeedsRow","faTachometerAltFastest","faTachometerAltSlowest","faStopwatch","DataRow","num_complete","faUserAstronaut","num_incomplete","faUserSecret","save_path","faFolderOpen","StateRow","faBolt","Torrents","useContext","Context","settings","updateSettings","installed","updateModal","feedback","setFeedback","setUsername","setPassword","open","options","modifier","onclick","torrentAction","setTorrentAction","deleteAlert","setDeleteAlert","torrentList","setTorrentList","setTorrentData","RID","setRID","loggedin","full_update","updatedObj","forEach","properties","property","fullData","segment","content","handleMoreButton","htmlFor","onChange","event","target","placeholder","response","userObject","catch","isOpen","isCancelable","onCancel","option","cancelable","TorrentsCol","setSegment","SegmentPicker","mode","onIonChange","detail","YTSModalInfo","updateAlert","TorrentAttr","letter","otherInfo","language","faComments","rating","faMedal","runtime","genres","join","faFilm","downloadsStarted","setDownloadsStarted","title_long","thisTorrent","faTv","quality","faFilmCanister","seeds","faUsersClass","peers","faBox","faFolderDownload","class","encodeURI","handleDownload","description_full","yt_trailer_code","width","height","YTSSearch","searchTerm","setSearchTerm","searchLoading","setSearchLoading","searchResults","setSearchResults","submitQuery","limit","page","minimum_rating","query_term","genre","sorty_by","with_rt_ratings","moviesArray","movies","category","onKeyPress","role","backgroundImage","medium_cover_image","imageMissing","Search","logo","YTSLogo","categories","component","providers","selectedProvider","setSelectedProvider","selectedCategory","setSelectedCategory","Settings","add_trackers","add_trackers_enabled","alt_dl_limit","alt_up_limit","alternative_webui_enabled","alternative_webui_path","announce_ip","announce_to_all_tiers","announce_to_all_trackers","anonymous_mode","async_io_threads","auto_delete_mode","auto_tmm_enabled","autorun_enabled","autorun_program","banned_IPs","bittorrent_protocol","bypass_auth_subnet_whitelist","bypass_auth_subnet_whitelist_enabled","bypass_local_auth","category_changed_tmm_enabled","checking_memory_use","create_subfolder_enabled","current_interface_address","current_network_interface","dht","disk_cache","disk_cache_ttl","dl_limit","dont_count_slow_torrents","dyndns_domain","dyndns_enabled","dyndns_password","dyndns_service","dyndns_username","embedded_tracker_port","enable_coalesce_read_write","enable_embedded_tracker","enable_multi_connections_from_same_ip","enable_os_cache","enable_piece_extent_affinity","enable_upload_suggestions","encryption","export_dir","export_dir_fin","file_pool_size","incomplete_files_ext","ip_filter_enabled","ip_filter_path","ip_filter_trackers","limit_lan_peers","limit_tcp_overhead","limit_utp_rate","listen_port","locale","lsd","mail_notification_auth_enabled","mail_notification_email","mail_notification_enabled","mail_notification_password","mail_notification_sender","mail_notification_smtp","mail_notification_ssl_enabled","mail_notification_username","max_active_downloads","max_active_torrents","max_active_uploads","max_connec","max_connec_per_torrent","max_ratio","max_ratio_act","max_ratio_enabled","max_seeding_time","max_seeding_time_enabled","max_uploads","max_uploads_per_torrent","outgoing_ports_max","outgoing_ports_min","pex","preallocate_all","proxy_auth_enabled","proxy_ip","proxy_password","proxy_peer_connections","proxy_port","proxy_torrents_only","proxy_type","proxy_username","queueing_enabled","random_port","recheck_completed_torrents","resolve_peer_countries","rss_auto_downloading_enabled","rss_download_repack_proper_episodes","rss_max_articles_per_feed","rss_processing_enabled","rss_refresh_interval","rss_smart_episode_filters","save_path_changed_tmm_enabled","save_resume_data_interval","scan_dirs","schedule_from_hour","schedule_from_min","schedule_to_hour","schedule_to_min","scheduler_days","scheduler_enabled","send_buffer_low_watermark","send_buffer_watermark","send_buffer_watermark_factor","slow_torrent_dl_rate_threshold","slow_torrent_inactive_timer","slow_torrent_ul_rate_threshold","socket_backlog_size","start_paused_enabled","stop_tracker_timeout","temp_path","temp_path_enabled","torrent_changed_tmm_enabled","up_limit","upload_choking_algorithm","upload_slots_behavior","upnp","use_https","utp_tcp_mixed_mode","web_ui_address","web_ui_ban_duration","web_ui_clickjacking_protection_enabled","web_ui_csrf_protection_enabled","web_ui_custom_http_headers","web_ui_domain_list","web_ui_host_header_validation_enabled","web_ui_https_cert_path","web_ui_https_key_path","web_ui_max_auth_fail_count","web_ui_port","web_ui_secure_cookie_enabled","web_ui_session_timeout","web_ui_upnp","web_ui_use_custom_http_headers_enabled","web_ui_username","preferences","setPreferences","prefsRefresh","setPrefsRefresh","initialLogin","SwitchRow","backgroundColor","objKey","checked","InputRow","tappable","setAlert","faEdit","alert","alertInput","faFolders","faMinusHexagon","faFolderMinus","faNetworkWired","faEthernet","faUserLock","faUserRobot","faKey","faPaintBrushAlt","faAngleRight","faWifi","faOutlet","faUser","reload","ref","defaultValue","textAlign","TorrentTopControls","addTorrentPopover","setAddTorrentPopover","bigScreen","updateTorrentList","AddButton","React","createRef","torrentURL","setTorrentURL","handleAddTorrent","finally","AddTorrentModal","rows","top","innerHeight","getTarget","Tabs","activeTab","setActiveTab","pageTitles","animation","position","onPreChange","index","renderTabs","activeIndex","active","tab","TabletView","RoundLogo","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","addEventListener","removeEventListener","BottomSheet","WindowSize","topDiff","leftDiff","left","setOpen","initialPosition","x","y","finalPosition","axis","handle","defaultPosition","children","bounds","onStop","pageY","onDismiss","createContext","App","StoredUser","parse","getStorage","templateObject","screenWidth","setSettings","matchMedia","matches","modal","setModal","message","Alert","Provider","update","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d14458b4.chunk.js","sourcesContent":["var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t181,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 105;\nmodule.exports = webpackAsyncContext;","import axios from 'axios';\n\nlet serverAddress = window.location.href;\n\nif(serverAddress.substring(serverAddress.length-1) !== \"/\"){\n  serverAddress = `${serverAddress}/`\n}\n\nconsole.log(serverAddress)\n\nconst baseURL = `${serverAddress}api/v2/`\n\nconst APICall = axios.create({\n  baseURL:baseURL,\n  withCredentials:true\n})\n\nexport const login = async ({username, password}) => {\n  return APICall.get('auth/login',{\n    params:{username,password}\n  })\n}\n\nexport const logout = () => {\n  return axios.get('auth/logout')\n}\n\nexport const getTorrents = async () => {\n  return APICall.get('torrents/info',{\n    params:{\n      sort:\"added_on\",\n      reverse:true,\n    }\n  })\n}\n\nexport const getProperties = async (hash) => {\n  return APICall.get('torrents/properties',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const sync = async (rid) => {\n\n  return APICall.get('sync/maindata',{\n    params:{\n      rid\n    }\n  })\n}\n\nexport const resume = async (hash=\"\") => {\n  return APICall.get('torrents/resume',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const pause = async (hash=\"\") => {\n  return APICall.get('torrents/pause',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const remove = async (hash=\"\",deleteFiles=false) => {\n  return APICall.get('torrents/delete',{\n    params:{\n      hashes:hash,\n      deleteFiles\n    }\n  })\n}\n\nexport const addTorrent = async (url=\"\") => {\n  return APICall.get('torrents/add',{\n    params:{\n      urls:url,\n    }\n  })\n}\n\nexport const getPrefs = async () => {\n  return APICall.get('app/preferences')\n}\n\nexport const updatePref = async (json={}) =>{\n  return APICall.get('app/setPreferences',{\n    params:{\n      json\n    },\n  })\n}\n","const stateDictionary = {\n  error : {\n    long:\"Some error occurred, applies to paused torrents\",\n    short:\"Error\"\n  },\n  missingFiles : {\n    long:\"Torrent data files is missing\",\n    short:\"Files Missing\"\n  },\n  uploading : {\n    long:\"Torrent is being seeded and data is being transferred\",\n    short:\"Seeding\"\n  },\n  pausedUP : {\n    long:\"Torrent is paused and has finished downloading\",\n    short:\"Paused / Done\"\n  },\n  queuedUP : {\n    long:\"Queuing is enabled and torrent is queued for upload\",\n    short:\"Queued For Seeding\"\n  },\n  stalledUP : {\n    long:\"Torrent is being seeded, but no connections were made\",\n    short:\"Available for Seeding\"\n  },\n  checkingUP : {\n    long:\"Torrent has finished downloading and is being checked\",\n    short:\"Checking Files\"\n  },\n  forcedUP : {\n    long:\"Torrent is forced to uploading and ignore queue limit\",\n    short:\"Force Uploading\",\n  },\n  allocating : {\n    long:\"Torrent is allocating disk space for download\",\n    short:\"Allocating Space\"\n  },\n  downloading : {\n    long:\"Torrent is being downloaded and data is being transferred\",\n    short:\"Downloading\"\n  },\n  metaDL : {\n    long:\"Torrent has just started downloading and is fetching metadata\",\n    short:\"Fetching Metadata\"\n  },\n  pausedDL : {\n    long:\"Torrent is paused and has NOT finished downloading\",\n    short:\"Paused\"\n  },\n  queuedDL : {\n    long:\"Queuing is enabled and torrent is queued for download\",\n    short:\"Queued for Download\"\n  },\n  stalledDL : {\n    long:\"Torrent is being downloaded, but no connection were made\",\n    short:\"Stalled\"\n  },\n  checkingDL : {\n    long:\"Same as checkingUP, but torrent has NOT finished downloading\",\n    short:\"Checking Files\"\n  },\n  forceDL : {\n    long:\"Torrent is forced to downloading to ignore queue limit\",\n    short:\"Force Downloading\"\n  },\n  checkingResumeData : {\n    long:\"Checking resume data on qBt startup\",\n    short:\"Checking Resume\"\n  },\n  moving : {\n    long:\"Torrent is moving to another location\",\n    short:\"Moving Location\",\n  },\n  unknown : {\n    long:\"Unknown status\",\n    short:\"Unknown\",\n  },\n}\n\nexport default stateDictionary;\n","import React, {useState, useEffect} from 'react';\nimport { Icon, ProgressBar } from 'react-onsenui';\nimport stateDictionary from './stateDictionary';\nimport {pause, resume} from '../utils/TorrClient';\nimport filesize from \"filesize\"\nimport {IonSpinner} from \"@ionic/react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faCloudDownload, faCloudUpload, faTachometerAltFast} from \"@fortawesome/pro-regular-svg-icons\";\n\nconst TorrentBox = ( props ) => {\n\n  // const template = {\n  //   added_on: 1596849714,\n  //   amount_left: 2025018553,\n  //   auto_tmm: false,\n  //   availability: 0.004999999888241291,\n  //   category: \"\",\n  //   completed: 19824640,\n  //   completion_on: 18000,\n  //   dl_limit: -1,\n  //   dlspeed: 0,\n  //   downloaded: 19542669,\n  //   downloaded_session: 19900384,\n  //   eta: 8640000,\n  //   f_l_piece_prio: false,\n  //   force_start: false,\n  //   last_activity: 0,\n  //   magnet_uri: \"magnet:?xt=urn:btih:633545e90ff160e875f0bc267b4895abe828542e&dn=Blood%20Diamond%20(2006)%20%5b1080p%5d\",\n  //   max_ratio: -1,\n  //   max_seeding_time: -1,\n  //   name: \"Blood Diamond (2006) [1080p]\",\n  //   num_complete: 25,\n  //   num_incomplete: 206,\n  //   num_leechs: 0,\n  //   num_seeds: 0,\n  //   priority: 3,\n  //   progress: 0.009694943880227397,\n  //   ratio: 0,\n  //   ratio_limit: -2,\n  //   save_path: \"/home/ntoporcov/Downloads/\",\n  //   seeding_time_limit: -2,\n  //   seen_complete: 1596849724,\n  //   seq_dl: false,\n  //   size: 2044843193,\n  //   state: \"pausedDL\",\n  //   super_seeding: false,\n  //   tags: \"\",\n  //   time_active: 11,\n  //   total_size: 2044843193,\n  //   tracker: \"\",\n  //   up_limit: -1,\n  //   uploaded: 0,\n  //   uploaded_session: 0,\n  //   upspeed: 0}\n\n  const item = props.item;\n  const  hash  = props.hash;\n  const { name } = item;\n\n  const { filter } = props;\n\n  // const {syncData} = useContext(Context)\n\n  const torrentData = item ;\n\n  const { progress } = torrentData || 0\n  const { eta } = torrentData || 0\n  const { state } = torrentData || \"\"\n  const { num_leechs } = torrentData || 0\n  const { num_seeds } = torrentData || 0\n  const { upspeed } = torrentData || 0\n  const { dlspeed } = torrentData || 0\n\n  const [actionLoading,setActionLoading] = useState(false)\n\n  const date = new Date(0);\n  date.setSeconds(eta); // specify value for SECONDS here\n  const timeString = eta?date.toISOString().substr(11, 8):0;\n\n  const isDone = () => {\n    return !!state.includes(\"UP\");\n  }\n\n  const isPaused = () => {\n    switch (state) {\n      case \"pausedDL\" : return true;\n      case \"pausedUP\" : return true;\n      default: return false;\n    }\n  }\n\n  const isDL = () => {\n    switch (state) {\n      case \"downloading\" : return true;\n      case \"metaDL\" : return true;\n      case \"queuedDL\" : return true;\n      case \"stalledDL\" : return true;\n      case \"checkingDL\" : return true;\n      case \"forceDL\" : return true;\n      case \"checkingResumeData\" : return true;\n      case \"allocating\" : return true;\n      default: return false;\n    }\n  }\n\n  const statsIconStyle = {\n      color:isDL()?\"#0076ff\":\"#b2b2b2\",\n      marginRight:5,\n  }\n\n  useEffect(()=>{\n    if(actionLoading){\n      setTimeout(()=>{\n          setActionLoading(false)\n      },1000)\n    }\n  },[actionLoading])\n\n\n  if(\n      (filter=== \"downloading\" && progress < 1)\n      || (filter === \"complete\" && progress === 1)\n      || (filter === \"all\")\n  ) {\n    return (\n        <div className=\"torrentBox\">\n          <h3>{name}</h3>\n          <div className=\"stats\">\n            <span>{(progress * 100).toFixed(0)}%</span>\n            {eta !== 8640000 ? <span>{timeString}</span> : <span>{stateDictionary[state].short}</span>}\n          </div>\n          <ProgressBar\n              style={{paddingBottom: 10}}\n              value={progress * 100}\n              secondaryValue={100}\n          />\n          <div className=\"details\">\n            <div className=\"statsRow\">\n            <span>\n              <FontAwesomeIcon style={statsIconStyle}\n                               icon={isDone() ? faCloudUpload : faCloudDownload}\n              />\n              <span className={\"data\"}>\n                {isDone() ? num_leechs : num_seeds}\n              </span>\n            </span>\n              <span>\n              <FontAwesomeIcon style={statsIconStyle} icon={faTachometerAltFast}/>\n              <span className={\"data\"}>\n                {isPaused() || isDone() ? \"0\" : filesize(isDone() ? upspeed : dlspeed, {round: 1}) + \"/s\"}\n              </span>\n            </span>\n            </div>\n            {\n              actionLoading ?\n                  <IonSpinner name={\"lines\"}/>\n                  : <div className=\"buttonsRow\">\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                          props.openAction(hash,torrentData)\n                        }}\n                    >\n                      <Icon size={30} icon=\"ion-ios-more\"/>\n                    </button>\n                    <button\n                        className={isPaused() ? \"active\" : null}\n                        type=\"button\"\n                        disabled={isDone()}\n                        onClick={() => {\n                          setActionLoading(true)\n                          pause(hash)\n                        }}\n                    >\n                      <Icon size={30} icon=\"ion-ios-pause\"/>\n                    </button>\n                    <button\n                        className={isDL() ? \"active\" : null}\n                        type=\"button\"\n                        disabled={isDone()}\n                        onClick={() => {\n                          setActionLoading(true)\n                          resume(hash)\n                        }}\n                    >\n                      <Icon size={30} icon=\"ion-ios-play\"/>\n                    </button>\n                  </div>\n            }\n          </div>\n        </div>\n    )\n  }else{\n    return null\n  }\n}\n\nexport default TorrentBox;\n","export const getStorage = (key=\"\") => {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport const saveStorage = async (key=\"\",value={}) => {\n  new Promise ( (resolve) => {\n    localStorage.setItem(key,JSON.stringify(value));\n    setInterval(()=>{\n      if(localStorage.getItem(key) !== undefined){\n        resolve()\n      }\n    },100)\n  })\n}\n","import roundLogo from \"../images/logo_round.png\";\nimport React from \"react\";\n\nconst LogoHeader = () => {\n    return (\n        <div className=\"LogoHeader\">\n            <img className=\"loginImage\" alt=\"iQbit logo\" src={roundLogo}/>\n            <span className={\"iqbit\"}>iQbit</span>\n            <span className={\"poweredBy\"}>Powered by qBitTorrent</span>\n            <hr/>\n        </div>\n    )\n}\n\nexport default LogoHeader;\n","import {useEffect,useRef} from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, {useState} from \"react\";\nimport {ProgressBar} from \"react-onsenui\";\nimport fileSize from \"filesize\";\nimport stateDictionary from './stateDictionary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faBolt, faDownload,\n    faFolderOpen,\n    faPallet,\n    faPalletAlt,\n    faShareAlt,\n    faStopwatch,\n    faTachometerAltFastest,\n    faTachometerAltSlowest,\n    faUpload,\n    faUserAstronaut,\n    faUserSecret\n} from '@fortawesome/pro-regular-svg-icons'\nimport useInterval from \"../utils/useInterval\";\nimport {sync} from \"../utils/TorrClient\";\n\nconst TorrentInfo = (props) => {\n    const {item} = props;\n    const {name} = item\n    const {hash} = props\n\n    const [torrent,setTorrent] = useState(item)\n\n    console.log(item,hash)\n\n    useInterval(() => {\n        sync().then(resp => {\n            setTorrent(resp.data.torrents[hash])\n        });\n    },1000)\n\n    const AmountRow = [\n        {\n            value: `${fileSize(torrent.downloaded)} / ${fileSize(torrent.size)}`,\n            icon: faDownload,\n            label: \"Downloaded\"\n        },\n        {\n            value: fileSize(torrent.downloaded_session),\n            icon: faPallet,\n            label: \"Downloaded This Session\"\n        },\n        {\n            value: fileSize(torrent.uploaded),\n            icon: faUpload,\n            label: \"Uploaded\"\n        },\n        {\n            value: fileSize(torrent.uploaded_session),\n            icon: faPalletAlt,\n            label: \"Uploaded This Session\"\n        },\n        {\n            value: torrent.ratio?torrent.ratio.toFixed(2):0,\n            icon: faShareAlt,\n            label: \"Share Ratio\"\n        },\n    ]\n\n    const date = new Date(0);\n    date.setSeconds(torrent.eta); // specify value for SECONDS here\n    const timeString = date.toISOString().substr(11, 8);\n\n    const SpeedsRow = [\n        {\n            value: `${fileSize(torrent.dlspeed)}/s`,\n            icon: torrent.dlspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: `${fileSize(torrent.upspeed)}/s`,\n            icon: torrent.upspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: torrent.eta !== 8640000 ?\n                timeString\n                :0\n            ,\n            icon: faStopwatch,\n            label: \"Estimate Time Left\"\n        },\n    ]\n\n    const DataRow = [\n        {\n            value: `${torrent.num_seeds} (${torrent.num_complete})`,\n            icon: faUserAstronaut,\n            label: \"Seeds\"\n        },\n        {\n            value: `${torrent.num_leechs} (${torrent.num_incomplete})`,\n            icon: faUserSecret,\n            label: \"Leechs\"\n        },\n        {\n            value: torrent.save_path,\n            icon: faFolderOpen,\n            label: \"Save Path\"\n        },\n    ]\n\n    const StateRow = [\n        {\n            value: stateDictionary[torrent.state].short,\n            icon: faBolt,\n            label: stateDictionary[torrent.state].long\n        },\n    ]\n\n    return(\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{name}</h2>\n                <div>\n                    <span className={\"ProgressAmount\"}>{(torrent.progress*100).toFixed(1)}%</span>\n                    <ProgressBar\n                        value={torrent.progress*100}\n                        secondaryValue={100}\n                    />\n                </div>\n            </div>\n            <StatsRow data={StateRow} title={\"CurrentState\"}/>\n            <StatsRow data={DataRow} title={\"Metadata\"}/>\n            <StatsRow data={SpeedsRow} title={\"Speeds\"}/>\n            <StatsRow data={AmountRow} title={\"Amounts\"}/>\n        </div>\n    )\n}\n\nexport const StatsRow = (props) => {\n    return(\n        <div className={\"infoStatsRowWrapper\"}>\n            <div className={\"infoTitleBox\"}>\n                <h3>{props.title}</h3>\n            </div>\n            <div className={\"infoStatsRow\"}>\n                {props.data.map((item,key) =>\n                    <div className={\"infoStatBox\"} key={key}>\n                        <h4 className={\"infoStat\"}>{item.value}</h4>\n                        <div>\n                            <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                            <span className={\"infoStatLabel\"}>{item.label}</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default TorrentInfo;\n","import React, {useEffect,useState,useContext} from 'react';\nimport {Button, ActionSheet, ActionSheetButton, AlertDialog, AlertDialogButton} from 'react-onsenui'; // Only import the necessary components\nimport {sync, login, remove } from '../utils/TorrClient';\nimport TorrentBox from './TorrentBox';\nimport { Context } from \"../App\"\nimport { saveStorage } from '../utils/Storage';\nimport LogoHeader from \"./LogoHeader\";\nimport TorrentInfo from \"./TorrentInfo\"\nimport useInterval from \"../utils/useInterval\";\n\nconst Torrents = (props) =>{\n  const {settings,updateSettings,installed, updateModal} = useContext(Context);\n\n  const [feedback, setFeedback] = useState(null)\n  const [username,setUsername] = useState(undefined)\n  const [password,setPassword] = useState(undefined)\n  const [torrentAction, setTorrentAction] = useState({\n    open: false,\n    options: [{\n        label: \"More Info\",\n        modifier: null,\n        onclick: () => false,\n      },\n      {\n        label: \"Remove Torrent\",\n        modifier: \"destructive\",\n        onclick: () => false,\n      },\n    ]\n  })\n  const [deleteAlert, setDeleteAlert] = useState({\n    open:false,\n    hash:undefined,\n  })\n  const [torrentList,setTorrentList] = useState([])\n  const [torrentData,setTorrentData] = useState({})\n\n\n  const [RID,setRID] = useState(0)\n\n  useInterval(()=>{\n      if(settings.loggedin){\n          sync(RID).then(resp => {\n              const {data} = resp\n\n              if(data.full_update){\n                setTorrentData(data.torrents);\n                setTorrentList(Object.keys(data.torrents));\n              }\n              else{\n\n                if(data.torrents){\n                  let updatedObj = torrentData;\n\n                  const keysArray = Object.keys(data.torrents);\n\n                  keysArray.forEach((hash) => {\n\n                      if(updatedObj[hash]===undefined){\n                          updatedObj[hash]={};\n                      }\n\n                      const properties = Object.keys(data.torrents[hash]);\n\n                      properties.forEach((property)=>{\n                        updatedObj[hash][property] = data.torrents[hash][property]\n                      })\n\n                    console.log(RID,properties)\n                   })\n\n                  setTorrentData(updatedObj);\n                }\n\n              }\n\n              setRID(RID+1)\n          });\n      }\n  },1000)\n\n  useEffect(()=>{\n    console.log(torrentData)\n  },[torrentData])\n\n  const handleSignin = () => {\n\n    login({username,password}).then(response => {\n\n      if(response.data===\"Ok.\"){\n\n        const userObject = {\n          username,\n          password,\n          loggedin:true,\n        };\n\n        saveStorage(\"user\", userObject).then(() => {\n          updateSettings(userObject)\n        })\n\n      }else{\n        setFeedback(\"Login Unauthorized.\")\n      }\n\n    }).catch(() => {\n      setFeedback(\"Too many login attempts. This IP is temporarily blocked. You can restart qBitTorrent to reset this.\")\n    })\n  }\n\n  const LoginForm = () => {\n    return (\n      <div className={\"torrentBox login\"}>\n        <LogoHeader/>\n        <h2 className=\"centered\">Welcome To Your WebUI</h2>\n        <div className=\"inputGroup\">\n          <label htmlFor=\"username-input\">\n            <span>Username</span>\n            <input\n                id=\"username-input\"\n                type=\"text\"\n                onChange={(event) => setUsername(event.target.value)}\n                placeholder=\"Username\"\n            />\n          </label>\n          <label htmlFor=\"password-input\">\n            <span>Password</span>\n            <input\n                id=\"password-input\"\n                type=\"password\"\n                onChange={(event) => setPassword(event.target.value)}\n                placeholder=\"Password\"/>\n          </label>\n        </div>\n        {feedback?<p className=\"feedback\">{feedback}</p>:null}\n        <Button modifier=\"large--quiet\" onClick={()=>handleSignin()}>\n          Sign In\n        </Button>\n      </div>\n    )\n  }\n\n  const handleMoreButton = (hash,item) =>{\n    setTorrentAction({\n      open: true,\n      options: [\n        {\n          label: \"Remove Torrent\",\n          modifier: \"destructive\",\n          onclick: () => setDeleteAlert({open:true,hash}),\n        },\n        {\n          label: \"More Info\",\n          modifier: null,\n          onclick: () => updateModal({open: true,content:<TorrentInfo item={item} hash={hash} /> }),\n        },\n      ]\n    })\n  }\n\n  return (\n      <>\n\n        {\n          settings.loggedin?\n              torrentList.map((hash) =>\n            <TorrentBox\n                item={torrentData[hash]}\n                fullData={torrentData}\n                key={hash}\n                hash = {hash}\n                filter={props.segment}\n                openAction={(hash,item) => handleMoreButton(hash,item)}\n            />)\n            :null\n        }\n\n        {settings.loggedin? null : LoginForm()}\n\n        {/*More info Action Sheet*/}\n        <ActionSheet\n            className={installed?\"installed\":null}\n            isOpen={torrentAction.open}\n            isCancelable={true}\n            onCancel={()=>setTorrentAction({open:false,options: torrentAction.options})}\n        >\n          {\n            torrentAction.options.map((option,key) =>\n              <ActionSheetButton\n                  key={key}\n                  modifier={option.modifier}\n                  onClick={()=> {\n                    setTorrentAction({open: false,options: torrentAction.options})\n                    option.onclick()\n                  }}\n              >{option.label}</ActionSheetButton>)\n          }\n\n          <ActionSheetButton\n              onClick={()=>\n                  setTorrentAction({\n                    open:false,\n                    options: torrentAction.options\n                  })\n              }>Cancel\n          </ActionSheetButton>\n        </ActionSheet>\n\n        {/*Alert Dialog Before Deleting Files*/}\n        <AlertDialog\n            isOpen={deleteAlert.open}\n            onCancel={()=>setDeleteAlert({open: false})}\n            cancelable\n        >\n          <div className=\"alert-dialog-title\">Delete Files</div>\n          <div className=\"alert-dialog-content\">\n            Would you also like to delete the files downloaded?\n          </div>\n          <div className=\"alert-dialog-footer\">\n\n            <AlertDialogButton\n                onClick={()=> {\n                  setDeleteAlert({open: false});\n                  remove(deleteAlert.hash, true);\n                }}\n                className={\"danger\"}\n            >\n              Yes, Delete Files\n            </AlertDialogButton>\n\n            <AlertDialogButton\n                onClick={()=> {\n                  setDeleteAlert({open: false});\n                  remove(deleteAlert.hash, false);\n                }}\n            >\n              No, Keep Files\n            </AlertDialogButton>\n\n            <AlertDialogButton onClick={()=>setDeleteAlert({open: false})}>Cancel</AlertDialogButton>\n          </div>\n        </AlertDialog>\n      </>\n  )\n}\n\nexport default Torrents\n","import React, {useContext, useState} from \"react\";\nimport {IonLabel, IonSegment, IonSegmentButton} from \"@ionic/react\";\nimport Torrents from \"./Torrents\";\nimport {Context} from \"../App\";\n\nconst TorrentsCol = () => {\n    const {settings} = useContext(Context)\n\n    const [segment,setSegment] = useState(\"all\");\n\n    const SegmentPicker = () => {\n\n        if(settings.loggedin){\n            return(\n                <div className={\"segmentPicker\"}>\n                    <IonSegment mode={\"ios\"} value={segment} onIonChange={e => {\n                        setTimeout(()=>{\n                            setSegment(e.detail.value)\n                        },200)\n                    }}>\n                        <IonSegmentButton mode={\"ios\"} value=\"all\">\n                            <IonLabel>All Torrents</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"complete\">\n                            <IonLabel>Complete</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"downloading\">\n                            <IonLabel>Downloading</IonLabel>\n                        </IonSegmentButton>\n                    </IonSegment>\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    return(\n        <div  className={\"torrentsCol\"}>\n            <SegmentPicker/>\n            <Torrents segment={segment}/>\n        </div>\n    )\n}\n\nexport default TorrentsCol\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n    faBox,\n    faFilmCanister,\n    faMedal,\n    faTv,\n    faUserAstronaut,\n    faUsersClass,\n    faComments, faStopwatch, faFilm\n    ,faFolderDownload\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst YTSSearch = (props) => {\n    const {updateModal} = useContext(Context)\n    const [searchTerm,setSearchTerm] = useState(undefined)\n    const [searchLoading,setSearchLoading] = useState(false)\n    const [searchResults,setSearchResults] = useState([])\n\n    const submitQuery = () => {\n        setSearchLoading(true);\n        axios.get(\"https://yts.mx/api/v2/list_movies.json\",{\n            params:{\n                limit:null,                     //Integer between 1 - 50 (inclusive)\n                page:null,                      //Integer (Unsigned)\n                quality:null,                   //String (720p, 1080p, 2160p, 3D)\n                minimum_rating:null,            //Integer between 0 - 9 (inclusive)\n                query_term:searchTerm,          //String\n                genre:null,                     //String from http://www.imdb.com/genre/\n                sorty_by:null,                  //String (title, year, rating, peers, seeds, download_count, like_count, date_added)\n                with_rt_ratings:true,           //Bool\n            }\n        }).then(response => {\n            const moviesArray = response.data.data.movies\n            setSearchResults(moviesArray);\n            setSearchLoading(false);\n        })\n    }\n\n    return (\n        <div>\n            <div className={\"searchInputRow\"}>\n                <SearchInput\n                    className={\"searchInput\"}\n                    style={{height:\"100%\"}}\n                    placeholder={`Search ${props.category}`}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n                />\n                {\n                    searchLoading ? <IonSpinner name={\"lines\"}/> :\n                        <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n                            <Icon icon={\"ion-ios-search\"} size={25} />\n                        </Fab>\n                }\n            </div>\n            <div className={\"searchResults\"}>\n                {\n                    searchResults.map((item,key) =>\n                        <div\n                            role={\"button\"}\n                            className={\"MoviePoster\"}\n                            key={key}\n                            style={{\n                                backgroundImage: `url(${item.medium_cover_image}), url(${imageMissing})`,\n                            }}\n                            onClick={()=>{\n                                updateModal({open: true,content:<YTSModalInfo item={item}/>})\n                            }}\n                        >\n                            <span>{item.title}</span>\n                        </div>\n\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const YTSModalInfo = (props) => {\n    const { item } = props\n    const {updateAlert} = useContext(Context)\n\n    const TorrentAttr = (props) => {\n        return (\n            <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n                {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n                <span>{props.value}</span>\n            </span>\n        )\n    }\n\n    const otherInfo = [\n        {\n            value: item.language,\n            icon: faComments,\n            label: \"Language\"\n        },\n        {\n            value: item.rating,\n            icon: faMedal,\n            label: \"Ratings\"\n        },\n        {\n            value: item.runtime+\" Minutes\",\n            icon: faStopwatch,\n            label: \"Runtime\"\n        },\n        {\n            value: item.genres.join(\", \"),\n            icon: faFilm,\n            label: \"Genres\"\n        },\n    ]\n\n    const [downloadsStarted,setDownloadsStarted] = useState([])\n\n    const handleDownload = (torrent,title,key) =>{\n\n        addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n        .then(response=>{\n            if(response.data === \"Ok.\"){\n                setDownloadsStarted([...downloadsStarted, key])\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        })\n    };\n\n    return (\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{item.title_long}</h2>\n                <hr/>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Torrents</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {item.torrents.map((thisTorrent,key) =>\n                        <div className={\"infoStatBox flex-row w100\"} key={key}>\n                            <div className={\"attrBox\"}>\n                                <TorrentAttr icon={faTv} value={thisTorrent.quality}/>\n                                <TorrentAttr icon={faFilmCanister} value={thisTorrent.type}/>\n                                <TorrentAttr icon={faUserAstronaut} value={thisTorrent.seeds} letter={\"S\"}/>\n                                <TorrentAttr icon={faUsersClass} value={thisTorrent.peers} letter={\"P\"}/>\n                                <TorrentAttr icon={faBox} value={thisTorrent.size}/>\n                            </div>\n                            {\n                                downloadsStarted.includes(key) ?\n                                    <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                                    :\n                                    <Button class={\"downloadBtn\"}\n                                            onClick={() => handleDownload(thisTorrent, item.title_long, key)}\n                                    >\n                                        Download\n                                    </Button>\n\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Description</h3>\n                </div>\n                <p>{item.description_full}</p>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Other Info</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {otherInfo.map((item,key) =>\n                        <div className={\"infoStatBox\"} key={key}>\n                            <h4 className={\"infoStat\"}>{item.value}</h4>\n                            <div>\n                                <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                                <span className={\"infoStatLabel\"}>{item.label}</span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            {\n                item.yt_trailer_code===\"\"?null:\n                    <div className={\"infoStatsRowWrapper\"}>\n                        <div className={\"infoTitleBox\"}>\n                            <h3>Movie Trailer</h3>\n                        </div>\n                        <iframe\n                            className={\"movieTrailer\"}\n                            title={\"Movie Trailer\"}\n                            width=\"100%\" height=\"450\"\n                            src={\"https://www.youtube.com/embed/\"+item.yt_trailer_code}\n                        />\n                    </div>\n\n            }\n        </div>\n    )\n}\n\nexport default YTSSearch;\n","import React,{useState} from 'react';\nimport YTSLogo from \"../images/logo-YTS.svg\"\nimport YTSSearch from \"../searchAPIs/yts\";\n\nconst Search = (props) =>{\n\n    const [providers] = useState([\n      {\n          logo:YTSLogo,\n          name:\"YTS\",\n          categories:[\"Movies\"],\n          component:(props)=>YTSSearch(props)\n      },\n    ])\n\n    const [selectedProvider,setSelectedProvider] = useState(0)\n    const [selectedCategory,setSelectedCategory] = useState(0)\n\n    return (\n    <div className=\"searchCol\" {...props}>\n        <h3>Select Search Provider</h3>\n        <p>Warning: Be sure to comply with your country's copyright laws when downloading torrents from any of these search engines.</p>\n        <div className={\"providerRow\"}>\n            {providers.map((item,key) =>\n                <button className={key===selectedProvider?\"providerBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedProvider(key)}>\n                    <img alt={\"YTS Logo\"} src={item.logo}/>\n                </button>\n            )}\n        </div>\n        {\n            providers[selectedProvider].categories.length > 1?\n                <div className={\"categoriesRow\"}>\n                    {providers[selectedProvider].categories.map((item,key) =>\n                        <button className={key===selectedCategory?\"categoryBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedCategory(key)}>\n                            <p>{item}</p>\n                        </button>\n                    )}\n                </div>:null\n        }\n        {\n            providers[selectedProvider].component({\n                category:providers[selectedProvider].categories[selectedCategory]\n            })\n        }\n    </div>\n    )\n}\n\nexport default Search\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {List, ListItem, ListHeader, Switch, AlertDialog, Button} from \"react-onsenui\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {\n    faAngleRight,\n    faEdit, faEthernet,\n    faFolderDownload, faFolderMinus,\n    faFolders, faKey,\n    faMinusHexagon, faNetworkWired, faOutlet, faPaintBrushAlt,\n    faUser, faUserLock, faUserRobot, faUsersClass, faWifi\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport {getPrefs, updatePref} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\nimport {saveStorage} from \"../utils/Storage\";\n\nconst Settings = (props) =>{\n\n    const [preferences,setPreferences] = useState({\n        add_trackers: \"\",\n        add_trackers_enabled: null,\n        alt_dl_limit: null,\n        alt_up_limit: null,\n        alternative_webui_enabled: null,\n        alternative_webui_path: \"\",\n        announce_ip: \"\",\n        announce_to_all_tiers: null,\n        announce_to_all_trackers: null,\n        anonymous_mode: null,\n        async_io_threads: null,\n        auto_delete_mode: null,\n        auto_tmm_enabled: null,\n        autorun_enabled: null,\n        autorun_program: \"\",\n        banned_IPs: \"\",\n        bittorrent_protocol: null,\n        bypass_auth_subnet_whitelist: \"\",\n        bypass_auth_subnet_whitelist_enabled: null,\n        bypass_local_auth: null,\n        category_changed_tmm_enabled: null,\n        checking_memory_use: null,\n        create_subfolder_enabled: null,\n        current_interface_address: \"\",\n        current_network_interface: \"\",\n        dht: null,\n        disk_cache: null,\n        disk_cache_ttl: null,\n        dl_limit: null,\n        dont_count_slow_torrents: null,\n        dyndns_domain: \"\",\n        dyndns_enabled: false,\n        dyndns_password: \"\",\n        dyndns_service: null,\n        dyndns_username: \"\",\n        embedded_tracker_port: null,\n        enable_coalesce_read_write: null,\n        enable_embedded_tracker: null,\n        enable_multi_connections_from_same_ip: null,\n        enable_os_cache: null,\n        enable_piece_extent_affinity: null,\n        enable_upload_suggestions: null,\n        encryption: null,\n        export_dir: \"\",\n        export_dir_fin: \"\",\n        file_pool_size: null,\n        incomplete_files_ext: null,\n        ip_filter_enabled: null,\n        ip_filter_path: \"\",\n        ip_filter_trackers: null,\n        limit_lan_peers: null,\n        limit_tcp_overhead: null,\n        limit_utp_rate: null,\n        listen_port: null,\n        locale: \"\",\n        lsd: null,\n        mail_notification_auth_enabled: null,\n        mail_notification_email: \"\",\n        mail_notification_enabled: null,\n        mail_notification_password: \"\",\n        mail_notification_sender: \"\",\n        mail_notification_smtp: \"\",\n        mail_notification_ssl_enabled: false,\n        mail_notification_username: \"\",\n        max_active_downloads: null,\n        max_active_torrents: null,\n        max_active_uploads: null,\n        max_connec: null,\n        max_connec_per_torrent: null,\n        max_ratio: null,\n        max_ratio_act: null,\n        max_ratio_enabled: null,\n        max_seeding_time: null,\n        max_seeding_time_enabled: null,\n        max_uploads: null,\n        max_uploads_per_torrent: null,\n        outgoing_ports_max: null,\n        outgoing_ports_min: null,\n        pex: null,\n        preallocate_all: null,\n        proxy_auth_enabled: null,\n        proxy_ip: \"\",\n        proxy_password: \"\",\n        proxy_peer_connections: null,\n        proxy_port: null,\n        proxy_torrents_only: null,\n        proxy_type: null,\n        proxy_username: \"\",\n        queueing_enabled: null,\n        random_port: null,\n        recheck_completed_torrents: null,\n        resolve_peer_countries: null,\n        rss_auto_downloading_enabled:null,\n        rss_download_repack_proper_episodes:null,\n        rss_max_articles_per_feed:null,\n        rss_processing_enabled:null,\n        rss_refresh_interval:null,\n        rss_smart_episode_filters:\"\",\n        save_path: \"\",\n        save_path_changed_tmm_enabled: false,\n        save_resume_data_interval: null,\n        scan_dirs:{},\n        schedule_from_hour: null,\n        schedule_from_min: null,\n        schedule_to_hour: null,\n        schedule_to_min: null,\n        scheduler_days: null,\n        scheduler_enabled: false,\n        send_buffer_low_watermark: null,\n        send_buffer_watermark: null,\n        send_buffer_watermark_factor: null,\n        slow_torrent_dl_rate_threshold: null,\n        slow_torrent_inactive_timer: null,\n        slow_torrent_ul_rate_threshold: null,\n        socket_backlog_size: null,\n        start_paused_enabled: false,\n        stop_tracker_timeout: null,\n        temp_path: \"\",\n        temp_path_enabled: null,\n        torrent_changed_tmm_enabled: null,\n        up_limit: null,\n        upload_choking_algorithm: null,\n        upload_slots_behavior: null,\n        upnp: null,\n        use_https: null,\n        utp_tcp_mixed_mode: null,\n        web_ui_address: \"\",\n        web_ui_ban_duration: null,\n        web_ui_clickjacking_protection_enabled: null,\n        web_ui_csrf_protection_enabled: null,\n        web_ui_custom_http_headers: \"\",\n        web_ui_domain_list: \"\",\n        web_ui_host_header_validation_enabled: null,\n        web_ui_https_cert_path: \"\",\n        web_ui_https_key_path: \"\",\n        web_ui_max_auth_fail_count: null,\n        web_ui_port: null,\n        web_ui_secure_cookie_enabled: null,\n        web_ui_session_timeout: null,\n        web_ui_upnp: null,\n        web_ui_use_custom_http_headers_enabled: null,\n        web_ui_username: \"\"\n    })\n\n    const [prefsRefresh,setPrefsRefresh] = useState(true)\n\n    const {settings,initialLogin,updateAlert} = useContext(Context)\n\n    useEffect(()=>{\n        if(prefsRefresh){\n            getPrefs().then(response=>{\n                setPreferences(response.data)\n                setPrefsRefresh(false);\n            })\n        }\n    },[initialLogin,prefsRefresh])\n\n    const SwitchRow = (props) =>{\n        return(\n            <ListItem>\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    {console.log(preferences[props.objKey])}\n                    <Switch checked={preferences[props.objKey]} onChange={()=>{\n                        updatePref(`{\"${props.objKey}\":${!preferences[props.objKey]}}`).then(()=>{\n                            setTimeout(()=>{\n                                let updatedObj = {...preferences}\n                                updatedObj[props.objKey] = !preferences[props.objKey];\n                                setPreferences(updatedObj)\n                            },350)\n                        }).catch(()=>{\n                            setPrefsRefresh(true);\n                            updateAlert(\"Settings Update Failed\",\"Settings could not be updated\")\n                        })\n                    }}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const InputRow = (props) =>{\n        return(\n            <ListItem tappable\n                onClick={()=>setAlert({open: true,label: props.title, objKey:props.objKey})}\n            >\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <FontAwesomeIcon icon={faEdit}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const [alert,setAlert] = useState({\n        open:false,\n        label:\"\",\n        objKey:\"\"\n    })\n\n    let alertInput = useRef()\n\n    if(settings.loggedin){\n        return (\n        <div className={\"settingsCol\"}>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Downloads\n                </ListHeader>\n                <SwitchRow\n                    title={\"Create SubFolders\"}\n                    icon={faFolders}\n                    objKey={\"create_subfolder_enabled\"}\n                    color={\"#006ce2\"}\n                />\n                <SwitchRow\n                    title={\"Start Torrent Paused\"}\n                    icon={faMinusHexagon}\n                    objKey={\"start_paused_enabled\"}\n                    color={\"#bf0000\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Paths\n                </ListHeader>\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#2ca700\"}\n                />\n                <SwitchRow\n                    title={\"Temp Folder\"}\n                    icon={faFolderMinus}\n                    objKey={\"temp_path_enabled\"}\n                    color={\"#5b00b6\"}\n                />\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#ea9d00\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Proxy\n                </ListHeader>\n                <InputRow\n                    title={\"Host\"}\n                    icon={faNetworkWired}\n                    objKey={\"proxy_ip\"}\n                    color={\"#00a799\"}\n                />\n                <InputRow\n                    title={\"Port\"}\n                    icon={faEthernet}\n                    objKey={\"proxy_port\"}\n                    color={\"#b600a4\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Peer Connections\"}\n                    icon={faUsersClass}\n                    objKey={\"proxy_peer_connections\"}\n                    color={\"#ea9d00\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Auth Enabled\"}\n                    icon={faUserLock}\n                    objKey={\"proxy_auth_enabled\"}\n                    color={\"#b7ea00\"}\n                />\n                <InputRow\n                    title={\"Proxy Username\"}\n                    icon={faUserRobot}\n                    objKey={\"proxy_username\"}\n                    color={\"#ea5200\"}\n                />\n                <InputRow\n                    title={\"Proxy Password\"}\n                    icon={faKey}\n                    objKey={\"proxy_password\"}\n                    color={\"#ea5200\"}\n                />\n            </List>\n\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    WebUI\n                </ListHeader>\n                <SwitchRow\n                    title={\"Custom WebUI Enabled\"}\n                    icon={faPaintBrushAlt}\n                    objKey={\"alternative_webui_enabled\"}\n                    color={\"#19a700\"}\n                />\n                <InputRow\n                    title={\"WebUI Path\"}\n                    icon={faAngleRight}\n                    objKey={\"alternative_webui_path\"}\n                    color={\"#0086a7\"}\n                />\n                <InputRow\n                    title={\"WebUI IP Address\"}\n                    icon={faWifi}\n                    objKey={\"web_ui_address\"}\n                    color={\"#7a00a7\"}\n                />\n                <InputRow\n                    title={\"WebUI Port\"}\n                    icon={faEthernet}\n                    objKey={\"web_ui_port\"}\n                    color={\"#b60049\"}\n                />\n                <SwitchRow\n                    title={\"WebUI UPnP Enabled\"}\n                    icon={faOutlet}\n                    objKey={\"web_ui_upnp\"}\n                    color={\"#ea9d00\"}\n                />\n                <InputRow\n                    title={\"WebUI Username\"}\n                    icon={faUser}\n                    objKey={\"web_ui_username\"}\n                    color={\"#0069ea\"}\n                />\n                <InputRow\n                    title={\"WebUI Password\"}\n                    icon={faKey}\n                    objKey={\"web_ui_password\"}\n                    color={\"#0069ea\"}\n                />\n            </List>\n            <Button className={\"danger\"} modifier={\"large--quiet\"}\n                onClick={()=> {\n                    window.location.reload();\n                    saveStorage(\"user\", {})\n                }}\n            >\n                Log Out\n            </Button>\n\n\n            <AlertDialog className={\"settingsAlert\"} isOpen={alert.open} onCancel={()=>setAlert({open: false})} modifier={\"rowfooter\"} cancelable>\n                <div className=\"alert-dialog-title\">{alert.label}</div>\n                <div className=\"alert-dialog-content\">\n                    <input ref={alertInput} defaultValue={preferences[alert.objKey]} onChange={()=>console.log(alertInput)} placeholder={\"Enter \"+alert.label}/>\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({open: false})} className=\"alert-dialog-button\">\n                        Cancel\n                    </Button>\n                    <Button onClick={()=>{\n                        updatePref(`{\"${props.objKey}\":\"${alertInput.current.value}\"}`).then(()=>{\n                            setTimeout(()=>{\n                                setPrefsRefresh(true)\n                            },300)\n                        })\n                    }} className=\"alert-dialog-button\">\n                        Save\n                    </Button>\n                </div>\n            </AlertDialog>\n        </div>\n        )\n    }else{\n        return (\n            <div className={\"settingsCol\"}>\n                <h2 style={{textAlign:\"center\"}}>\n                    Settings require login.\n                </h2>\n            </div>\n        )\n    }\n}\n\nexport default Settings\n","import {Icon, ToolbarButton, Popover,Button} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\n\n\nconst TorrentTopControls = () =>{\n    const [addTorrentPopover,setAddTorrentPopover] = useState({\n        open:false,\n        target:null\n    })\n\n    const {bigScreen,updateTorrentList,updateModal,updateAlert} = useContext(Context)\n\n    let AddButton = React.createRef()\n\n    const [torrentURL,setTorrentURL] = useState(null)\n\n    const handleAddTorrent = () =>{\n        addTorrent(torrentURL)\n        .then(response=>{\n            if(response.data===\"Ok.\"){\n                updateTorrentList()\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        }).catch(()=>{\n            updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n        }).finally(()=>{\n            setAddTorrentPopover({open: false,target: addTorrentPopover.target})\n        })\n    }\n\n\n    const AddTorrentModal = () =>{\n        return (\n            <div className={\"modalAddTorrent\"}>\n                <h2>Enter Torrent URL</h2>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"} rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={()=>handleAddTorrent()}\n                >Add Torrent</Button>\n            </div>\n        )\n    }\n\n\n    const handleButtonClick= () =>{\n        if(bigScreen){\n            setAddTorrentPopover({open: true,target:AddButton.current})\n        }else{\n            updateModal({\n                open:true,\n                content:<AddTorrentModal/>,\n                top:window.innerHeight/2,\n            })\n        }\n    }\n\n    return(\n        <div>\n            {/*<ToolbarButton>*/}\n            {/*    <Icon size={30} icon=\"ion-ios-search\" />*/}\n            {/*</ToolbarButton>*/}\n            <ToolbarButton\n                ref={AddButton}\n                onClick={()=>handleButtonClick()}\n            >\n                <Icon size={35} icon=\"ion-ios-add\" />\n            </ToolbarButton>\n            <Popover\n                isOpen={addTorrentPopover.open}\n                onCancel={() => setAddTorrentPopover({open:false,target:addTorrentPopover.target})}\n                getTarget={() => addTorrentPopover.target}\n\n            >\n                <p>Enter Torrent URL</p>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"} rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={()=>handleAddTorrent()}\n                >Add Torrent</Button>\n            </Popover>\n        </div>\n    )\n}\n\nexport default TorrentTopControls;\n","import TorrentsCol from \"./TorrentsCol\";\nimport {Page, Tab, Tabbar, Toolbar} from \"react-onsenui\";\nimport Search from \"./Search\";\nimport Settings from \"./Settings\";\nimport React, {useContext, useState} from \"react\";\nimport {Context} from \"../App\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\n\nconst Tabs = () => {\n    const [activeTab,setActiveTab] = useState(0)\n\n    const pageTitles = [\n        \"Your Torrents\",\n        \"Search\",\n        \"Settings\"\n    ]\n\n    const {settings,bigScreen} = useContext(Context);\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left\">\n                    <h1>\n                        {pageTitles[activeTab]}\n                    </h1>\n                </div>\n                <div className=\"right\">\n                    {settings.loggedin && !bigScreen && activeTab===0?\n                        <TorrentTopControls/>\n                        :null\n                    }\n                </div>\n            </Toolbar>\n            <Tabbar\n                className={\"tabWrapper\"}\n                animation={\"none\"}\n                position='bottom'\n                onPreChange={({index}) => setActiveTab(index)}\n                index={activeTab}\n                renderTabs={(activeIndex) => [\n                    {\n                        content: <Page><TorrentsCol title={pageTitles[0]} active={activeIndex === 0}/></Page>,\n                        tab: <Tab label=\"Torrents\" icon=\"ion-ios-download\"/>\n                    },\n                    {\n                        content: <Page><Search title={pageTitles[1]} active={activeIndex === 1}/></Page>,\n                        tab: <Tab label=\"Search\" icon=\"ion-ios-search\"/>\n                    },\n                    {\n                        content: <Page><Settings title={pageTitles[2]} active={activeIndex === 1}/></Page>,\n                        tab: <Tab label=\"Settings\" icon=\"ion-ios-cog\"/>\n                    },\n                ]\n                }\n            />\n        </>\n    )\n}\n\nexport default Tabs;\n","import TorrentsCol from \"./TorrentsCol\";\nimport {Icon, Page, Toolbar, ToolbarButton} from \"react-onsenui\";\nimport Search from \"./Search\";\nimport React, {useContext} from \"react\";\nimport { Context } from \"../App\"\nimport RoundLogo from \"../images/logo_round.png\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport Settings from \"./Settings\";\n\nconst TabletView = () => {\n\n    const {settings,updateModal} = useContext(Context)\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left tabletHeader\">\n                    <div>\n                        {settings.loggedin?<img className={\"loginImage-small\"} alt={\"iQbit Logo\"} src={RoundLogo}/>:null}\n                        <h1>iQbit</h1>\n                    </div>\n                    {settings.loggedin?\n                        <TorrentTopControls/>\n                        :null\n                    }\n                </div>\n                <div className=\"right\">\n                    <ToolbarButton\n                        onClick={()=>updateModal({\n                            open:true,\n                            content:<Settings/>,\n                        })}\n                    >\n                        <Icon size={35} icon=\"ion-ios-cog\" />\n                    </ToolbarButton>\n                </div>\n            </Toolbar>\n            <Page>\n                <div className=\"tabletView\">\n                    <TorrentsCol/>\n                    <Search/>\n                </div>\n            </Page>\n        </>\n    )\n}\n\nexport default TabletView;\n","import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize;\n","import React, {useEffect, useState} from \"react\";\nimport Draggable from 'react-draggable';\nimport useWindowSize from \"../utils/useWindowSize\";\n\nconst BottomSheet = (props) => {\n\n    const WindowSize = useWindowSize();\n\n    const topDiff = props.top || 100;\n    const leftDiff = props.left || 0;\n    // const open = props.open;\n\n    const [open,setOpen] = useState(false)\n\n    useEffect(()=>{\n        if(props.open){\n            setOpen(true)\n        }else{\n            setOpen(false)\n        }\n    },[props])\n\n    const initialPosition = {x: 0, y: WindowSize.height}\n\n    const finalPosition = {\n        y: topDiff,\n        x: leftDiff,\n    }\n\n    const threshold = .25;\n\n    return (\n        <div className={open?\"BottomSheet open\":\"BottomSheet\"}>\n            <Draggable\n                axis={\"y\"}\n                handle={\".handleArea\"}\n                defaultPosition={initialPosition}\n                position={open?finalPosition:initialPosition}\n                children={\n                    <div className={\"modal\"}>\n                        <span className={\"handleArea\"}><span className={\"handle\"}/></span>\n                        {props.children}\n                    </div>\n                }\n                bounds={{top:topDiff}}\n                onStop={(event)=>{\n                    if(event.pageY > ( WindowSize.height - (WindowSize.height * threshold))){\n                        setOpen(false)\n                        setTimeout(()=>{\n                            props.onDismiss()\n                        },400)\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nexport default BottomSheet\n","import React, {useState, createContext, useEffect} from 'react';\nimport Tabs from './components/Tabs';\nimport TabletView from './components/TabletView';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './App.scss';\nimport { getStorage, saveStorage } from './utils/Storage';\nimport BottomSheet from \"./components/BottomSheet\";\nimport {login} from \"./utils/TorrClient\";\nimport {AlertDialog,Button} from \"react-onsenui\"\n\n\nexport const Context = createContext(null);\n\nconst App = () => {\n\n    const StoredUser = getStorage(\"user\")\n    let templateObject = StoredUser;\n\n    if(StoredUser === null){\n        templateObject = {\n            loggedin:false,\n            username:null,\n            password:null\n        }\n        saveStorage(\"user\",templateObject)\n    }\n\n    const screenWidth = window.innerWidth;\n    const breakpoint = 768;\n\n    const [settings,setSettings] = useState(templateObject);\n    const [bigScreen] = useState(screenWidth > breakpoint)\n    const [installed] = useState(window.matchMedia('(display-mode: standalone)').matches)\n    // const [torrentList,setTorrentList] = useState({needsRefresh:true,list:[]});\n\n    const updateSettings = (settings) => {\n        setSettings(settings);\n    }\n\n    const [modal,setModal] = useState({\n        open:false,\n        content:null\n    })\n\n    const updateModal = (update = {open:true,content:<span/>}) => {\n        setModal(update)\n    }\n\n    useEffect(()=>{\n\n        if(StoredUser.loggedin){\n            login({\n                username:StoredUser.username,\n                password:StoredUser.password\n            })\n        }\n\n    },[StoredUser.loggedin, StoredUser.password, StoredUser.username])\n\n    const [alert,setAlert] = useState({\n        open:false,\n        title:null,\n        message:null\n    })\n\n    const updateAlert = (title,message) => {\n        setAlert({open:true,title,message})\n    }\n\n    const Alert = (props) =>{\n        return(\n            <AlertDialog isOpen={props.open} onCancel={()=>setAlert({open: false,title:alert.title,message:alert.message})} cancelable>\n                <div className=\"alert-dialog-title\">{props.title}</div>\n                <div className=\"alert-dialog-content\">\n                    {props.message}\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({open: false,title:alert.title,message:alert.message})} className=\"alert-dialog-button\">\n                        Ok\n                    </Button>\n                </div>\n            </AlertDialog>\n        )\n    }\n\n    return (\n        <Context.Provider value={{\n            settings,\n            updateSettings,\n            bigScreen,\n            modal,\n            updateModal,\n            installed,\n            updateAlert,\n        }}\n        >\n            <div className={(settings.loggedin ? \"loggedin \":\"login\") + (installed ? \"installed\" : \"\")}>\n                {bigScreen ? <TabletView/> : <Tabs/>}\n                <BottomSheet open={modal.open} onDismiss={()=>setModal({open: false})} top={modal.top?modal.top:bigScreen?25:85} children={modal.content}/>\n                <Alert open={alert.open} title={alert.title} message={alert.message} />\n            </div>\n        </Context.Provider>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_round.651d9c54.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-YTS.fdd85bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagemissing.960d2bd1.png\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t135,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t136,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t137,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t138,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t139,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t140,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t141,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t142,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t143,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t144,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t145,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t146,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t147,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t148,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t149,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t150,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t151,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t152,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t153,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t154,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t155,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t156,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t157,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t158,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t159,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t160,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t161,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t162,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t163,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t164,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t165,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t166,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t167,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t168,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t169,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t170,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t171,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t172,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t173,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t174,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t175,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t176,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t177,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 83;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}