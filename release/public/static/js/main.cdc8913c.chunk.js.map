{"version":3,"sources":["utils/TorrClient.js","components/stateDictionary.js","utils/useInterval.js","components/TorrentInfo.js","components/TorrentBox.js","utils/Storage.js","components/LogoHeader.js","components/Torrents.js","Pages/TorrentsCol.js","searchAPIs/yts.js","searchAPIs/tpb.js","Pages/Search.js","Pages/Settings.js","Pages/Categories.js","components/TorrentsTopControls.js","components/CategoriesTopControls.js","components/Tabs.js","components/TabletView.js","utils/useWindowSize.js","components/BottomSheet.js","utils/useMedia.js","utils/useLocalStorage.js","utils/useDarkMode.js","App.js","serviceWorker.js","index.js","images/logo_round.png","images/imagemissing.png","images/logo-YTS.svg","images/logo-TPB.svg","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["serverAddress","window","location","origin","substring","length","console","log","baseURL","APICall","axios","create","withCredentials","login","a","username","password","get","params","getTorrents","sortKey","reverse","sort","sync","rid","resume","hash","hashes","resumeAll","pause","pauseAll","remove","deleteFiles","addTorrent","url","urls","getPrefs","updatePref","json","getCategories","removeCategories","category","categories","setTorrentCategory","stateDictionary","error","long","short","missingFiles","uploading","pausedUP","queuedUP","stalledUP","checkingUP","forcedUP","allocating","downloading","metaDL","pausedDL","queuedDL","stalledDL","checkingDL","forceDL","checkingResumeData","moving","unknown","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","StatsRow","props","className","title","data","map","item","key","value","icon","label","TorrentInfo","name","useState","torrent","setTorrent","then","resp","torrents","AmountRow","fileSize","downloaded","size","faDownload","downloaded_session","faPallet","uploaded","faUpload","uploaded_session","faPalletAlt","ratio","toFixed","faShareAlt","date","Date","setSeconds","eta","timeString","toISOString","substr","SpeedsRow","dlspeed","faTachometerAltFastest","faTachometerAltSlowest","upspeed","faStopwatch","DataRow","num_seeds","num_complete","faUserAstronaut","num_leechs","num_incomplete","faUserSecret","save_path","faFolderOpen","StateRow","state","faBolt","progress","secondaryValue","TorrentBox","contextCategories","useContext","Context","filter","torrentData","actionLoading","setActionLoading","isDone","isPaused","statsIconStyle","color","isDL","marginRight","setTimeout","installed","updateModal","open","options","modifier","onclick","torrentAction","setTorrentAction","undefined","deleteAlert","setDeleteAlert","moveAlert","setMoveAlert","style","paddingBottom","faCloudUpload","faCloudDownload","faTachometerAltFast","filesize","round","type","onClick","content","handleMoreButton","isOpen","isCancelable","onCancel","option","cancelable","removeFromFeed","Object","keys","saveStorage","Promise","resolve","localStorage","setItem","JSON","stringify","getItem","LogoHeader","alt","src","roundLogo","Torrents","settings","updateSettings","feedback","setFeedback","setUsername","setPassword","torrentList","setTorrentList","setTorrentData","initialLoad","setInitialLoad","setSort","needsFullRefresh","setNeedsRefresh","sortingObj","TorrentArray","hashArray","forEach","push","RID","setRID","loggedin","full_update","updatedObj","property","includes","play","masterButtonsLoading","setMasterButtonsLoading","fullData","segment","hashIndex","indexOf","listToUpdate","splice","htmlFor","onChange","event","target","placeholder","autoCapitalize","autoCorrect","autoComplete","response","userObject","catch","TorrentsCol","setSegment","SegmentPicker","mode","onIonChange","e","detail","YTSModalInfo","updateAlert","TorrentAttr","letter","otherInfo","language","faComments","rating","faMedal","runtime","genres","join","faFilm","downloadsStarted","setDownloadsStarted","title_long","thisTorrent","faTv","quality","faFilmCanister","seeds","faUsersClass","peers","faBox","faFolderDownload","class","encodeURI","handleDownload","description_full","yt_trailer_code","width","height","YTSSearch","searchTerm","setSearchTerm","searchLoading","setSearchLoading","searchResults","setSearchResults","searchReady","setSearchReady","submitQuery","limit","page","minimum_rating","query_term","genre","sorty_by","with_rt_ratings","moviesArray","movies","onKeyPress","role","backgroundImage","medium_cover_image","imageMissing","TPBSearch","q","cat","results","seeders","faUserCowboy","leechers","info_hash","Search","logo","YTSLogo","component","PTB","providers","selectedProvider","setSelectedProvider","selectedCategory","setSelectedCategory","Settings","prefs","cookie","preferences","setPreferences","prefsRefresh","setPrefsRefresh","SwitchRow","backgroundColor","checked","objKey","InputRow","setAlert","faEdit","alert","alertInput","faFolders","faMinusHexagon","faFolderMinus","faNetworkWired","faEthernet","faUserLock","faUserRobot","faKey","faPaintBrushAlt","faAngleRight","faWifi","faOutlet","faUser","reload","ref","defaultValue","updateJSON","textAlign","Categories","setCategories","categoryRefresh","setCategoryRefresh","confirmAlert","setConfirmAlert","TorrentTopControls","addTorrentPopover","setAddTorrentPopover","bigScreen","AddButton","React","createRef","SortButton","torrentURL","setTorrentURL","handleAddTorrent","finally","AddTorrentModal","rows","selected","sortPopover","setSortPopover","top","innerHeight","getTarget","object","updateSorting","CategoriesTopControls","Tabs","activeTab","setActiveTab","pageTitles","obj","animation","position","onPreChange","index","renderTabs","activeIndex","active","toString","tab","TabletView","RoundLogo","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","addEventListener","removeEventListener","BottomSheet","WindowSize","topDiff","leftDiff","left","setOpen","initialPosition","x","y","finalPosition","onDismiss","axis","handle","defaultPosition","children","bounds","onStop","pageY","useMedia","queries","values","mediaQueryLists","matchMedia","getValue","findIndex","mql","matches","setValue","handler","addListener","removeListener","useLocalStorage","initialValue","parse","storedValue","setStoredValue","valueToStore","Function","useDarkMode","enabledState","setEnabledState","prefersDarkMode","enabled","element","document","body","classList","add","createContext","App","setSettings","getStorage","screenWidth","add_trackers","add_trackers_enabled","alt_dl_limit","alt_up_limit","alternative_webui_enabled","alternative_webui_path","announce_ip","announce_to_all_tiers","announce_to_all_trackers","anonymous_mode","async_io_threads","auto_delete_mode","auto_tmm_enabled","autorun_enabled","autorun_program","banned_IPs","bittorrent_protocol","bypass_auth_subnet_whitelist","bypass_auth_subnet_whitelist_enabled","bypass_local_auth","category_changed_tmm_enabled","checking_memory_use","create_subfolder_enabled","current_interface_address","current_network_interface","dht","disk_cache","disk_cache_ttl","dl_limit","dont_count_slow_torrents","dyndns_domain","dyndns_enabled","dyndns_password","dyndns_service","dyndns_username","embedded_tracker_port","enable_coalesce_read_write","enable_embedded_tracker","enable_multi_connections_from_same_ip","enable_os_cache","enable_piece_extent_affinity","enable_upload_suggestions","encryption","export_dir","export_dir_fin","file_pool_size","incomplete_files_ext","ip_filter_enabled","ip_filter_path","ip_filter_trackers","limit_lan_peers","limit_tcp_overhead","limit_utp_rate","listen_port","locale","lsd","mail_notification_auth_enabled","mail_notification_email","mail_notification_enabled","mail_notification_password","mail_notification_sender","mail_notification_smtp","mail_notification_ssl_enabled","mail_notification_username","max_active_downloads","max_active_torrents","max_active_uploads","max_connec","max_connec_per_torrent","max_ratio","max_ratio_act","max_ratio_enabled","max_seeding_time","max_seeding_time_enabled","max_uploads","max_uploads_per_torrent","outgoing_ports_max","outgoing_ports_min","pex","preallocate_all","proxy_auth_enabled","proxy_ip","proxy_password","proxy_peer_connections","proxy_port","proxy_torrents_only","proxy_type","proxy_username","queueing_enabled","random_port","recheck_completed_torrents","resolve_peer_countries","rss_auto_downloading_enabled","rss_download_repack_proper_episodes","rss_max_articles_per_feed","rss_processing_enabled","rss_refresh_interval","rss_smart_episode_filters","save_path_changed_tmm_enabled","save_resume_data_interval","scan_dirs","schedule_from_hour","schedule_from_min","schedule_to_hour","schedule_to_min","scheduler_days","scheduler_enabled","send_buffer_low_watermark","send_buffer_watermark","send_buffer_watermark_factor","slow_torrent_dl_rate_threshold","slow_torrent_inactive_timer","slow_torrent_ul_rate_threshold","socket_backlog_size","start_paused_enabled","stop_tracker_timeout","temp_path","temp_path_enabled","torrent_changed_tmm_enabled","up_limit","upload_choking_algorithm","upload_slots_behavior","upnp","use_https","utp_tcp_mixed_mode","web_ui_address","web_ui_ban_duration","web_ui_clickjacking_protection_enabled","web_ui_csrf_protection_enabled","web_ui_custom_http_headers","web_ui_domain_list","web_ui_host_header_validation_enabled","web_ui_https_cert_path","web_ui_https_key_path","web_ui_max_auth_fail_count","web_ui_port","web_ui_secure_cookie_enabled","web_ui_session_timeout","web_ui_upnp","web_ui_use_custom_http_headers_enabled","web_ui_username","setPrefs","modal","setModal","setContextCategories","setCookie","message","Alert","Provider","update","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids"],"mappings":"kTAEIA,EAAgBC,OAAOC,SAASC,OAEsB,MAAtDH,EAAcI,UAAUJ,EAAcK,OAAS,KACjDL,EAAa,UAAMA,EAAN,MAGfM,QAAQC,IAAIP,GAEZ,IAAMQ,EAAO,UAAMR,EAAN,WAEPS,EAAUC,IAAMC,OAAO,CAC3BH,QAASA,EACTI,iBAAiB,IAGNC,EAAK,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,kBACZP,EAAQQ,IAAI,aAAc,CAC/BC,OAAQ,CAAEH,WAAUC,eAFH,2CAAH,sDAULG,EAAW,uCAAG,0CAAAL,EAAA,6DAAOM,EAAP,+BAAiB,WAAYC,IAA7B,mDAClBZ,EAAQQ,IAAI,gBAAiB,CAClCC,OAAQ,CACNI,KAAMF,EACNC,cAJqB,2CAAH,qDAiBXE,EAAI,uCAAG,WAAOC,GAAP,SAAAV,EAAA,+EACXL,EAAQQ,IAAI,gBAAiB,CAClCC,OAAQ,CACNM,UAHc,2CAAH,sDAQJC,EAAM,uCAAG,wCAAAX,EAAA,6DAAOY,EAAP,+BAAc,GAAd,kBACbjB,EAAQQ,IAAI,kBAAmB,CACpCC,OAAQ,CACNS,OAAQD,MAHQ,2CAAH,qDAQNE,EAAS,uCAAG,sBAAAd,EAAA,+EAChBL,EAAQQ,IAAI,kBAAmB,CACpCC,OAAQ,CACNS,OAAQ,UAHW,2CAAH,qDAQTE,EAAK,uCAAG,wCAAAf,EAAA,6DAAOY,EAAP,+BAAc,GAAd,kBACZjB,EAAQQ,IAAI,iBAAkB,CACnCC,OAAQ,CACNS,OAAQD,MAHO,2CAAH,qDAQLI,EAAQ,uCAAG,sBAAAhB,EAAA,+EACfL,EAAQQ,IAAI,iBAAkB,CACnCC,OAAQ,CACNS,OAAQ,UAHU,2CAAH,qDAQRI,EAAM,uCAAG,0CAAAjB,EAAA,6DAAOY,EAAP,+BAAc,GAAIM,EAAlB,kDACbvB,EAAQQ,IAAI,kBAAmB,CACpCC,OAAQ,CACNS,OAAQD,EACRM,kBAJgB,2CAAH,qDASNC,EAAU,uCAAG,wCAAAnB,EAAA,6DAAOoB,EAAP,+BAAa,GAAb,kBACjBzB,EAAQQ,IAAI,eAAgB,CACjCC,OAAQ,CACNiB,KAAMD,MAHc,2CAAH,qDAQVE,EAAQ,uCAAG,sBAAAtB,EAAA,+EACfL,EAAQQ,IAAI,oBADG,2CAAH,qDAIRoB,EAAU,uCAAG,wCAAAvB,EAAA,6DAAOwB,EAAP,+BAAc,GAAd,kBACjB7B,EAAQQ,IAAI,qBAAsB,CACvCC,OAAQ,CACNoB,WAHoB,2CAAH,qDAQVC,EAAa,uCAAG,sBAAAzB,EAAA,+EACpBL,EAAQQ,IAAI,wBADQ,2CAAH,qDAGbuB,EAAgB,uCAAG,WAAOC,GAAP,SAAA3B,EAAA,+EACvBL,EAAQQ,IAAI,4BAA6B,CAC9CC,OAAQ,CACNwB,WAAYD,MAHc,2CAAH,sDAQhBE,EAAkB,uCAAG,0CAAA7B,EAAA,6DAAOY,EAAP,+BAAc,GAAIe,EAAlB,+BAA6B,GAA7B,kBACzBhC,EAAQQ,IAAI,uBAAwB,CACzCC,OAAQ,CACNS,OAAQD,EACRe,eAJ4B,2CAAH,qDC7ChBG,EA/ES,CACtBC,MAAQ,CACNC,KAAK,kDACLC,MAAM,SAERC,aAAe,CACbF,KAAK,gCACLC,MAAM,iBAERE,UAAY,CACVH,KAAK,wDACLC,MAAM,WAERG,SAAW,CACTJ,KAAK,iDACLC,MAAM,iBAERI,SAAW,CACTL,KAAK,sDACLC,MAAM,sBAERK,UAAY,CACVN,KAAK,wDACLC,MAAM,yBAERM,WAAa,CACXP,KAAK,wDACLC,MAAM,kBAERO,SAAW,CACTR,KAAK,wDACLC,MAAM,mBAERQ,WAAa,CACXT,KAAK,gDACLC,MAAM,oBAERS,YAAc,CACZV,KAAK,4DACLC,MAAM,eAERU,OAAS,CACPX,KAAK,gEACLC,MAAM,qBAERW,SAAW,CACTZ,KAAK,qDACLC,MAAM,UAERY,SAAW,CACTb,KAAK,wDACLC,MAAM,uBAERa,UAAY,CACVd,KAAK,2DACLC,MAAM,WAERc,WAAa,CACXf,KAAK,+DACLC,MAAM,kBAERe,QAAU,CACRhB,KAAK,yDACLC,MAAM,qBAERgB,mBAAqB,CACnBjB,KAAK,sCACLC,MAAM,mBAERiB,OAAS,CACPlB,KAAK,wCACLC,MAAM,mBAERkB,QAAU,CACRnB,KAAK,iBACLC,MAAM,Y,gCCxDKmB,EAjBK,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,KAG1BI,qBAAU,WAKR,IAAME,EAAKC,aAJX,WACEL,EAAcG,YAGaJ,GAC7B,OAAO,kBAAMO,cAAcF,MAC1B,CAACL,KCqHOQ,EAAW,SAACC,GACrB,OACI,yBAAKC,UAAW,uBACZ,yBAAKA,UAAW,gBACZ,4BAAKD,EAAME,QAEf,yBAAKD,UAAW,gBACXD,EAAMG,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACZ,yBAAKL,UAAW,cAAeK,IAAKA,GAChC,wBAAIL,UAAW,YAAaI,EAAKE,OACjC,6BACI,kBAAC,IAAD,CAAiBN,UAAW,eAAgBO,KAAMH,EAAKG,OACvD,0BAAMP,UAAW,iBAAkBI,EAAKI,eASrDC,EArIK,SAACV,GACjB,IAAOK,EAAQL,EAARK,KACAM,EAAQN,EAARM,KACA9D,EAAQmD,EAARnD,KAEP,EAA6B+D,mBAASP,GAAtC,mBAAOQ,EAAP,KAAeC,EAAf,KAEAzB,GAAY,WACR3C,IAAOqE,MAAK,SAAAC,GACRF,EAAWE,EAAKb,KAAKc,SAASpE,SAEpC,KAEF,IAAMqE,EAAY,CACd,CACIX,MAAM,GAAD,OAAKY,IAASN,EAAQO,YAAtB,cAAuCD,IAASN,EAAQQ,OAC7Db,KAAMc,IACNb,MAAO,cAEX,CACIF,MAAOY,IAASN,EAAQU,oBACxBf,KAAMgB,IACNf,MAAO,2BAEX,CACIF,MAAOY,IAASN,EAAQY,UACxBjB,KAAMkB,IACNjB,MAAO,YAEX,CACIF,MAAOY,IAASN,EAAQc,kBACxBnB,KAAMoB,IACNnB,MAAO,yBAEX,CACIF,MAAOM,EAAQgB,MAAMhB,EAAQgB,MAAMC,QAAQ,GAAG,EAC9CtB,KAAMuB,IACNtB,MAAO,gBAITuB,EAAO,IAAIC,KAAK,GACtBD,EAAKE,WAAWrB,EAAQsB,KACxB,IAAMC,EAAaJ,EAAKK,cAAcC,OAAO,GAAI,GAE3CC,EAAY,CACd,CACIhC,MAAM,GAAD,OAAKY,IAASN,EAAQ2B,SAAtB,MACLhC,KAAMK,EAAQ2B,QAAU,EAAIC,IAAyBC,IACrDjC,MAAO,kBAEX,CACIF,MAAM,GAAD,OAAKY,IAASN,EAAQ8B,SAAtB,MACLnC,KAAMK,EAAQ8B,QAAU,EAAIF,IAAyBC,IACrDjC,MAAO,kBAEX,CACIF,MAAuB,QAAhBM,EAAQsB,IACXC,EACC,EAEL5B,KAAMoC,IACNnC,MAAO,uBAIToC,EAAU,CACZ,CACItC,MAAM,GAAD,OAAKM,EAAQiC,UAAb,aAA2BjC,EAAQkC,aAAnC,KACLvC,KAAMwC,IACNvC,MAAO,SAEX,CACIF,MAAM,GAAD,OAAKM,EAAQoC,WAAb,aAA4BpC,EAAQqC,eAApC,KACL1C,KAAM2C,IACN1C,MAAO,UAEX,CACIF,MAAOM,EAAQuC,UACf5C,KAAM6C,IACN5C,MAAO,cAIT6C,EAAW,CACb,CACI/C,MAAOxC,EAAgB8C,EAAQ0C,OAAOrF,MACtCsC,KAAMgD,IACN/C,MAAO1C,EAAgB8C,EAAQ0C,OAAOtF,OAI9C,OACI,yBAAKgC,UAAW,kBACZ,6BACI,4BAAKU,GACL,6BACI,0BAAMV,UAAW,mBAAqC,IAAjBY,EAAQ4C,UAAc3B,QAAQ,GAAnE,KACA,kBAAC,cAAD,CACIvB,MAAwB,IAAjBM,EAAQ4C,SACfC,eAAgB,QAI5B,kBAAC,EAAD,CAAUvD,KAAMmD,EAAUpD,MAAO,iBACjC,kBAAC,EAAD,CAAUC,KAAM0C,EAAS3C,MAAO,aAChC,kBAAC,EAAD,CAAUC,KAAMoC,EAAWrC,MAAO,WAClC,kBAAC,EAAD,CAAUC,KAAMe,EAAWhB,MAAO,cCqN/ByD,EA/TI,SAAC3D,GAClB,IAAQ4D,EAAsBC,qBAAWC,IAAjCF,kBAEFvD,EAAOL,EAAMK,KACbxD,EAAOmD,EAAMnD,KACX8D,EAASN,EAATM,KAEAoD,EAAW/D,EAAX+D,OAIFC,EAAc3D,EAEZoD,GAAaO,GAAe,GAA5BP,SACAtB,GAAQ6B,GAAe,GAAvB7B,IACAoB,GAAUS,GAAe,IAAzBT,MACAN,GAAee,GAAe,GAA9Bf,WACAH,GAAckB,GAAe,GAA7BlB,UACAH,GAAYqB,GAAe,GAA3BrB,QACAH,GAAYwB,GAAe,GAA3BxB,QAER,EAA0C5B,oBAAS,GAAnD,mBAAOqD,EAAP,KAAsBC,EAAtB,KAEMlC,EAAO,IAAIC,KAAK,GACtBD,EAAKE,WAAWC,GAChB,IAAMC,EAAaD,EAAMH,EAAKK,cAAcC,OAAO,GAAI,GAAK,EAEtD6B,EAAS,WACb,QAASV,GAAY,GAGjBW,EAAW,WACf,OAAQb,GACN,IAAK,WAEL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IA2BPc,EAAiB,CACrBC,MAxBW,WACX,OAAQf,GACN,IAAK,cAEL,IAAK,SAEL,IAAK,WAEL,IAAK,YAEL,IAAK,aAEL,IAAK,UAEL,IAAK,qBAEL,IAAK,aACH,OAAO,EACT,QACE,OAAO,GAKJgB,GAAS,UAAY,UAC5BC,YAAa,GAGf9E,qBAAU,WACJuE,GACFQ,YAAW,WACTP,GAAiB,KAChB,OAEJ,CAACD,IAEJ,MAAmCJ,qBAAWC,IAAtCY,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,YAEnB,EAA0C/D,mBAAS,CACjDgE,MAAM,EACNC,QAAS,CACP,CACEpE,MAAO,YACPqE,SAAU,KACVC,QAAS,kBAAM,IAEjB,CACEtE,MAAO,iBACPqE,SAAU,cACVC,QAAS,kBAAM,OAXrB,mBAAOC,EAAP,KAAsBC,EAAtB,KAgBA,EAAsCrE,mBAAS,CAC7CgE,MAAM,EACN/H,UAAMqI,IAFR,mBAAOC,EAAP,KAAoBC,EAApB,KAKA,EAAkCxE,mBAAS,CACzCgE,MAAM,EACN/H,UAAMqI,IAFR,mBAAOG,EAAP,KAAkBC,EAAlB,KAgCA,MACc,gBAAXvB,GAA4BN,EAAW,GAC5B,aAAXM,GAAsC,IAAbN,GACf,QAAXM,EAGE,oCACE,yBAAK9D,UAAU,cACb,4BAAKU,GACL,yBAAKV,UAAU,SACb,+BAAmB,IAAXwD,GAAgB3B,QAAQ,GAAhC,KACS,QAARK,EACC,8BAAOC,GAEP,8BAAOrE,EAAgBwF,GAAOrF,QAGlC,kBAAC,cAAD,CACEqH,MAAO,CAAEC,cAAe,IACxBjF,MAAkB,IAAXkD,EACPC,eAAgB,MAElB,yBAAKzD,UAAU,WACb,yBAAKA,UAAU,YACb,8BACE,kBAAC,IAAD,CACEsF,MAAOlB,EACP7D,KAAM2D,IAAWsB,IAAgBC,MAEnC,0BAAMzF,UAAW,QACdkE,IAAWlB,EAAaH,IAG7B,8BACE,kBAAC,IAAD,CACEyC,MAAOlB,EACP7D,KAAMmF,MAER,0BAAM1F,UAAW,QACdmE,KAAcD,IACX,IACAyB,IAASzB,IAAWxB,EAAUH,EAAS,CAAEqD,MAAO,IAChD,QAIT5B,EACC,kBAAC,IAAD,CAAYtD,KAAM,UAElB,yBAAKV,UAAU,cACb,4BACE6F,KAAK,SACLC,QAAS,kBA/EA,SAAClJ,EAAMwD,GAC9B4E,EAAiB,CACfL,MAAM,EACNC,QAAS,CACP,CACEpE,MAAO,iBACPqE,SAAU,cACVC,QAAS,kBAAMK,EAAe,CAAER,MAAM,EAAM/H,WAE9C,CACE4D,MAAO,YACPqE,SAAU,KACVC,QAAS,kBACPJ,EAAY,CACVC,MAAM,EACNoB,QAAS,kBAAC,EAAD,CAAa3F,KAAMA,EAAMxD,KAAMA,QAG9C,CACE4D,MAAO,oBACPqE,SAAU,KACVC,QAAS,kBAAMO,EAAa,CAAEV,MAAM,EAAM/H,cA0DnBoJ,CAAiBpJ,EAAMwD,KAEtC,kBAAC,OAAD,CAAMgB,KAAM,GAAIb,KAAK,kBAGvB,4BACEP,UAAWmE,IAAa,SAAW,KACnC0B,KAAK,SACLC,QAAS,WACP7B,GAAiB,GACjBE,IAAaxH,EAAOC,GAAQG,EAAMH,KAGpC,kBAAC,OAAD,CAAMwE,KAAM,GAAIb,KAAK,sBAM9BwE,EAAcJ,KACb,kBAAC,cAAD,CACE3E,UAAWyE,EAAY,YAAc,KACrCwB,OAAQlB,EAAcJ,KACtBuB,cAAc,EACdC,SAAU,kBACRnB,EAAiB,CAAEL,MAAM,EAAOC,QAASG,EAAcH,YAGxDG,EAAcH,QAAQzE,KAAI,SAACiG,EAAQ/F,GAAT,OACzB,kBAAC,oBAAD,CACEA,IAAKA,EACLwE,SAAUuB,EAAOvB,SACjBiB,QAAS,WACPd,EAAiB,CACfL,MAAM,EACNC,QAASG,EAAcH,UAEzBwB,EAAOtB,YAGRsB,EAAO5F,UAIZ,kBAAC,oBAAD,CACEsF,QAAS,kBACPd,EAAiB,CACfL,MAAM,EACNC,QAASG,EAAcH,YAJ7B,WAWA,KACHM,EAAYP,KACX,kBAAC,cAAD,CACEsB,OAAQf,EAAYP,KACpBwB,SAAU,kBAAMhB,EAAe,CAAER,MAAM,KACvC0B,YAAU,GAEV,yBAAKrG,UAAU,sBAAf,gBACA,yBAAKA,UAAU,wBAAf,uDAGA,yBAAKA,UAAU,uBACb,kBAAC,oBAAD,CACE8F,QAAS,WACPX,EAAe,CAAER,MAAM,IACvB1H,EAAOiI,EAAYtI,MAAM,GACzBmD,EAAMuG,eAAe1J,IAEvBoD,UAAW,UANb,qBAWA,kBAAC,oBAAD,CACE8F,QAAS,WACPX,EAAe,CAAER,MAAM,IACvB1H,EAAOiI,EAAYtI,MAAM,GACzBmD,EAAMuG,eAAe1J,KAJzB,kBAUA,kBAAC,oBAAD,CACEkJ,QAAS,kBAAMX,EAAe,CAAER,MAAM,MADxC,YAOF,KACHS,EAAUT,MACT,kBAAC,cAAD,CACEsB,OAAQb,EAAUT,KAClBwB,SAAU,kBAAMhB,EAAe,CAAER,MAAM,KACvC0B,YAAU,GAEV,yBAAKrG,UAAU,sBAAf,mBACA,yBAAKA,UAAU,wBAAf,yDAGA,yBAAKA,UAAU,uBACZuG,OAAOC,KAAK7C,GAAmBxD,KAAI,SAACE,GAAD,OAClC,kBAAC,oBAAD,CACEyF,QAAO,sBAAE,sBAAA9J,EAAA,sEACD6B,EAAmBjB,EAAM+G,EAAkBtD,GAAKK,MAD/C,OAEP2E,EAAa,CAAEV,MAAM,EAAO/H,SAFrB,4CAKR+G,EAAkBtD,GAAKK,SAI5B,kBAAC,oBAAD,CACEV,UAAW,SACX8F,QAAS,kBAAMT,EAAa,CAAEV,MAAM,MAFtC,aAYH,MC7UE8B,EAAW,uCAAG,0CAAAzK,EAAA,sDAAOqE,EAAP,+BAAW,GAAGC,EAAd,+BAAoB,GAC7C,IAAIoG,SAAU,SAACC,GACbC,aAAaC,QAAQxG,EAAIyG,KAAKC,UAAUzG,IACxCV,aAAY,gBACuBqF,IAA9B2B,aAAaI,QAAQ3G,IACtBsG,MAEF,QAPqB,2CAAH,qD,iBCUTM,EAXI,WACf,OACI,yBAAKjH,UAAU,cACX,yBAAKA,UAAU,aAAakH,IAAI,aAAaC,IAAKC,MAClD,0BAAMpH,UAAW,SAAjB,SACA,0BAAMA,UAAW,aAAjB,0BACA,+BCgQGqH,EA/PE,SAACtH,GACd,MAAmC6D,qBAAWC,IAAvCyD,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,eAEjB,EAAgC5G,mBAAS,MAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAAgC9G,wBAASsE,GAAzC,mBAAOhJ,EAAP,KAAiByL,EAAjB,KACA,EAAgC/G,wBAASsE,GAAzC,mBAAO/I,EAAP,KAAiByL,EAAjB,KAEA,EAAsChH,mBAAS,IAA/C,mBAAOiH,EAAP,KAAoBC,EAApB,KACA,EAAsClH,mBAAS,IAA/C,mBAAOoD,EAAP,KAAoB+D,EAApB,KACA,EAAqCnH,oBAAS,GAA9C,mBAAOoH,EAAP,KAAmBC,EAAnB,KACA,EAAuBrH,mBAAS,CAACN,IAAI,WAAW9D,SAAQ,IAAxD,mBAAOC,EAAP,KAAYyL,EAAZ,KACA,EAA4CtH,oBAAS,GAArD,mBAAOuH,EAAP,KAAyBC,EAAzB,KAEA1I,qBAAU,WACNwI,EAAQlI,EAAMqI,YACdD,GAAgB,KAClB,CAACpI,EAAMqI,aAET3I,qBAAU,WACHsI,GAAeG,GACd7L,EAAYG,EAAK6D,IAAI7D,EAAKD,SAASuE,MAAM,SAAAC,GACrC,IAAMsH,EAAgBtH,EAAKb,KACvBoI,EAAY,GAEhBD,EAAaE,SAAQ,SAAC3H,GAClB0H,EAAUE,KAAK5H,EAAQhE,SAG3BiL,EAAeS,GACfH,GAAgB,QAG1B,CAACD,IAGH,MAAsBvH,mBAAS,GAA/B,mBAAO8H,EAAP,KAAYC,GAAZ,KAEAtJ,GAAY,WACJkI,EAASqB,UAETlM,EAAKgM,GAAK3H,MAAK,SAAAC,GACX,IAAOb,EAAQa,EAARb,KAEP,GAAIA,EAAK0I,YACLd,EAAe5H,EAAKc,UAEpB3E,EAAYG,EAAK6D,IAAI7D,EAAKD,SAASuE,MAAM,SAAAC,GACrC,IAAMsH,EAAgBtH,EAAKb,KACvBoI,EAAY,GAEhBD,EAAaE,SAAQ,SAAC3H,GAClB0H,EAAUE,KAAK5H,EAAQhE,SAG3BiL,EAAeS,GACfH,GAAgB,WAKpB,GAAIjI,EAAKc,SAAU,CACf,IAAI6H,EAAa9E,EAECwC,OAAOC,KAAKtG,EAAKc,UAEzBuH,SAAQ,SAAC3L,GAEViM,EAAWjM,KACZiM,EAAWjM,GAAQ,IAGJ2J,OAAOC,KAAKtG,EAAKc,SAASpE,IAElC2L,SAAQ,SAACO,GAChBD,EAAWjM,GAAMkM,GAAY5I,EAAKc,SAASpE,GAAMkM,MAGjDlB,EAAYmB,SAASnM,IACrBiL,EAAe,CAACjL,GAAF,mBAAUgL,QAIhCE,EAAee,GAKvBH,GAAOD,EAAM,GAEF,IAARA,GACCT,GAAe,QAI5B,KAEH,IAmEA,GAAuDrH,mBAAS,CAC5D5D,OAAM,EACNiM,MAAK,IAFT,qBAAOC,GAAP,MAA4BC,GAA5B,MAyBA,OApBAzJ,qBAAU,WACHwJ,GAAqBlM,OACpByH,YAAW,WACP0E,GAAwB,CACpBnM,OAAO,EACPiM,KAAMC,GAAqBD,SAEjC,MAGHC,GAAqBD,MACpBxE,YAAW,WACP0E,GAAwB,CACpBnM,MAAOkM,GAAqBlM,MAC5BiM,MAAM,MAEZ,QAER,CAACC,KAGC,oCAEQ3B,EAASqB,SACT,yBAAK3I,UAAW,sBACZ,yBAAKA,UAAU,cAGPiJ,GAAqBlM,MACrB,kBAAC,IAAD,CAAY2D,KAAM,UAClB,4BACImF,KAAK,SACLC,QAAS,WACL9I,IACAkM,GAAwB,CACpBnM,OAAO,EACPiM,KAAMC,GAAqBD,SAInC,kBAAC,OAAD,CAAM5H,KAAM,GAAIb,KAAK,mBAKzB0I,GAAqBD,KACjB,kBAAC,IAAD,CAAYtI,KAAM,UAClB,4BACImF,KAAK,SACLC,QAAS,WACLhJ,IACAoM,GAAwB,CACpBnM,MAAOkM,GAAqBlM,MAC5BiM,MAAM,MAId,kBAAC,OAAD,CAAM5H,KAAM,GAAIb,KAAK,oBAMxC,KAID+G,EAASqB,SACLf,EAAYzH,KAAI,SAACvD,GAAD,OACZ,kBAAC,EAAD,CACIwD,KAAM2D,EAAYnH,GAClBuM,SAAUpF,EACV1D,IAAKzD,EACLA,KAAMA,EACNkH,OAAQ/D,EAAMqJ,QACd9C,eAAgB,SAAC1J,IAvFlB,SAACA,GACpB,IAAMyM,EAAYzB,EAAY0B,QAAQ1M,GAChC2M,EAAe3B,EACrB2B,EAAaC,OAAOH,EAAU,GAC9BxB,EAAe0B,GAmF8BjD,CAAe1J,SAE9C,KAGT0K,EAASqB,SAAW,KA7HrB,yBAAK3I,UAAW,oBACZ,kBAAC,EAAD,MACA,wBAAIA,UAAU,YAAd,yBACA,yBAAKA,UAAU,cACX,2BAAOyJ,QAAQ,kBACX,0CACA,2BACI9J,GAAG,iBACHkG,KAAK,OACL6D,SAAU,SAACC,GAAD,OAAWjC,EAAYiC,EAAMC,OAAOtJ,QAC9CuJ,YAAY,WACZC,eAAgB,OAChBC,YAAa,OACbC,aAAc,UAGtB,2BAAOP,QAAQ,kBACX,0CACA,2BACI9J,GAAG,iBACHkG,KAAK,WACL6D,SAAU,SAACC,GAAD,OAAWhC,EAAYgC,EAAMC,OAAOtJ,QAC9CuJ,YAAY,eAGvBrC,EAAW,uBAAGxH,UAAU,YAAYwH,GAAgB,KACrD,kBAAC,SAAD,CAAQ3C,SAAS,eAAeiB,QAAS,WAnDjD/J,EAAM,CAACE,WAAUC,aAAW4E,MAAK,SAAAmJ,GAE7B,GAAsB,QAAlBA,EAAS/J,KAAgB,CAEzB,IAAMgK,EAAa,CACfjO,WACAC,WACAyM,UAAU,GAGdlC,EAAY,OAAQyD,GAAYpJ,MAAK,WACjCyG,EAAe2C,WAInBzC,EAAY,0BAGjB0C,OAAM,WACL1C,EAAY,4GAgCR,cClHD2C,EAxCK,SAACrK,GACjB,IAAOuH,EAAY1D,qBAAWC,IAAvByD,SAEP,EAA6B3G,mBAAS,OAAtC,mBAAOyI,EAAP,KAAeiB,EAAf,KAEMC,EAAgB,WAElB,OAAGhD,EAASqB,SAEJ,yBAAK3I,UAAW,iBACZ,kBAAC,IAAD,CAAYuK,KAAM,MAAOjK,MAAO8I,EAASoB,YAAa,SAAAC,GAClDjG,YAAW,WACP6F,EAAWI,EAAEC,OAAOpK,SACtB,OAEF,kBAAC,IAAD,CAAkBiK,KAAM,MAAOjK,MAAM,OACjC,kBAAC,IAAD,sBAEJ,kBAAC,IAAD,CAAkBiK,KAAM,MAAOjK,MAAM,YACjC,kBAAC,IAAD,kBAEJ,kBAAC,IAAD,CAAkBiK,KAAM,MAAOjK,MAAM,eACjC,kBAAC,IAAD,uBAMT,MAIf,OACI,yBAAMN,UAAW,eACb,kBAACsK,EAAD,MACA,kBAAC,EAAD,CAAUlC,WAAYrI,EAAMqI,WAAYgB,QAASA,M,mDCqDhDuB,GAAe,SAAC5K,GACzB,IAAQK,EAASL,EAATK,KACDwK,EAAehH,qBAAWC,IAA1B+G,YAEDC,EAAc,SAAC9K,GACjB,OACI,0BAAMC,UAAW,mBACb,kBAAC,IAAD,CAAiBA,UAAW,eAAgBO,KAAMR,EAAMQ,KAAM+E,MAAO,CAACf,YAAYxE,EAAM+K,OAAO,EAAE,QAChG/K,EAAM+K,OAAO,0BAAM9K,UAAW,gBAAiBD,EAAM+K,QAAe,KACrE,8BAAO/K,EAAMO,SAKnByK,EAAY,CACd,CACIzK,MAAOF,EAAK4K,SACZzK,KAAM0K,IACNzK,MAAO,YAEX,CACIF,MAAOF,EAAK8K,OACZ3K,KAAM4K,IACN3K,MAAO,WAEX,CACIF,MAAOF,EAAKgL,QAAQ,WACpB7K,KAAMoC,IACNnC,MAAO,WAEX,CACIF,MAAOF,EAAKiL,OAAOC,KAAK,MACxB/K,KAAMgL,IACN/K,MAAO,WAIf,EAA+CG,mBAAS,IAAxD,mBAAO6K,EAAP,KAAwBC,EAAxB,KAcA,OACI,yBAAKzL,UAAW,kBACZ,6BACI,4BAAKI,EAAKsL,YACV,8BAEJ,yBAAK1L,UAAW,uBACZ,yBAAKA,UAAW,gBACZ,yCAEJ,yBAAKA,UAAW,gBACXI,EAAKY,SAASb,KAAI,SAACwL,EAAYtL,GAAb,OACf,yBAAKL,UAAW,4BAA6BK,IAAKA,GAC9C,yBAAKL,UAAW,WACZ,kBAAC6K,EAAD,CAAatK,KAAMqL,IAAMtL,MAAOqL,EAAYE,UAC5C,kBAAChB,EAAD,CAAatK,KAAMuL,IAAgBxL,MAAOqL,EAAY9F,OACtD,kBAACgF,EAAD,CAAatK,KAAMwC,IAAiBzC,MAAOqL,EAAYI,MAAOjB,OAAQ,MACtE,kBAACD,EAAD,CAAatK,KAAMyL,IAAc1L,MAAOqL,EAAYM,MAAOnB,OAAQ,MACnE,kBAACD,EAAD,CAAatK,KAAM2L,IAAO5L,MAAOqL,EAAYvK,QAG7CoK,EAAiBzC,SAAS1I,GACtB,kBAAC,IAAD,CAAiBL,UAAW,kBAAmBO,KAAM4L,MAErD,kBAAC,SAAD,CAAQC,MAAO,cACPtG,QAAS,kBArC1B,SAAClF,EAAQX,EAAMI,GAElClD,EAAWkP,UAAU,uBAAD,OAAwBzL,EAAQhE,KAAhC,eAA2CqD,EAA3C,2SACnBa,MAAK,SAAAmJ,GACmB,QAAlBA,EAAS/J,KACRuL,EAAoB,GAAD,mBAAKD,GAAL,CAAuBnL,KAE1CuK,EAAY,wBAAwB,uCA8BO0B,CAAeX,EAAavL,EAAKsL,WAAYrL,KADpE,kBAWxB,yBAAKL,UAAW,uBACZ,yBAAKA,UAAW,gBACZ,4CAEJ,2BAAII,EAAKmM,mBAEb,yBAAKvM,UAAW,uBACZ,yBAAKA,UAAW,gBACZ,2CAEJ,yBAAKA,UAAW,gBACX+K,EAAU5K,KAAI,SAACC,EAAKC,GAAN,OACX,yBAAKL,UAAW,cAAeK,IAAKA,GAChC,wBAAIL,UAAW,YAAaI,EAAKE,OACjC,6BACI,kBAAC,IAAD,CAAiBN,UAAW,eAAgBO,KAAMH,EAAKG,OACvD,0BAAMP,UAAW,iBAAkBI,EAAKI,cAOjC,KAAvBJ,EAAKoM,gBAAqB,KACtB,yBAAKxM,UAAW,uBACZ,yBAAKA,UAAW,gBACZ,8CAEJ,4BACIA,UAAW,eACXC,MAAO,gBACPwM,MAAM,OAAOC,OAAO,MACpBvF,IAAK,iCAAiC/G,EAAKoM,qBASxDG,GAxMG,SAAC5M,GACf,IAAO2E,EAAed,qBAAWC,IAA1Ba,YACP,EAAmC/D,wBAASsE,GAA5C,mBAAO2H,EAAP,KAAkBC,EAAlB,KACA,EAAyClM,oBAAS,GAAlD,mBAAOmM,EAAP,KAAqBC,EAArB,KACA,EAAyCpM,mBAAS,IAAlD,mBAAOqM,EAAP,KAAqBC,EAArB,KACA,EAAqCtM,oBAAS,GAA9C,mBAAOuM,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WAChBL,GAAiB,GACjBnR,IAAMO,IAAI,yCAAyC,CAC/CC,OAAO,CACHiR,MAAM,KACNC,KAAK,KACLzB,QAAQ,KACR0B,eAAe,KACfC,WAAWZ,EACXa,MAAM,KACNC,SAAS,KACTC,iBAAgB,KAErB7M,MAAK,SAAAmJ,GACJ,IAAM2D,EAAc3D,EAAS/J,KAAKA,KAAK2N,OACvCZ,EAAiBW,GACjBb,GAAiB,GACjBI,GAAe,OAIvB,OACI,6BACI,yBAAKnN,UAAW,kBACZ,kBAAC,cAAD,CACIA,UAAW,cACXsF,MAAO,CAACoH,OAAO,QACf7C,YAAW,iBAAY9J,EAAMpC,UAC7B+L,SAAU,SAACe,GAAD,OAAOoC,EAAcpC,EAAEb,OAAOtJ,QACxCwN,WAAY,SAACrD,GAAD,MAAe,UAARA,EAAEpK,IAAe+M,IAA0B,QAG9DN,EAAgB,kBAAC,IAAD,CAAYpM,KAAM,UAC9B,kBAAC,MAAD,CAAKmE,SAAU,OAAQiB,QAAS,kBAAIsH,MAChC,kBAAC,OAAD,CAAM7M,KAAM,iBAAkBa,KAAM,OAIpD,yBAAKpB,UAAW,iBAERkN,EACIF,EACAA,EAAc7M,KAAI,SAACC,EAAKC,GAAN,OACd,yBACI0N,KAAM,SACN/N,UAAW,cACXK,IAAKA,EACLiF,MAAO,CACH0I,gBAAgB,OAAD,OAAS5N,EAAK6N,mBAAd,kBAA0CC,IAA1C,MAEnBpI,QAAS,WACLpB,EAAY,CAACC,MAAM,EAAKoB,QAAQ,kBAAC,GAAD,CAAc3F,KAAMA,QAGxD,8BAAOA,EAAKH,WAIf,sEACJ,QCkCVkO,GAnGG,SAACpO,GACK6D,qBAAWC,IAA1Ba,YAAP,IACA,EAAmC/D,wBAASsE,GAA5C,mBAAO2H,EAAP,KAAkBC,EAAlB,KACA,EAAyClM,oBAAS,GAAlD,mBAAOmM,EAAP,KAAqBC,EAArB,KACA,EAAyCpM,mBAAS,IAAlD,mBAAOqM,EAAP,KAAqBC,EAArB,KACA,EAAqCtM,oBAAS,GAA9C,mBAAOuM,EAAP,KAAmBC,EAAnB,KACA,EAA+CxM,mBAAS,IAAxD,mBAAO6K,EAAP,KAAwBC,EAAxB,KACOb,EAAehH,qBAAWC,IAA1B+G,YAEDwC,EAAc,WAClBL,GAAiB,GACjBnR,IAAMO,IAAI,gEAAgE,CACxEC,OAAO,CACLgS,EAAExB,EACFyB,IAAItO,EAAMpC,YAEXmD,MAAK,SAAAmJ,GACN,IAAMqE,EAAUrE,EAAS/J,KACzB1E,QAAQC,IAAI6S,GACZrB,EAAiBqB,GACjBvB,GAAiB,GACjBI,GAAe,OAIbtC,EAAc,SAAC9K,GACnB,OACE,0BAAMC,UAAW,mBACP,kBAAC,IAAD,CAAiBA,UAAW,eAAgBO,KAAMR,EAAMQ,KAAM+E,MAAO,CAACf,YAAYxE,EAAM+K,OAAO,EAAE,QACxG/K,EAAM+K,OAAO,0BAAM9K,UAAW,gBAAiBD,EAAM+K,QAAe,KACrE,8BAAO/K,EAAMO,SAiBnB,OACE,6BACE,yBAAKN,UAAW,kBACd,kBAAC,cAAD,CACEA,UAAW,cACXsF,MAAO,CAACoH,OAAO,QACf7C,YAAW,iBAAY9J,EAAMpC,UAC7B+L,SAAU,SAACe,GAAD,OAAOoC,EAAcpC,EAAEb,OAAOtJ,QACxCwN,WAAY,SAACrD,GAAD,MAAe,UAARA,EAAEpK,IAAe+M,IAA0B,QAG9DN,EAAgB,kBAAC,IAAD,CAAYpM,KAAM,UAChC,kBAAC,MAAD,CAAKmE,SAAU,OAAQiB,QAAS,kBAAIsH,MAClC,kBAAC,OAAD,CAAM7M,KAAM,iBAAkBa,KAAM,OAI5C,yBAAKpB,UAAW,qBAEZkN,EACEF,EACEA,EAAc7M,KAAI,SAACC,EAAKC,GAAN,OAChB,yBAAKL,UAAW,eAAgBK,IAAKA,GACnC,yBAAKL,UAAW,6BACd,yBAAKA,UAAW,WACd,4BAAKI,EAAKM,MACV,kBAACmK,EAAD,CAAatK,KAAMwC,IAAiBzC,MAAOF,EAAKmO,QAASzD,OAAQ,MACjE,kBAACD,EAAD,CAAatK,KAAMiO,IAAclO,MAAOF,EAAKqO,SAAU3D,OAAQ,OAG/DU,EAAiBzC,SAAS1I,GACxB,kBAAC,IAAD,CAAiBL,UAAW,kBAAmBO,KAAM4L,MAErD,kBAAC,SAAD,CAAQC,MAAO,cACPtG,QAAS,kBA9ChB,SAAC,GAA0B,IAAzBlF,EAAwB,EAAxBA,QAASX,EAAe,EAAfA,MAAOI,EAAQ,EAARA,IAEvClD,EAAWkP,UAAU,uBAAD,OAAwBzL,EAAQ8N,UAAhC,eAAgDzO,EAAhD,2SACnBa,MAAK,SAAAmJ,GACiB,QAAlBA,EAAS/J,KACVuL,EAAoB,GAAD,mBAAKD,GAAL,CAAuBnL,KAE1CuK,EAAY,wBAAwB,uCAuCG0B,CAAe,CAAC1L,QAAQR,EAAKH,MAAMG,EAAKM,KAAML,UADrE,iBAWT,sEACF,QCtDEsO,GArDA,SAAC5O,GAEZ,MAAoBY,mBAAS,CAC3B,CACIiO,KAAKC,IACLnO,KAAK,MACL9C,WAAW,CAAC,UACZkR,UAAU,SAAC/O,GAAD,OAAS4M,GAAU5M,KAEjC,CACI6O,KAAKG,IACLrO,KAAK,YACL9C,WAAW,CAAC,QAAQ,QAAQ,eAAe,QAAQ,OAAO,SAC1DkR,UAAU,SAAC/O,GAAD,OAASoO,GAAUpO,OAX5BiP,EAAP,oBAiBA,EAA+CrO,mBAAS,GAAxD,mBAAOsO,EAAP,KAAwBC,EAAxB,KACA,EAA+CvO,mBAAS,GAAxD,mBAAOwO,EAAP,KAAwBC,EAAxB,KAEA,OACA,uCAAKpP,UAAU,aAAgBD,GAC3B,sDACA,wJACA,yBAAKC,UAAW,eACXgP,EAAU7O,KAAI,SAACC,EAAKC,GAAN,OACX,4BAAQL,UAAWK,IAAM4O,EAAiB,qBAAqB,cAAe5O,IAAKA,EAAKyF,QAAS,kBAAIoJ,EAAoB7O,KACrH,yBAAK6G,IAAK,WAAYC,IAAK/G,EAAKwO,YAKxCI,EAAUC,GAAkBrR,WAAWrC,OAAS,EAC5C,yBAAKyE,UAAW,iBACXgP,EAAUC,GAAkBrR,WAAWuC,KAAI,SAACC,EAAKC,GAAN,OACxC,4BAAQL,UAAWK,IAAM8O,EAAiB,qBAAqB,cAAe9O,IAAKA,EAAKyF,QAAS,kBAAIsJ,EAAoB/O,KACrH,2BAAID,QAGT,KAGwB,cAAnC4O,EAAUC,GAAkBvO,MAAsB,kBAAC,GAAD,CAAW/C,SAAUqR,EAAUC,GAAkBrR,WAAWuR,KAG3E,QAAnCH,EAAUC,GAAkBvO,MAAgB,kBAAC,GAAD,CAAW/C,SAAUqR,EAAUC,GAAkBrR,WAAWuR,O,kBC4MrGE,GAlPE,SAACtP,GAEd,MAA6C6D,qBAAWC,IAAjDyD,EAAP,EAAOA,SAASsD,EAAhB,EAAgBA,YAAY0E,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,OACnC,EAAqC5O,mBAAS2O,GAA9C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAuC9O,oBAAS,GAAhD,mBAAO+O,EAAP,KAAoBC,EAApB,KAEAlQ,qBAAU,WACHiQ,GAAgBH,GACfjS,IAAWwD,MAAK,SAAAmJ,GACZwF,EAAexF,EAAS/J,MACxByP,GAAgB,QAG1B,CAACD,EAAapI,EAASqB,SAAS2G,IAElC,IAAMM,EAAY,SAAC7P,GACf,OACI,kBAAC,WAAD,KACI,yBAAKC,UAAU,UACX,yBAAKA,UAAW,UAAWsF,MAAO,CAACuK,gBAAgB9P,EAAMsE,MAAMtE,EAAMsE,MAAM,YACvE,kBAAC,IAAD,CAAiB9D,KAAMR,EAAMQ,QAEhCR,EAAME,OAEX,yBAAKD,UAAU,SACX,kBAAC,SAAD,CAAQ8P,QAASN,EAAYzP,EAAMgQ,QAASrG,SAAU,WAClDnM,EAAW,KAAD,OAAMwC,EAAMgQ,OAAZ,cAAwBP,EAAYzP,EAAMgQ,QAA1C,MAAsDjP,MAAK,WACjE0D,YAAW,WACP,IAAIqE,EAAU,gBAAO2G,GACrB3G,EAAW9I,EAAMgQ,SAAWP,EAAYzP,EAAMgQ,QAC9CN,EAAe5G,KACjB,QACHsB,OAAM,WACLwF,GAAgB,GAChB/E,EAAY,yBAAyB,wCAjBrD,eA0BFoF,EAAW,SAACjQ,GACd,OACI,kBAAC,WAAD,CACI+F,QAAS,kBAAImK,EAAS,CAACtL,MAAM,EAAKnE,MAAOT,EAAME,MAAO8P,OAAOhQ,EAAMgQ,WAEnE,yBAAK/P,UAAU,UACX,yBAAKA,UAAW,UAAWsF,MAAO,CAACuK,gBAAgB9P,EAAMsE,MAAMtE,EAAMsE,MAAM,YACvE,kBAAC,IAAD,CAAiB9D,KAAMR,EAAMQ,QAEhCR,EAAME,OAEX,yBAAKD,UAAU,SACX,kBAAC,IAAD,CAAiBO,KAAM2P,QAV/B,eAiBR,EAAyBvP,mBAAS,CAC9BgE,MAAK,EACLnE,MAAM,GACNuP,OAAO,KAHX,mBAAOI,EAAP,KAAaF,EAAb,KAMIG,EAAa5Q,mBAEjB,OAAG8H,EAASqB,SAER,yBAAK3I,UAAW,eACZ,kBAAC,OAAD,CAAM6E,SAAU,SACZ,kBAAC,aAAD,kBAGA,kBAAC+K,EAAD,CACI3P,MAAO,oBACPM,KAAM8P,KACNN,OAAQ,2BACR1L,MAAO,YAEX,kBAACuL,EAAD,CACI3P,MAAO,uBACPM,KAAM+P,KACNP,OAAQ,uBACR1L,MAAO,aAGf,kBAAC,OAAD,CAAMQ,SAAU,SACZ,kBAAC,aAAD,cAGA,kBAACmL,EAAD,CACI/P,MAAO,oBACPM,KAAM4L,KACN4D,OAAQ,YACR1L,MAAO,YAEX,kBAACuL,EAAD,CACI3P,MAAO,cACPM,KAAMgQ,KACNR,OAAQ,oBACR1L,MAAO,aAGf,kBAAC,OAAD,CAAMQ,SAAU,SACZ,kBAAC,aAAD,cAGA,kBAACmL,EAAD,CACI/P,MAAO,OACPM,KAAMiQ,KACNT,OAAQ,WACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,OACPM,KAAMkQ,KACNV,OAAQ,aACR1L,MAAO,YAEX,kBAACuL,EAAD,CACI3P,MAAO,yBACPM,KAAMyL,KACN+D,OAAQ,yBACR1L,MAAO,YAEX,kBAACuL,EAAD,CACI3P,MAAO,qBACPM,KAAMmQ,KACNX,OAAQ,qBACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,iBACPM,KAAMoQ,KACNZ,OAAQ,iBACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,iBACPM,KAAMqQ,KACNb,OAAQ,iBACR1L,MAAO,aAIf,kBAAC,OAAD,CAAMQ,SAAU,SACZ,kBAAC,aAAD,cAGA,kBAAC+K,EAAD,CACI3P,MAAO,uBACPM,KAAMsQ,KACNd,OAAQ,4BACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,aACPM,KAAMuQ,KACNf,OAAQ,yBACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,mBACPM,KAAMwQ,KACNhB,OAAQ,iBACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,aACPM,KAAMkQ,KACNV,OAAQ,cACR1L,MAAO,YAEX,kBAACuL,EAAD,CACI3P,MAAO,qBACPM,KAAMyQ,KACNjB,OAAQ,cACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,iBACPM,KAAM0Q,KACNlB,OAAQ,kBACR1L,MAAO,YAEX,kBAAC2L,EAAD,CACI/P,MAAO,iBACPM,KAAMqQ,KACNb,OAAQ,kBACR1L,MAAO,aAGf,kBAAC,SAAD,CAAQrE,UAAW,SAAU6E,SAAU,eACnCiB,QAAS,WACL3K,OAAOC,SAAS8V,SAChBzK,EAAY,OAAQ,MAH5B,WAUA,kBAAC,cAAD,CAAazG,UAAW,gBAAiBiG,OAAQkK,EAAMxL,KAAMwB,SAAU,kBAAI8J,EAAS,CAACtL,MAAM,KAASE,SAAU,YAAawB,YAAU,GACjI,yBAAKrG,UAAU,sBAAsBmQ,EAAM3P,OAC3C,yBAAKR,UAAU,wBACX,2BAAOmR,IAAKf,EAAYvK,KAAM,OAAQuL,aAAc5B,EAAYW,EAAMJ,QAASlG,YAAa,SAASsG,EAAM3P,SAE/G,yBAAKR,UAAU,uBACX,kBAAC,SAAD,CAAQ8F,QAAS,kBAAImK,EAAS,6BAAIE,GAAL,IAAWxL,MAAM,MAAS3E,UAAU,uBAAjE,UAGA,kBAAC,SAAD,CAAQ8F,QAAS,WACb,IAAIuL,EAAa,GACjBA,EAAWlB,EAAMJ,QAAUK,EAAW1Q,QAAQY,MAE9C/C,EAAWuJ,KAAKC,UAAUsK,IAAavQ,MAAK,WACxC0D,YAAW,WACPmL,GAAgB,KAClB,SAEP3P,UAAU,uBATb,WAkBR,yBAAKA,UAAW,eACZ,wBAAIsF,MAAO,CAACgM,UAAU,WAAtB,6BC3KDC,GAzEI,SAACxR,GAClB,IAAQ4D,EAAsBC,qBAAWC,IAAjCF,kBAER,EAAoChD,mBAASgD,GAA7C,mBAAO/F,EAAP,KAAmB4T,EAAnB,KACA,EAA8C7Q,mBAASgD,GAAvD,mBAAO8N,EAAP,KAAwBC,EAAxB,KAEAjS,qBAAU,WACJgS,GACFhU,IAAgBqD,MAAK,SAACmJ,GACpBuH,EAAcvH,EAAS/J,MACvBwR,GAAmB,MAInB/N,IAAsB/F,GACxB4T,EAAc5T,KAEf,CAAC+F,EAAmB/F,EAAY6T,IAEnC,MAAwC9Q,mBAAS,CAAEgE,MAAM,EAAOjE,KAAM,KAAtE,mBAAOiR,EAAP,KAAqBC,EAArB,KAEA,OACE,yBAAK5R,UAAW,eACbuG,OAAOC,KAAK5I,GAAYuC,KAAI,SAACC,EAAMC,GAAP,OAC3B,yBAAKL,UAAW,cAAeK,IAAKA,GAClC,wBAAIL,UAAW,SAAUpC,EAAWwC,GAAMM,MAC1C,yBAAKV,UAAW,aACd,wCACA,4BACEA,UAAW,SACX8F,QAAS,kBACP8L,EAAgB,CAAEjN,MAAM,EAAMjE,KAAM9C,EAAWwC,GAAMM,SAHzD,eAWLiR,GACC,kBAAC,cAAD,CACE1L,OAAQ0L,EAAahN,KACrBwB,SAAU,kBAAMwL,EAAa,CAAEhN,MAAM,EAAOjE,KAAM,MAClD2F,YAAU,GAEV,yBAAKrG,UAAU,sBAAf,UAA4C2R,EAAajR,MACzD,yBAAKV,UAAU,wBAAf,kDAGA,yBAAKA,UAAU,uBACb,kBAAC,oBAAD,CACE8F,QAAO,sBAAE,sBAAA9J,EAAA,sEACD0B,EAAiBiU,EAAajR,MAD7B,OAEPgR,GAAmB,GACnBE,EAAgB,CAAEjN,MAAM,EAAOjE,KAAM,KAH9B,2CAKT0L,MAAO,UANT,wBAWA,kBAAC,oBAAD,CACEtG,QAAS,kBAAM8L,EAAgB,CAAEjN,MAAM,EAAOjE,KAAM,OADtD,cCgGGmR,GA5JY,SAAC9R,GACxB,MAAkDY,mBAAS,CACvDgE,MAAM,EACNiF,OAAQ,OAFZ,mBAAOkI,EAAP,KAA0BC,EAA1B,KAKA,EAAwDnO,qBAAWC,IAAlDmO,GAAjB,EAAO1K,SAAP,EAAiB0K,WAAWtN,EAA5B,EAA4BA,YAAakG,EAAzC,EAAyCA,YAErCqH,EAAYC,IAAMC,YAClBC,EAAaF,IAAMC,YAEvB,EAAoCxR,mBAAS,MAA7C,mBAAO0R,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,WACrBpV,EAAWkV,GACNvR,MAAK,SAAAmJ,GACFzO,QAAQC,IAAIwO,EAAS/J,MACC,QAAlB+J,EAAS/J,KACT0K,EAAY,oBAAqB,wCAEjCA,EAAY,wBAAyB,uCAE1CT,OAAM,WACTS,EAAY,wBAAyB,uCACtC4H,SAAQ,WACPT,EAAqB,CAACpN,MAAM,EAAOiF,OAAQkI,EAAkBlI,aAK/D6I,EAAkB,WACpB,OACI,yBAAKzS,UAAW,mBACZ,iDACA,8BAAU0J,SAAW,SAAAC,GAAK,OAAI2I,EAAc3I,EAAMC,OAAOtJ,QAASuJ,YAAa,uBACrE6I,KAAM,KAChB,kBAAC,SAAD,CACI7N,SAAU,eACViB,QAAS,kBAAMyM,MAFnB,iBAqBZ,EAAsC5R,mBAAS,CAACgE,MAAM,EAAOgO,SAAU,IAAvE,mBAAOC,EAAP,KAAoBC,EAApB,KA0CA,OACI,6BACI,kBAAC,gBAAD,CACI1B,IAAKiB,EACLtM,QAAS,WA3CjB+M,EAAe,CAAClO,MAAM,EAAMgO,SAAUC,EAAYD,aA6C1C,kBAAC,OAAD,CAAMvR,KAAM,GAAIb,KAAK,kBAEzB,kBAAC,gBAAD,CACI4Q,IAAKc,EACLnM,QAAS,WA/DbkM,EACAD,EAAqB,CAACpN,MAAM,EAAMiF,OAAQqI,EAAUvS,UAEpDgF,EAAY,CACRC,MAAM,EACNoB,QAAS,kBAAC0M,EAAD,MACTK,IAAK3X,OAAO4X,YAAc,MA2D1B,kBAAC,OAAD,CAAM3R,KAAM,GAAIb,KAAK,iBAGzB,kBAAC,UAAD,CACI0F,OAAQ6L,EAAkBnN,KAC1BwB,SAAU,kBAAM4L,EAAqB,CAACpN,MAAM,EAAOiF,OAAQkI,EAAkBlI,UAC7EoJ,UAAW,kBAAMlB,EAAkBlI,QACnC5J,UAAW,qBAEX,gDACA,8BAAU0J,SAAW,SAAAC,GAAK,OAAI2I,EAAc3I,EAAMC,OAAOtJ,QAASuJ,YAAa,uBACrE6I,KAAM,KAChB,kBAAC,SAAD,CACI7N,SAAU,eACViB,QAAS,kBAAMyM,MAFnB,gBAMJ,kBAAC,UAAD,CACItM,OAAQ2M,EAAYjO,KACpBwB,SAAU,kBAAM0M,EAAe,CAAClO,MAAM,EAAOgO,SAAUC,EAAYD,YACnEK,UAAW,kBAAMZ,EAAW1S,SAC5BM,UAAW,sBAEX,kBAAC,OAAD,KAxEW,CACnB,CACIiT,OAAQ,CACJ5S,IAAK,WACL9D,SAAS,GAEbiE,MAAO,uBAEX,CACIyS,OAAQ,CACJ5S,IAAK,WACL9D,SAAS,GAEbiE,MAAO,uBAEX,CACIyS,OAAQ,CACJ5S,IAAK,OACL9D,SAAS,GAEbiE,MAAO,iBAEX,CACIyS,OAAQ,CACJ5S,IAAK,OACL9D,SAAS,GAEbiE,MAAO,kBA+CoBL,KAAI,SAACiG,EAAQ/F,GAAT,OACf,kBAAC,WAAD,CACIwE,SAAU,cACVxE,IAAKA,EACLyF,QAAS,kBA/Cf,SAACmN,EAAQ5S,GAC3BwS,EAAe,CAAClO,MAAM,EAAOgO,SAAUtS,IACvCN,EAAMmT,cAAcD,GA6CmBC,CAAc9M,EAAO6M,OAAQ5S,KAE5C,6BACI,kBAAC,QAAD,CAAOK,KAAK,QAAQoP,QAASzP,IAAQuS,EAAYD,WAChDvM,EAAO5F,eC5G7B2S,GAhCe,SAACpT,GAC7B,MAAsCY,mBAAS,CAC7CgE,MAAM,EACNiF,OAAQ,OAFV,mBAKIqI,GALJ,UAKgBC,IAAMC,aAEtB,OACE,6BACE,kBAAC,gBAAD,CAAehB,IAAKc,GAClB,kBAAC,OAAD,CAAM7Q,KAAM,GAAIb,KAAK,mBC0Ed6S,GAtFF,WACX,MAAkCzS,mBAAS,GAA3C,mBAAO0S,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,CAAC,gBAAiB,SAAU,aAAc,YAE7D,EAAgC3P,qBAAWC,IAAnCyD,EAAR,EAAQA,SAAU0K,EAAlB,EAAkBA,UAElB,EAAwBrR,mBAAS,CAAEN,IAAK,WAAY9D,SAAS,IAA7D,mBAAOC,EAAP,KAAayL,EAAb,KAMA,OACE,oCACE,kBAAC,UAAD,KACE,yBAAKjI,UAAU,QACb,4BAAKuT,EAAWF,KAElB,yBAAKrT,UAAU,SACZsH,EAASqB,WAAaqJ,GAA2B,IAAdqB,EAClC,kBAAC,GAAD,CAAoBH,cAAe,SAACM,GAX5CvL,EAWkEuL,MACxD,KACHlM,EAASqB,WAAaqJ,GAA2B,IAAdqB,EAClC,kBAAC,GAAD,MACE,OAGR,kBAAC,SAAD,CACErT,UAAW,aACXyT,UAAW,OACXC,SAAS,SACTC,YAAa,gBAAGC,EAAH,EAAGA,MAAH,OAAeN,EAAaM,IACzCA,MAAOP,EACPQ,WAAY,SAACC,GAAD,MAAiB,CAC3B,CACE/N,QACE,kBAAC,OAAD,CAAM1F,IAAK,GACT,kBAAC,EAAD,CACE+H,WAAY5L,EACZyD,MAAOsT,EAAW,GAClBQ,QAAyB,IAAhBD,GAAmBE,cAIlCC,IAAK,kBAAC,MAAD,CAAKzT,MAAM,WAAWD,KAAK,sBAElC,CACEwF,QACE,kBAAC,OAAD,CAAM1F,IAAK,GACT,kBAAC,GAAD,CACEJ,MAAOsT,EAAW,GAClBQ,QAAyB,IAAhBD,GAAmBE,cAIlCC,IAAK,kBAAC,MAAD,CAAKzT,MAAM,SAASD,KAAK,oBAEhC,CACEwF,QACE,kBAAC,OAAD,CAAM1F,IAAK,GACT,kBAAC,GAAD,CACEJ,MAAOsT,EAAW,GAClBQ,QAAyB,IAAhBD,GAAmBE,cAIlCC,IAAK,kBAAC,MAAD,CAAKzT,MAAM,aAAaD,KAAK,uBAEpC,CACEwF,QACE,kBAAC,OAAD,CAAM1F,IAAK,GACT,kBAAC,GAAD,CACEJ,MAAOsT,EAAW,GAClBQ,QAAyB,IAAhBD,GAAmBE,cAIlCC,IAAK,kBAAC,MAAD,CAAKzT,MAAM,WAAWD,KAAK,uBC/B7B2T,GAhDI,WAEf,MAA+BtQ,qBAAWC,IAAnCyD,EAAP,EAAOA,SAAS5C,EAAhB,EAAgBA,YAEhB,EAAuB/D,mBAAS,CAACN,IAAK,WAAW9D,SAAQ,IAAzD,mBAAOC,EAAP,KAAYyL,EAAZ,KAMA,OACI,oCACI,kBAAC,UAAD,KACI,yBAAKjI,UAAU,qBACX,6BACKsH,EAASqB,SAAS,yBAAK3I,UAAW,mBAAoBkH,IAAK,aAAcC,IAAKgN,MAAa,KAC5F,sCAEH7M,EAASqB,SACN,kBAAC,GAAD,CACIuK,cAAe,SAACM,GAbpCvL,EAawDuL,MAEvC,MAGT,yBAAKxT,UAAU,SACX,kBAAC,gBAAD,CACI8F,QAAS,kBAAIpB,EAAY,CACrBC,MAAK,EACLoB,QAAQ,kBAAC,GAAD,UAGZ,kBAAC,OAAD,CAAM3E,KAAM,GAAIb,KAAK,mBAIjC,kBAAC,OAAD,KACI,yBAAKP,UAAU,cACX,kBAAC,EAAD,CACIoI,WAAY5L,IAEhB,kBAAC,GAAD,U,0CCjBL4X,OA/Bf,WAGI,MAAoCzT,mBAAS,CACzC8L,WAAOxH,EACPyH,YAAQzH,IAFZ,mBAAOoP,EAAP,KAAmBC,EAAnB,KAyBA,OApBA7U,qBAAU,WAEN,SAAS8U,IAELD,EAAc,CACV7H,MAAOtR,OAAOqZ,WACd9H,OAAQvR,OAAO4X,cAWvB,OANA5X,OAAOsZ,iBAAiB,SAAUF,GAGlCA,IAGO,kBAAMpZ,OAAOuZ,oBAAoB,SAAUH,MACnD,IAEIF,GCsCIM,GAhEK,SAAC5U,GAEjB,IAAM6U,EAAaR,KAEbS,EAAU9U,EAAM+S,KAAO,IACvBgC,EAAW/U,EAAMgV,MAAQ,EAG/B,EAAuBpU,oBAAS,GAAhC,mBAAOgE,EAAP,KAAYqQ,EAAZ,KAEAvV,qBAAU,WACHM,EAAM4E,KACLqQ,GAAQ,GAERA,GAAQ,KAEd,CAACjV,IAEH,IAAMkV,EAAkB,CAACC,EAAG,EAAGC,EAAGP,EAAWlI,QAEvC0I,EAAgB,CAClBD,EAAGN,EACHK,EAAGJ,GAKP,OACI,yBAAK9U,UAAW2E,EAAK,mBAAmB,eACpC,yBACI3E,UAAW,qBACX8F,QAAS,kBAAI/F,EAAMsV,eAEvB,6BACI,kBAAC,KAAD,CACIvP,QAAS,SAAC6D,GACNnO,QAAQC,IAAIkO,GACZnO,QAAQC,IAAI,mBAEhB6Z,KAAM,IACNC,OAAQ,cACRC,gBAAiBP,EACjBvB,SAAU/O,EAAKyQ,EAAcH,EAC7BQ,SACI,yBAAKzV,UAAW,SACZ,0BAAMA,UAAW,cAAc,0BAAMA,UAAW,YAC/CD,EAAM0V,UAGfC,OAAQ,CAAC5C,IAAI+B,GACbc,OAAQ,SAAChM,GACFA,EAAMiM,MAAUhB,EAAWlI,OA1BhC,IA0B0CkI,EAAWlI,SAC/CsI,GAAQ,GACRxQ,YAAW,WACPzE,EAAMsV,cACR,YCzBfQ,OAhCf,SAAkBC,EAASC,EAAQ3E,GAE/B,IAAM4E,EAAkBF,EAAQ3V,KAAI,SAAAiO,GAAC,OAAIjT,OAAO8a,WAAW7H,MAGrD8H,EAAW,WAEb,IAAMtC,EAAQoC,EAAgBG,WAAU,SAAAC,GAAG,OAAIA,EAAIC,WAEnD,MAAgC,qBAAlBN,EAAOnC,GAAyBmC,EAAOnC,GAASxC,GAIlE,EAA0BzQ,mBAASuV,GAAnC,mBAAO5V,EAAP,KAAcgW,EAAd,KAgBA,OAdA7W,qBACI,WAII,IAAM8W,EAAU,kBAAMD,EAASJ,IAI/B,OAFAF,EAAgBzN,SAAQ,SAAA6N,GAAG,OAAIA,EAAII,YAAYD,MAExC,kBAAMP,EAAgBzN,SAAQ,SAAA6N,GAAG,OAAIA,EAAIK,eAAeF,SAEnE,IAGGjW,GCOIoW,OApCf,SAAyBrW,EAAKsW,GAG1B,MAAsChW,oBAAS,WAC3C,IAEI,IAAMP,EAAOjF,OAAOyL,aAAaI,QAAQ3G,GAEzC,OAAOD,EAAO0G,KAAK8P,MAAMxW,GAAQuW,EACnC,MAAO5Y,GAGL,OADAvC,QAAQC,IAAIsC,GACL4Y,MATf,mBAAOE,EAAP,KAAoBC,EAApB,KA8BA,MAAO,CAACD,EAfS,SAAAvW,GACb,IAEI,IAAMyW,EACFzW,aAAiB0W,SAAW1W,EAAMuW,GAAevW,EAErDwW,EAAeC,GAEf5b,OAAOyL,aAAaC,QAAQxG,EAAKyG,KAAKC,UAAUgQ,IAClD,MAAOhZ,GAELvC,QAAQC,IAAIsC,OC3BjB,SAASkZ,KAGZ,MAAwCP,GAAgB,qBAAxD,mBAAOQ,EAAP,KAAqBC,EAArB,KAIMC,EA+BCvB,GAAS,CAAC,gCAAiC,EAAC,IAAO,GA3BpDwB,EACsB,qBAAjBH,EAA+BA,EAAeE,EAiBzD,OAdA3X,qBACI,WACI,IACM6X,EAAUnc,OAAOoc,SAASC,KAC5BH,EACAC,EAAQG,UAAUC,IAHJ,aAKdJ,EAAQG,UAAUxa,OALJ,eAQtB,CAACoa,IAIE,CAACA,EAASF,GCrBd,IAAMtT,GAAU8T,wBAAc,MAwQtBC,GAtQH,WAER,MAA+BjX,mBAAS,CACpCgI,SAAS,KACT1M,SAAS,KACTC,SAAS,OAHb,mBAAOoL,EAAP,KAAgBuQ,EAAhB,KAMApY,qBAAU,WACN,IAAM6H,ElBvBY,WAAa,IAAZjH,EAAW,uDAAP,GAC7B,OAAOyG,KAAK8P,MAAMhQ,aAAaI,QAAQ3G,IkBsBhByX,CAAW,QAGZ,OAAbxQ,EAMCb,EAAY,OALK,CACbkC,UAAS,EACT1M,SAAS,KACTC,SAAS,OAIb2b,EAAYvQ,KAElB,IAEF2P,KAEA,IAAMc,EAAc5c,OAAOqZ,WAG3B,EAAoB7T,mBAASoX,EAFV,KAEZ/F,EAAP,oBACMvN,EAAatJ,OAAO8a,WAAW,8BAA8BI,QACnE,EAAyB1V,mBAAS,CAC9BqX,aAAc,GACdC,qBAAsB,KACtBC,aAAc,KACdC,aAAc,KACdC,0BAA2B,KAC3BC,uBAAwB,GACxBC,YAAa,GACbC,sBAAuB,KACvBC,yBAA0B,KAC1BC,eAAgB,KAChBC,iBAAkB,KAClBC,iBAAkB,KAClBC,iBAAkB,KAClBC,gBAAiB,KACjBC,gBAAiB,GACjBC,WAAY,GACZC,oBAAqB,KACrBC,6BAA8B,GAC9BC,qCAAsC,KACtCC,kBAAmB,KACnBC,6BAA8B,KAC9BC,oBAAqB,KACrBC,yBAA0B,KAC1BC,0BAA2B,GAC3BC,0BAA2B,GAC3BC,IAAK,KACLC,WAAY,KACZC,eAAgB,KAChBC,SAAU,KACVC,yBAA0B,KAC1BC,cAAe,GACfC,gBAAgB,EAChBC,gBAAiB,GACjBC,eAAgB,KAChBC,gBAAiB,GACjBC,sBAAuB,KACvBC,2BAA4B,KAC5BC,wBAAyB,KACzBC,sCAAuC,KACvCC,gBAAiB,KACjBC,6BAA8B,KAC9BC,0BAA2B,KAC3BC,WAAY,KACZC,WAAY,GACZC,eAAgB,GAChBC,eAAgB,KAChBC,qBAAsB,KACtBC,kBAAmB,KACnBC,eAAgB,GAChBC,mBAAoB,KACpBC,gBAAiB,KACjBC,mBAAoB,KACpBC,eAAgB,KAChBC,YAAa,KACbC,OAAQ,GACRC,IAAK,KACLC,+BAAgC,KAChCC,wBAAyB,GACzBC,0BAA2B,KAC3BC,2BAA4B,GAC5BC,yBAA0B,GAC1BC,uBAAwB,GACxBC,+BAA+B,EAC/BC,2BAA4B,GAC5BC,qBAAsB,KACtBC,oBAAqB,KACrBC,mBAAoB,KACpBC,WAAY,KACZC,uBAAwB,KACxBC,UAAW,KACXC,cAAe,KACfC,kBAAmB,KACnBC,iBAAkB,KAClBC,yBAA0B,KAC1BC,YAAa,KACbC,wBAAyB,KACzBC,mBAAoB,KACpBC,mBAAoB,KACpBC,IAAK,KACLC,gBAAiB,KACjBC,mBAAoB,KACpBC,SAAU,GACVC,eAAgB,GAChBC,uBAAwB,KACxBC,WAAY,KACZC,oBAAqB,KACrBC,WAAY,KACZC,eAAgB,GAChBC,iBAAkB,KAClBC,YAAa,KACbC,2BAA4B,KAC5BC,uBAAwB,KACxBC,6BAA6B,KAC7BC,oCAAoC,KACpCC,0BAA0B,KAC1BC,uBAAuB,KACvBC,qBAAqB,KACrBC,0BAA0B,GAC1B9a,UAAW,GACX+a,+BAA+B,EAC/BC,0BAA2B,KAC3BC,UAAU,GACVC,mBAAoB,KACpBC,kBAAmB,KACnBC,iBAAkB,KAClBC,gBAAiB,KACjBC,eAAgB,KAChBC,mBAAmB,EACnBC,0BAA2B,KAC3BC,sBAAuB,KACvBC,6BAA8B,KAC9BC,+BAAgC,KAChCC,4BAA6B,KAC7BC,+BAAgC,KAChCC,oBAAqB,KACrBC,sBAAsB,EACtBC,qBAAsB,KACtBC,UAAW,GACXC,kBAAmB,KACnBC,4BAA6B,KAC7BC,SAAU,KACVC,yBAA0B,KAC1BC,sBAAuB,KACvBC,KAAM,KACNC,UAAW,KACXC,mBAAoB,KACpBC,eAAgB,GAChBC,oBAAqB,KACrBC,uCAAwC,KACxCC,+BAAgC,KAChCC,2BAA4B,GAC5BC,mBAAoB,GACpBC,sCAAuC,KACvCC,uBAAwB,GACxBC,sBAAuB,GACvBC,2BAA4B,KAC5BC,YAAa,KACbC,6BAA8B,KAC9BC,uBAAwB,KACxBC,YAAa,KACbC,uCAAwC,KACxCC,gBAAiB,KA9IrB,mBAAOtR,EAAP,KAAauR,EAAb,KAsJA,EAAyBlgB,mBAAS,CAC9BgE,MAAK,EACLoB,QAAQ,OAFZ,mBAAO+a,EAAP,KAAaC,EAAb,KASA,EAAiDpgB,mBAAS,IAA1D,mBAAOgD,EAAP,KAAyBqd,EAAzB,KACA,EAA2BrgB,oBAAS,GAApC,mBAAO4O,EAAP,KAAc0R,EAAd,KAEAxhB,qBAAU,WAEH6H,EAASqB,UACR5M,EAAM,CACFE,SAASqL,EAASrL,SAClBC,SAASoL,EAASpL,WACnB4E,MAAK,WACJmgB,GAAU,GACV3jB,IAAWwD,MAAK,SAACmJ,GACb4W,EAAS5W,EAAS/J,SAGtBzC,IAAgBqD,MAAK,SAACmJ,GAClB+W,EAAqB/W,EAAS/J,cAK5C,CAACoH,EAASA,EAASqB,SAAUrB,EAASpL,SAAUoL,EAASrL,WAE3D,MAAyB0E,mBAAS,CAC9BgE,MAAK,EACL1E,MAAM,KACNihB,QAAQ,OAHZ,mBAAO/Q,EAAP,KAAaF,EAAb,KAUMkR,EAAQ,SAACphB,GACX,OACI,kBAAC,cAAD,CAAakG,OAAQlG,EAAM4E,KAAMwB,SAAU,kBAAI8J,EAAS,CAACtL,MAAM,EAAM1E,MAAMkQ,EAAMlQ,MAAMihB,QAAQ/Q,EAAM+Q,WAAW7a,YAAU,GACtH,yBAAKrG,UAAU,sBAAsBD,EAAME,OAC3C,yBAAKD,UAAU,wBACVD,EAAMmhB,SAEX,yBAAKlhB,UAAU,uBACX,kBAAC,SAAD,CAAQ8F,QAAS,kBAAImK,EAAS,CAACtL,MAAM,EAAM1E,MAAMkQ,EAAMlQ,MAAMihB,QAAQ/Q,EAAM+Q,WAAWlhB,UAAU,uBAAhG,SAQhB,OACI,kBAAC6D,GAAQud,SAAT,CAAkB9gB,MAAO,CACrBgH,WACAC,eAjEe,SAACD,GACpBuQ,EAAYvQ,IAiER0K,YACA8O,QACApc,YA3DY,WAA2C,IAA1C2c,EAAyC,uDAAhC,CAAC1c,MAAK,EAAKoB,QAAQ,gCAC7Cgb,EAASM,IA2DL5c,YACAmG,YA5BY,SAAC3K,EAAMihB,GACvBjR,EAAS,CAACtL,MAAK,EAAK1E,QAAMihB,aA4BtB5R,QACA3L,oBACA4L,WAGA,yBAAKvP,WAAYsH,EAASqB,SAAW,YAAY,YAAclE,EAAY,aAAe,KACrFuN,EAAY,kBAAC,GAAD,MAAgB,kBAAC,GAAD,MAC7B,kBAAC,GAAD,CAAcrN,KAAMmc,EAAMnc,KAAM0Q,UAAW,kBAAI0L,EAAS,CAACpc,MAAM,KAASmO,IAAKgO,EAAMhO,IAAIgO,EAAMhO,IAAId,EAAU,GAAG,GAAIyD,SAAUqL,EAAM/a,UAClI,kBAACob,EAAD,CAAOxc,KAAMwL,EAAMxL,KAAM1E,MAAOkQ,EAAMlQ,MAAOihB,QAAS/Q,EAAM+Q,aClQxDI,QACW,cAA7BnmB,OAAOC,SAASmmB,UAEe,UAA7BpmB,OAAOC,SAASmmB,UAEhBpmB,OAAOC,SAASmmB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFpK,SAASqK,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjhB,MAAK,SAAAkhB,GACJA,EAAaC,gBAEd9X,OAAM,SAAApM,GACLvC,QAAQuC,MAAMA,EAAMmjB,a,mBEzI5BgB,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,6ECA3C,IAAIhiB,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASiiB,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEpiB,EAAKkiB,GAC9B,OAAO3b,QAAQC,UAAU7F,MAAK,WAC7B,IAAI2J,EAAI,IAAI+X,MAAM,uBAAyBH,EAAM,KAEjD,MADA5X,EAAEgY,KAAO,mBACHhY,KAIR,IAAIiY,EAAMviB,EAAIkiB,GAAM1iB,EAAK+iB,EAAI,GAC7B,OAAOJ,EAAoB7X,EAAEiY,EAAI,IAAI5hB,MAAK,WACzC,OAAOwhB,EAAoB3iB,MAG7ByiB,EAAoB5b,KAAO,WAC1B,OAAOD,OAAOC,KAAKrG,IAEpBiiB,EAAoBziB,GAAK,GACzBuiB,EAAOC,QAAUC,G,mBChMjB,IAAIjiB,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASiiB,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEpiB,EAAKkiB,GAC9B,OAAO3b,QAAQC,UAAU7F,MAAK,WAC7B,IAAI2J,EAAI,IAAI+X,MAAM,uBAAyBH,EAAM,KAEjD,MADA5X,EAAEgY,KAAO,mBACHhY,KAIR,IAAIiY,EAAMviB,EAAIkiB,GAAM1iB,EAAK+iB,EAAI,GAC7B,OAAOJ,EAAoB7X,EAAEiY,EAAI,IAAI5hB,MAAK,WACzC,OAAOwhB,EAAoB3iB,MAG7ByiB,EAAoB5b,KAAO,WAC1B,OAAOD,OAAOC,KAAKrG,IAEpBiiB,EAAoBziB,GAAK,GACzBuiB,EAAOC,QAAUC,I","file":"static/js/main.cdc8913c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet serverAddress = window.location.origin;\n\nif (serverAddress.substring(serverAddress.length - 1) !== \"/\") {\n  serverAddress = `${serverAddress}/`;\n}\n\nconsole.log(serverAddress);\n\nconst baseURL = `${serverAddress}api/v2/`;\n\nconst APICall = axios.create({\n  baseURL: baseURL,\n  withCredentials: true,\n});\n\nexport const login = async ({ username, password }) => {\n  return APICall.get(\"auth/login\", {\n    params: { username, password },\n  });\n};\n\nexport const logout = () => {\n  return axios.get(\"auth/logout\");\n};\n\nexport const getTorrents = async (sortKey = \"added_on\", reverse = true) => {\n  return APICall.get(\"torrents/info\", {\n    params: {\n      sort: sortKey,\n      reverse,\n    },\n  });\n};\n\nexport const getProperties = async (hash) => {\n  return APICall.get(\"torrents/properties\", {\n    params: {\n      hashes: hash,\n    },\n  });\n};\n\nexport const sync = async (rid) => {\n  return APICall.get(\"sync/maindata\", {\n    params: {\n      rid,\n    },\n  });\n};\n\nexport const resume = async (hash = \"\") => {\n  return APICall.get(\"torrents/resume\", {\n    params: {\n      hashes: hash,\n    },\n  });\n};\n\nexport const resumeAll = async () => {\n  return APICall.get(\"torrents/resume\", {\n    params: {\n      hashes: \"all\",\n    },\n  });\n};\n\nexport const pause = async (hash = \"\") => {\n  return APICall.get(\"torrents/pause\", {\n    params: {\n      hashes: hash,\n    },\n  });\n};\n\nexport const pauseAll = async () => {\n  return APICall.get(\"torrents/pause\", {\n    params: {\n      hashes: \"all\",\n    },\n  });\n};\n\nexport const remove = async (hash = \"\", deleteFiles = false) => {\n  return APICall.get(\"torrents/delete\", {\n    params: {\n      hashes: hash,\n      deleteFiles,\n    },\n  });\n};\n\nexport const addTorrent = async (url = \"\") => {\n  return APICall.get(\"torrents/add\", {\n    params: {\n      urls: url,\n    },\n  });\n};\n\nexport const getPrefs = async () => {\n  return APICall.get(\"app/preferences\");\n};\n\nexport const updatePref = async (json = {}) => {\n  return APICall.get(\"app/setPreferences\", {\n    params: {\n      json,\n    },\n  });\n};\n\nexport const getCategories = async () => {\n  return APICall.get(\"torrents/categories\");\n};\nexport const removeCategories = async (category) => {\n  return APICall.get(\"torrents/removeCategories\", {\n    params: {\n      categories: category,\n    },\n  });\n};\n\nexport const setTorrentCategory = async (hash = \"\", category = \"\") => {\n  return APICall.get(\"torrents/setCategory\", {\n    params: {\n      hashes: hash,\n      category,\n    },\n  });\n};\n","const stateDictionary = {\n  error : {\n    long:\"Some error occurred, applies to paused torrents\",\n    short:\"Error\"\n  },\n  missingFiles : {\n    long:\"Torrent data files is missing\",\n    short:\"Files Missing\"\n  },\n  uploading : {\n    long:\"Torrent is being seeded and data is being transferred\",\n    short:\"Seeding\"\n  },\n  pausedUP : {\n    long:\"Torrent is paused and has finished downloading\",\n    short:\"Paused / Done\"\n  },\n  queuedUP : {\n    long:\"Queuing is enabled and torrent is queued for upload\",\n    short:\"Queued For Seeding\"\n  },\n  stalledUP : {\n    long:\"Torrent is being seeded, but no connections were made\",\n    short:\"Available for Seeding\"\n  },\n  checkingUP : {\n    long:\"Torrent has finished downloading and is being checked\",\n    short:\"Checking Files\"\n  },\n  forcedUP : {\n    long:\"Torrent is forced to uploading and ignore queue limit\",\n    short:\"Force Uploading\",\n  },\n  allocating : {\n    long:\"Torrent is allocating disk space for download\",\n    short:\"Allocating Space\"\n  },\n  downloading : {\n    long:\"Torrent is being downloaded and data is being transferred\",\n    short:\"Downloading\"\n  },\n  metaDL : {\n    long:\"Torrent has just started downloading and is fetching metadata\",\n    short:\"Fetching Metadata\"\n  },\n  pausedDL : {\n    long:\"Torrent is paused and has NOT finished downloading\",\n    short:\"Paused\"\n  },\n  queuedDL : {\n    long:\"Queuing is enabled and torrent is queued for download\",\n    short:\"Queued for Download\"\n  },\n  stalledDL : {\n    long:\"Torrent is being downloaded, but no connection were made\",\n    short:\"Stalled\"\n  },\n  checkingDL : {\n    long:\"Same as checkingUP, but torrent has NOT finished downloading\",\n    short:\"Checking Files\"\n  },\n  forceDL : {\n    long:\"Torrent is forced to downloading to ignore queue limit\",\n    short:\"Force Downloading\"\n  },\n  checkingResumeData : {\n    long:\"Checking resume data on qBt startup\",\n    short:\"Checking Resume\"\n  },\n  moving : {\n    long:\"Torrent is moving to another location\",\n    short:\"Moving Location\",\n  },\n  unknown : {\n    long:\"Unknown status\",\n    short:\"Unknown\",\n  },\n}\n\nexport default stateDictionary;\n","import {useEffect,useRef} from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, {useState} from \"react\";\nimport {ProgressBar} from \"react-onsenui\";\nimport fileSize from \"filesize\";\nimport stateDictionary from './stateDictionary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faBolt, faDownload,\n    faFolderOpen,\n    faPallet,\n    faPalletAlt,\n    faShareAlt,\n    faStopwatch,\n    faTachometerAltFastest,\n    faTachometerAltSlowest,\n    faUpload,\n    faUserAstronaut,\n    faUserSecret\n} from '@fortawesome/pro-regular-svg-icons'\nimport useInterval from \"../utils/useInterval\";\nimport {sync} from \"../utils/TorrClient\";\n\nconst TorrentInfo = (props) => {\n    const {item} = props;\n    const {name} = item\n    const {hash} = props\n\n    const [torrent,setTorrent] = useState(item)\n\n    useInterval(() => {\n        sync().then(resp => {\n            setTorrent(resp.data.torrents[hash])\n        });\n    },1000)\n\n    const AmountRow = [\n        {\n            value: `${fileSize(torrent.downloaded)} / ${fileSize(torrent.size)}`,\n            icon: faDownload,\n            label: \"Downloaded\"\n        },\n        {\n            value: fileSize(torrent.downloaded_session),\n            icon: faPallet,\n            label: \"Downloaded This Session\"\n        },\n        {\n            value: fileSize(torrent.uploaded),\n            icon: faUpload,\n            label: \"Uploaded\"\n        },\n        {\n            value: fileSize(torrent.uploaded_session),\n            icon: faPalletAlt,\n            label: \"Uploaded This Session\"\n        },\n        {\n            value: torrent.ratio?torrent.ratio.toFixed(2):0,\n            icon: faShareAlt,\n            label: \"Share Ratio\"\n        },\n    ]\n\n    const date = new Date(0);\n    date.setSeconds(torrent.eta); // specify value for SECONDS here\n    const timeString = date.toISOString().substr(11, 8);\n\n    const SpeedsRow = [\n        {\n            value: `${fileSize(torrent.dlspeed)}/s`,\n            icon: torrent.dlspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: `${fileSize(torrent.upspeed)}/s`,\n            icon: torrent.upspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: torrent.eta !== 8640000 ?\n                timeString\n                :0\n            ,\n            icon: faStopwatch,\n            label: \"Estimate Time Left\"\n        },\n    ]\n\n    const DataRow = [\n        {\n            value: `${torrent.num_seeds} (${torrent.num_complete})`,\n            icon: faUserAstronaut,\n            label: \"Seeds\"\n        },\n        {\n            value: `${torrent.num_leechs} (${torrent.num_incomplete})`,\n            icon: faUserSecret,\n            label: \"Leechs\"\n        },\n        {\n            value: torrent.save_path,\n            icon: faFolderOpen,\n            label: \"Save Path\"\n        },\n    ]\n\n    const StateRow = [\n        {\n            value: stateDictionary[torrent.state].short,\n            icon: faBolt,\n            label: stateDictionary[torrent.state].long\n        },\n    ]\n\n    return(\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{name}</h2>\n                <div>\n                    <span className={\"ProgressAmount\"}>{(torrent.progress*100).toFixed(1)}%</span>\n                    <ProgressBar\n                        value={torrent.progress*100}\n                        secondaryValue={100}\n                    />\n                </div>\n            </div>\n            <StatsRow data={StateRow} title={\"CurrentState\"}/>\n            <StatsRow data={DataRow} title={\"Metadata\"}/>\n            <StatsRow data={SpeedsRow} title={\"Speeds\"}/>\n            <StatsRow data={AmountRow} title={\"Amounts\"}/>\n        </div>\n    )\n}\n\nexport const StatsRow = (props) => {\n    return(\n        <div className={\"infoStatsRowWrapper\"}>\n            <div className={\"infoTitleBox\"}>\n                <h3>{props.title}</h3>\n            </div>\n            <div className={\"infoStatsRow\"}>\n                {props.data.map((item,key) =>\n                    <div className={\"infoStatBox\"} key={key}>\n                        <h4 className={\"infoStat\"}>{item.value}</h4>\n                        <div>\n                            <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                            <span className={\"infoStatLabel\"}>{item.label}</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default TorrentInfo;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  ActionSheet,\n  ActionSheetButton,\n  AlertDialog,\n  AlertDialogButton,\n  Icon,\n  ProgressBar,\n} from \"react-onsenui\";\nimport stateDictionary from \"./stateDictionary\";\nimport { pause, remove, resume, setTorrentCategory } from \"../utils/TorrClient\";\nimport filesize from \"filesize\";\nimport { IonSpinner } from \"@ionic/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloudDownload,\n  faCloudUpload,\n  faTachometerAltFast,\n} from \"@fortawesome/pro-regular-svg-icons\";\nimport { Context } from \"../App\";\nimport TorrentInfo from \"./TorrentInfo\";\n\nconst TorrentBox = (props) => {\n  const { contextCategories } = useContext(Context);\n\n  const item = props.item;\n  const hash = props.hash;\n  const { name } = item;\n\n  const { filter } = props;\n\n  // const {syncData} = useContext(Context)\n\n  const torrentData = item;\n\n  const { progress } = torrentData || 0;\n  const { eta } = torrentData || 0;\n  const { state } = torrentData || \"\";\n  const { num_leechs } = torrentData || 0;\n  const { num_seeds } = torrentData || 0;\n  const { upspeed } = torrentData || 0;\n  const { dlspeed } = torrentData || 0;\n\n  const [actionLoading, setActionLoading] = useState(false);\n\n  const date = new Date(0);\n  date.setSeconds(eta); // specify value for SECONDS here\n  const timeString = eta ? date.toISOString().substr(11, 8) : 0;\n\n  const isDone = () => {\n    return !!progress >= 1;\n  };\n\n  const isPaused = () => {\n    switch (state) {\n      case \"pausedDL\":\n        return true;\n      case \"pausedUP\":\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const isDL = () => {\n    switch (state) {\n      case \"downloading\":\n        return true;\n      case \"metaDL\":\n        return true;\n      case \"queuedDL\":\n        return true;\n      case \"stalledDL\":\n        return true;\n      case \"checkingDL\":\n        return true;\n      case \"forceDL\":\n        return true;\n      case \"checkingResumeData\":\n        return true;\n      case \"allocating\":\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const statsIconStyle = {\n    color: isDL() ? \"#0076ff\" : \"#b2b2b2\",\n    marginRight: 5,\n  };\n\n  useEffect(() => {\n    if (actionLoading) {\n      setTimeout(() => {\n        setActionLoading(false);\n      }, 1000);\n    }\n  }, [actionLoading]);\n\n  const { installed, updateModal } = useContext(Context);\n\n  const [torrentAction, setTorrentAction] = useState({\n    open: false,\n    options: [\n      {\n        label: \"More Info\",\n        modifier: null,\n        onclick: () => false,\n      },\n      {\n        label: \"Remove Torrent\",\n        modifier: \"destructive\",\n        onclick: () => false,\n      },\n    ],\n  });\n\n  const [deleteAlert, setDeleteAlert] = useState({\n    open: false,\n    hash: undefined,\n  });\n\n  const [moveAlert, setMoveAlert] = useState({\n    open: false,\n    hash: undefined,\n  });\n\n  const handleMoreButton = (hash, item) => {\n    setTorrentAction({\n      open: true,\n      options: [\n        {\n          label: \"Remove Torrent\",\n          modifier: \"destructive\",\n          onclick: () => setDeleteAlert({ open: true, hash }),\n        },\n        {\n          label: \"More Info\",\n          modifier: null,\n          onclick: () =>\n            updateModal({\n              open: true,\n              content: <TorrentInfo item={item} hash={hash} />,\n            }),\n        },\n        {\n          label: \"Change Categories\",\n          modifier: null,\n          onclick: () => setMoveAlert({ open: true, hash }),\n        },\n      ],\n    });\n  };\n\n  if (\n    (filter === \"downloading\" && progress < 1) ||\n    (filter === \"complete\" && progress === 1) ||\n    filter === \"all\"\n  ) {\n    return (\n      <>\n        <div className=\"torrentBox\">\n          <h3>{name}</h3>\n          <div className=\"stats\">\n            <span>{(progress * 100).toFixed(0)}%</span>\n            {eta !== 8640000 ? (\n              <span>{timeString}</span>\n            ) : (\n              <span>{stateDictionary[state].short}</span>\n            )}\n          </div>\n          <ProgressBar\n            style={{ paddingBottom: 10 }}\n            value={progress * 100}\n            secondaryValue={100}\n          />\n          <div className=\"details\">\n            <div className=\"statsRow\">\n              <span>\n                <FontAwesomeIcon\n                  style={statsIconStyle}\n                  icon={isDone() ? faCloudUpload : faCloudDownload}\n                />\n                <span className={\"data\"}>\n                  {isDone() ? num_leechs : num_seeds}\n                </span>\n              </span>\n              <span>\n                <FontAwesomeIcon\n                  style={statsIconStyle}\n                  icon={faTachometerAltFast}\n                />\n                <span className={\"data\"}>\n                  {isPaused() || isDone()\n                    ? \"0\"\n                    : filesize(isDone() ? upspeed : dlspeed, { round: 1 }) +\n                      \"/s\"}\n                </span>\n              </span>\n            </div>\n            {actionLoading ? (\n              <IonSpinner name={\"lines\"} />\n            ) : (\n              <div className=\"buttonsRow\">\n                <button\n                  type=\"button\"\n                  onClick={() => handleMoreButton(hash, item)}\n                >\n                  <Icon size={30} icon=\"ion-ios-more\" />\n                </button>\n\n                <button\n                  className={isPaused() ? \"active\" : null}\n                  type=\"button\"\n                  onClick={() => {\n                    setActionLoading(true);\n                    isPaused() ? resume(hash) : pause(hash);\n                  }}\n                >\n                  <Icon size={30} icon=\"ion-ios-pause\" />\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n        {torrentAction.open ? (\n          <ActionSheet\n            className={installed ? \"installed\" : null}\n            isOpen={torrentAction.open}\n            isCancelable={true}\n            onCancel={() =>\n              setTorrentAction({ open: false, options: torrentAction.options })\n            }\n          >\n            {torrentAction.options.map((option, key) => (\n              <ActionSheetButton\n                key={key}\n                modifier={option.modifier}\n                onClick={() => {\n                  setTorrentAction({\n                    open: false,\n                    options: torrentAction.options,\n                  });\n                  option.onclick();\n                }}\n              >\n                {option.label}\n              </ActionSheetButton>\n            ))}\n\n            <ActionSheetButton\n              onClick={() =>\n                setTorrentAction({\n                  open: false,\n                  options: torrentAction.options,\n                })\n              }\n            >\n              Cancel\n            </ActionSheetButton>\n          </ActionSheet>\n        ) : null}\n        {deleteAlert.open ? (\n          <AlertDialog\n            isOpen={deleteAlert.open}\n            onCancel={() => setDeleteAlert({ open: false })}\n            cancelable\n          >\n            <div className=\"alert-dialog-title\">Delete Files</div>\n            <div className=\"alert-dialog-content\">\n              Would you also like to delete the files downloaded?\n            </div>\n            <div className=\"alert-dialog-footer\">\n              <AlertDialogButton\n                onClick={() => {\n                  setDeleteAlert({ open: false });\n                  remove(deleteAlert.hash, true);\n                  props.removeFromFeed(hash);\n                }}\n                className={\"danger\"}\n              >\n                Yes, Delete Files\n              </AlertDialogButton>\n\n              <AlertDialogButton\n                onClick={() => {\n                  setDeleteAlert({ open: false });\n                  remove(deleteAlert.hash, false);\n                  props.removeFromFeed(hash);\n                }}\n              >\n                No, Keep Files\n              </AlertDialogButton>\n\n              <AlertDialogButton\n                onClick={() => setDeleteAlert({ open: false })}\n              >\n                Cancel\n              </AlertDialogButton>\n            </div>\n          </AlertDialog>\n        ) : null}\n        {moveAlert.open && (\n          <AlertDialog\n            isOpen={moveAlert.open}\n            onCancel={() => setDeleteAlert({ open: false })}\n            cancelable\n          >\n            <div className=\"alert-dialog-title\">Change Category</div>\n            <div className=\"alert-dialog-content\">\n              What category would you like to move this torrent to?\n            </div>\n            <div className=\"alert-dialog-footer\">\n              {Object.keys(contextCategories).map((key) => (\n                <AlertDialogButton\n                  onClick={async () => {\n                    await setTorrentCategory(hash, contextCategories[key].name);\n                    setMoveAlert({ open: false, hash });\n                  }}\n                >\n                  {contextCategories[key].name}\n                </AlertDialogButton>\n              ))}\n\n              <AlertDialogButton\n                className={\"danger\"}\n                onClick={() => setMoveAlert({ open: false })}\n              >\n                Cancel\n              </AlertDialogButton>\n            </div>\n          </AlertDialog>\n        )}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TorrentBox;\n","export const getStorage = (key=\"\") => {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport const saveStorage = async (key=\"\",value={}) => {\n  new Promise ( (resolve) => {\n    localStorage.setItem(key,JSON.stringify(value));\n    setInterval(()=>{\n      if(localStorage.getItem(key) !== undefined){\n        resolve()\n      }\n    },100)\n  })\n}\n","import roundLogo from \"../images/logo_round.png\";\nimport React from \"react\";\n\nconst LogoHeader = () => {\n    return (\n        <div className=\"LogoHeader\">\n            <img className=\"loginImage\" alt=\"iQbit logo\" src={roundLogo}/>\n            <span className={\"iqbit\"}>iQbit</span>\n            <span className={\"poweredBy\"}>Powered by qBitTorrent</span>\n            <hr/>\n        </div>\n    )\n}\n\nexport default LogoHeader;\n","import React, {useState, useContext, useEffect} from 'react';\nimport {Button, Icon} from 'react-onsenui';\nimport {sync, login, getTorrents, pauseAll, resumeAll} from '../utils/TorrClient';\nimport TorrentBox from './TorrentBox';\nimport {Context} from \"../App\"\nimport {saveStorage} from '../utils/Storage';\nimport LogoHeader from \"./LogoHeader\";\nimport useInterval from \"../utils/useInterval\";\nimport {IonSpinner} from \"@ionic/react\";\n\nconst Torrents = (props) => {\n    const {settings, updateSettings} = useContext(Context);\n\n    const [feedback, setFeedback] = useState(null)\n    const [username, setUsername] = useState(undefined)\n    const [password, setPassword] = useState(undefined)\n\n    const [torrentList, setTorrentList] = useState([])\n    const [torrentData, setTorrentData] = useState({})\n    const [initialLoad,setInitialLoad] = useState(false)\n    const [sort,setSort] = useState({key:\"added_on\",reverse:true})\n    const [needsFullRefresh, setNeedsRefresh] = useState(false);\n\n    useEffect(() => {\n        setSort(props.sortingObj)\n        setNeedsRefresh(true)\n    },[props.sortingObj])\n\n    useEffect(()=>{\n        if(initialLoad && needsFullRefresh){\n            getTorrents(sort.key,sort.reverse).then( resp => {\n                const TorrentArray =  resp.data;\n                let hashArray = [];\n\n                TorrentArray.forEach((torrent) => {\n                    hashArray.push(torrent.hash)\n                })\n\n                setTorrentList(hashArray);\n                setNeedsRefresh(false);\n            })\n        }\n    },[needsFullRefresh])\n\n\n    const [RID, setRID] = useState(0)\n\n    useInterval(() => {\n        if (settings.loggedin) {\n\n            sync(RID).then(resp => {\n                const {data} = resp\n\n                if (data.full_update) {\n                    setTorrentData(data.torrents);\n\n                    getTorrents(sort.key,sort.reverse).then( resp => {\n                        const TorrentArray =  resp.data;\n                        let hashArray = [];\n\n                        TorrentArray.forEach((torrent) => {\n                            hashArray.push(torrent.hash)\n                        })\n\n                        setTorrentList(hashArray);\n                        setNeedsRefresh(false);\n                    })\n\n                } else {\n\n                    if (data.torrents) {\n                        let updatedObj = torrentData;\n\n                        const keysArray = Object.keys(data.torrents);\n\n                        keysArray.forEach((hash) => {\n\n                            if (!updatedObj[hash]) {\n                                updatedObj[hash] = {};\n                            }\n\n                            const properties = Object.keys(data.torrents[hash]);\n\n                            properties.forEach((property) => {\n                                updatedObj[hash][property] = data.torrents[hash][property]\n                            })\n\n                            if(!torrentList.includes(hash)){\n                                setTorrentList([hash,...torrentList])\n                            }\n                        })\n\n                        setTorrentData(updatedObj);\n                    }\n\n                }\n\n                setRID(RID + 1)\n\n                if(RID === 0){\n                    setInitialLoad(true)\n                }\n            });\n        }\n    }, 1000)\n\n    const handleSignin = () => {\n\n        login({username, password}).then(response => {\n\n            if (response.data === \"Ok.\") {\n\n                const userObject = {\n                    username,\n                    password,\n                    loggedin: true,\n                };\n\n                saveStorage(\"user\", userObject).then(() => {\n                    updateSettings(userObject)\n                })\n\n            } else {\n                setFeedback(\"Login Unauthorized.\")\n            }\n\n        }).catch(() => {\n            setFeedback(\"Too many login attempts. This IP is temporarily blocked. You can restart qBitTorrent to reset this.\")\n        })\n    }\n\n    const LoginForm = () => {\n        return (\n            <div className={\"torrentBox login\"}>\n                <LogoHeader/>\n                <h2 className=\"centered\">Welcome To Your WebUI</h2>\n                <div className=\"inputGroup\">\n                    <label htmlFor=\"username-input\">\n                        <span>Username</span>\n                        <input\n                            id=\"username-input\"\n                            type=\"text\"\n                            onChange={(event) => setUsername(event.target.value)}\n                            placeholder=\"Username\"\n                            autoCapitalize={\"none\"}\n                            autoCorrect={\"none\"}\n                            autoComplete={\"none\"}\n                        />\n                    </label>\n                    <label htmlFor=\"password-input\">\n                        <span>Password</span>\n                        <input\n                            id=\"password-input\"\n                            type=\"password\"\n                            onChange={(event) => setPassword(event.target.value)}\n                            placeholder=\"Password\"/>\n                    </label>\n                </div>\n                {feedback ? <p className=\"feedback\">{feedback}</p> : null}\n                <Button modifier=\"large--quiet\" onClick={() => handleSignin()}>\n                    Sign In\n                </Button>\n            </div>\n        )\n    }\n\n    const removeFromFeed = (hash) => {\n        const hashIndex = torrentList.indexOf(hash);\n        const listToUpdate = torrentList;\n        listToUpdate.splice(hashIndex,1);\n        setTorrentList(listToUpdate);\n    }\n\n    const [masterButtonsLoading,setMasterButtonsLoading] = useState({\n        pause:false,\n        play:false,\n    })\n\n    useEffect(()=>{\n        if(masterButtonsLoading.pause){\n            setTimeout(()=>{\n                setMasterButtonsLoading({\n                    pause: false,\n                    play: masterButtonsLoading.play\n                })\n            },1500)\n        }\n\n        if(masterButtonsLoading.play){\n            setTimeout(()=>{\n                setMasterButtonsLoading({\n                    pause: masterButtonsLoading.pause,\n                    play: false\n                })\n            },1500)\n        }\n    },[masterButtonsLoading])\n\n    return (\n        <>\n            {\n                settings.loggedin ?\n                <div className={\"torrentBox compact\"}>\n                    <div className=\"buttonsRow\">\n\n                        {\n                            masterButtonsLoading.pause ?\n                            <IonSpinner name={\"lines\"}/> :\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    pauseAll()\n                                    setMasterButtonsLoading({\n                                        pause: true,\n                                        play: masterButtonsLoading.play\n                                    })\n                                }}\n                            >\n                                <Icon size={30} icon=\"ion-ios-pause\"/>\n                            </button>\n                        }\n\n                        {\n                            masterButtonsLoading.play?\n                                <IonSpinner name={\"lines\"}/>:\n                                <button\n                                    type=\"button\"\n                                    onClick={()=> {\n                                        resumeAll()\n                                        setMasterButtonsLoading({\n                                            pause: masterButtonsLoading.pause,\n                                            play: true\n                                        })\n                                    }}\n                                >\n                                    <Icon size={30} icon=\"ion-ios-play\"/>\n                                </button>\n                        }\n\n                    </div>\n                </div>\n                :null\n            }\n\n            {\n                settings.loggedin ?\n                    torrentList.map((hash) =>\n                        <TorrentBox\n                            item={torrentData[hash]}\n                            fullData={torrentData}\n                            key={hash}\n                            hash={hash}\n                            filter={props.segment}\n                            removeFromFeed={(hash)=>{removeFromFeed(hash)}}\n                        />)\n                    : null\n            }\n\n            {settings.loggedin ? null : LoginForm()}\n\n        </>\n\n    )\n}\n\nexport default Torrents\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {IonLabel, IonSegment, IonSegmentButton} from \"@ionic/react\";\nimport Torrents from \"../components/Torrents\";\nimport {Context} from \"../App\";\n\nconst TorrentsCol = (props) => {\n    const {settings} = useContext(Context)\n\n    const [segment,setSegment] = useState(\"all\");\n\n    const SegmentPicker = () => {\n\n        if(settings.loggedin){\n            return(\n                <div className={\"segmentPicker\"}>\n                    <IonSegment mode={\"ios\"} value={segment} onIonChange={e => {\n                        setTimeout(()=>{\n                            setSegment(e.detail.value)\n                        },200)\n                    }}>\n                        <IonSegmentButton mode={\"ios\"} value=\"all\">\n                            <IonLabel>All Torrents</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"complete\">\n                            <IonLabel>Complete</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"downloading\">\n                            <IonLabel>Downloading</IonLabel>\n                        </IonSegmentButton>\n                    </IonSegment>\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    return(\n        <div  className={\"torrentsCol\"}>\n            <SegmentPicker/>\n            <Torrents sortingObj={props.sortingObj} segment={segment}/>\n        </div>\n    )\n}\n\nexport default TorrentsCol\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n    faBox,\n    faFilmCanister,\n    faMedal,\n    faTv,\n    faUserAstronaut,\n    faUsersClass,\n    faComments, faStopwatch, faFilm\n    ,faFolderDownload\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst YTSSearch = (props) => {\n    const {updateModal} = useContext(Context)\n    const [searchTerm,setSearchTerm] = useState(undefined)\n    const [searchLoading,setSearchLoading] = useState(false)\n    const [searchResults,setSearchResults] = useState([])\n    const [searchReady,setSearchReady] = useState(false);\n\n    const submitQuery = () => {\n        setSearchLoading(true);\n        axios.get(\"https://yts.mx/api/v2/list_movies.json\",{\n            params:{\n                limit:null,                     //Integer between 1 - 50 (inclusive)\n                page:null,                      //Integer (Unsigned)\n                quality:null,                   //String (720p, 1080p, 2160p, 3D)\n                minimum_rating:null,            //Integer between 0 - 9 (inclusive)\n                query_term:searchTerm,          //String\n                genre:null,                     //String from http://www.imdb.com/genre/\n                sorty_by:null,                  //String (title, year, rating, peers, seeds, download_count, like_count, date_added)\n                with_rt_ratings:true,           //Bool\n            }\n        }).then(response => {\n            const moviesArray = response.data.data.movies\n            setSearchResults(moviesArray);\n            setSearchLoading(false);\n            setSearchReady(true);\n        })\n    }\n\n    return (\n        <div>\n            <div className={\"searchInputRow\"}>\n                <SearchInput\n                    className={\"searchInput\"}\n                    style={{height:\"100%\"}}\n                    placeholder={`Search ${props.category}`}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n                />\n                {\n                    searchLoading ? <IonSpinner name={\"lines\"}/> :\n                        <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n                            <Icon icon={\"ion-ios-search\"} size={25} />\n                        </Fab>\n                }\n            </div>\n            <div className={\"searchResults\"}>\n                {\n                    searchReady?\n                        searchResults ?\n                        searchResults.map((item,key) =>\n                            <div\n                                role={\"button\"}\n                                className={\"MoviePoster\"}\n                                key={key}\n                                style={{\n                                    backgroundImage: `url(${item.medium_cover_image}), url(${imageMissing})`,\n                                }}\n                                onClick={()=>{\n                                    updateModal({open: true,content:<YTSModalInfo item={item}/>})\n                                }}\n                            >\n                                <span>{item.title}</span>\n                            </div>\n\n                        )\n                            :<div>No results were found for that search</div>\n                        :null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const YTSModalInfo = (props) => {\n    const { item } = props\n    const {updateAlert} = useContext(Context)\n\n    const TorrentAttr = (props) => {\n        return (\n            <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n                {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n                <span>{props.value}</span>\n            </span>\n        )\n    }\n\n    const otherInfo = [\n        {\n            value: item.language,\n            icon: faComments,\n            label: \"Language\"\n        },\n        {\n            value: item.rating,\n            icon: faMedal,\n            label: \"Ratings\"\n        },\n        {\n            value: item.runtime+\" Minutes\",\n            icon: faStopwatch,\n            label: \"Runtime\"\n        },\n        {\n            value: item.genres.join(\", \"),\n            icon: faFilm,\n            label: \"Genres\"\n        },\n    ]\n\n    const [downloadsStarted,setDownloadsStarted] = useState([])\n\n    const handleDownload = (torrent,title,key) =>{\n\n        addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n        .then(response=>{\n            if(response.data === \"Ok.\"){\n                setDownloadsStarted([...downloadsStarted, key])\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        })\n    };\n\n    return (\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{item.title_long}</h2>\n                <hr/>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Torrents</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {item.torrents.map((thisTorrent,key) =>\n                        <div className={\"infoStatBox flex-row w100\"} key={key}>\n                            <div className={\"attrBox\"}>\n                                <TorrentAttr icon={faTv} value={thisTorrent.quality}/>\n                                <TorrentAttr icon={faFilmCanister} value={thisTorrent.type}/>\n                                <TorrentAttr icon={faUserAstronaut} value={thisTorrent.seeds} letter={\"S\"}/>\n                                <TorrentAttr icon={faUsersClass} value={thisTorrent.peers} letter={\"P\"}/>\n                                <TorrentAttr icon={faBox} value={thisTorrent.size}/>\n                            </div>\n                            {\n                                downloadsStarted.includes(key) ?\n                                    <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                                    :\n                                    <Button class={\"downloadBtn\"}\n                                            onClick={() => handleDownload(thisTorrent, item.title_long, key)}\n                                    >\n                                        Download\n                                    </Button>\n\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Description</h3>\n                </div>\n                <p>{item.description_full}</p>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Other Info</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {otherInfo.map((item,key) =>\n                        <div className={\"infoStatBox\"} key={key}>\n                            <h4 className={\"infoStat\"}>{item.value}</h4>\n                            <div>\n                                <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                                <span className={\"infoStatLabel\"}>{item.label}</span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            {\n                item.yt_trailer_code===\"\"?null:\n                    <div className={\"infoStatsRowWrapper\"}>\n                        <div className={\"infoTitleBox\"}>\n                            <h3>Movie Trailer</h3>\n                        </div>\n                        <iframe\n                            className={\"movieTrailer\"}\n                            title={\"Movie Trailer\"}\n                            width=\"100%\" height=\"450\"\n                            src={\"https://www.youtube.com/embed/\"+item.yt_trailer_code}\n                        />\n                    </div>\n\n            }\n        </div>\n    )\n}\n\nexport default YTSSearch;\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n  faBox,\n  faFilmCanister,\n  faMedal,\n  faTv,\n  faUserAstronaut,\n  faUsersClass,\n  faComments, faStopwatch, faFilm\n  ,faFolderDownload,\n  faUserCowboy\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst TPBSearch = (props) => {\n  const {updateModal} = useContext(Context)\n  const [searchTerm,setSearchTerm] = useState(undefined)\n  const [searchLoading,setSearchLoading] = useState(false)\n  const [searchResults,setSearchResults] = useState([])\n  const [searchReady,setSearchReady] = useState(false);\n  const [downloadsStarted,setDownloadsStarted] = useState([])\n  const {updateAlert} = useContext(Context)\n\n  const submitQuery = () => {\n    setSearchLoading(true);\n    axios.get(\"https://cors-container.herokuapp.com/https://apibay.org/q.php\",{\n      params:{\n        q:searchTerm,\n        cat:props.category\n      }\n    }).then(response => {\n      const results = response.data\n      console.log(results);\n      setSearchResults(results);\n      setSearchLoading(false);\n      setSearchReady(true);\n    })\n  }\n\n  const TorrentAttr = (props) => {\n    return (\n      <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n        {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n        <span>{props.value}</span>\n            </span>\n    )\n  }\n\n  const handleDownload = ({torrent, title, key}) =>{\n\n    addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.info_hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n    .then(response=>{\n      if(response.data === \"Ok.\"){\n        setDownloadsStarted([...downloadsStarted, key])\n      }else{\n        updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n      }\n    })\n  };\n\n  return (\n    <div>\n      <div className={\"searchInputRow\"}>\n        <SearchInput\n          className={\"searchInput\"}\n          style={{height:\"100%\"}}\n          placeholder={`Search ${props.category}`}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n        />\n        {\n          searchLoading ? <IonSpinner name={\"lines\"}/> :\n            <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n              <Icon icon={\"ion-ios-search\"} size={25} />\n            </Fab>\n        }\n      </div>\n      <div className={\"searchResults tpb\"}>\n        {\n          searchReady?\n            searchResults ?\n              searchResults.map((item,key) =>\n                <div className={\"infoStatsRow\"} key={key}>\n                  <div className={\"infoStatBox flex-row w100\"}>\n                    <div className={\"attrBox\"}>\n                      <h3>{item.name}</h3>\n                      <TorrentAttr icon={faUserAstronaut} value={item.seeders} letter={\"S\"}/>\n                      <TorrentAttr icon={faUserCowboy} value={item.leechers} letter={\"L\"}/>\n                    </div>\n                    {\n                      downloadsStarted.includes(key) ?\n                        <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                        :\n                        <Button class={\"downloadBtn\"}\n                                onClick={() => handleDownload({torrent:item,title:item.name, key})}\n                        >\n                          Download\n                        </Button>\n\n                    }\n                  </div>\n                </div>\n\n              )\n              :<div>No results were found for that search</div>\n            :null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default TPBSearch;\n","import React,{useState} from 'react';\nimport YTSLogo from \"../images/logo-YTS.svg\"\nimport PTB from \"../images/logo-TPB.svg\"\nimport YTSSearch from \"../searchAPIs/yts\";\nimport TPBSearch from '../searchAPIs/tpb';\n\nconst Search = (props) =>{\n\n    const [providers] = useState([\n      {\n          logo:YTSLogo,\n          name:\"YTS\",\n          categories:[\"Movies\"],\n          component:(props)=>YTSSearch(props)\n      },\n      {\n          logo:PTB,\n          name:\"PirateBay\",\n          categories:[\"Video\",\"Audio\",\"Applications\",\"Games\",\"Porn\",\"Other\"],\n          component:(props)=>TPBSearch(props)\n      },\n    ])\n\n\n\n    const [selectedProvider,setSelectedProvider] = useState(0)\n    const [selectedCategory,setSelectedCategory] = useState(0)\n\n    return (\n    <div className=\"searchCol\" {...props}>\n        <h3>Select Search Provider</h3>\n        <p>Warning: Be sure to comply with your country's copyright laws when downloading torrents from any of these search engines.</p>\n        <div className={\"providerRow\"}>\n            {providers.map((item,key) =>\n                <button className={key===selectedProvider?\"providerBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedProvider(key)}>\n                    <img alt={\"YTS Logo\"} src={item.logo}/>\n                </button>\n            )}\n        </div>\n        {\n            providers[selectedProvider].categories.length > 1?\n                <div className={\"categoriesRow\"}>\n                    {providers[selectedProvider].categories.map((item,key) =>\n                        <button className={key===selectedCategory?\"categoryBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedCategory(key)}>\n                            <p>{item}</p>\n                        </button>\n                    )}\n                </div>:null\n        }\n        {\n            providers[selectedProvider].name==='PirateBay' && <TPBSearch category={providers[selectedProvider].categories[selectedCategory]}/>\n        }\n        {\n            providers[selectedProvider].name==='YTS' && <YTSSearch category={providers[selectedProvider].categories[selectedCategory]}/>\n        }\n    </div>\n    )\n}\n\nexport default Search\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {List, ListItem, ListHeader, Switch, AlertDialog, Button} from \"react-onsenui\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {\n    faAngleRight,\n    faEdit, faEthernet,\n    faFolderDownload, faFolderMinus,\n    faFolders, faKey,\n    faMinusHexagon, faMoonStars, faNetworkWired, faOutlet, faPaintBrushAlt,\n    faUser, faUserLock, faUserRobot, faUsersClass, faWifi\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport {getPrefs, updatePref} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\nimport {saveStorage} from \"../utils/Storage\";\n\nconst Settings = (props) =>{\n\n    const {settings,updateAlert,prefs, cookie} = useContext(Context)\n    const [preferences,setPreferences] = useState(prefs)\n    const [prefsRefresh,setPrefsRefresh] = useState(true)\n\n    useEffect(()=>{\n        if(prefsRefresh && cookie){\n            getPrefs().then(response=>{\n                setPreferences(response.data)\n                setPrefsRefresh(false);\n            })\n        }\n    },[prefsRefresh,settings.loggedin,prefs])\n\n    const SwitchRow = (props) =>{\n        return(\n            <ListItem>\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <Switch checked={preferences[props.objKey]} onChange={()=>{\n                        updatePref(`{\"${props.objKey}\":${!preferences[props.objKey]}}`).then(()=>{\n                            setTimeout(()=>{\n                                let updatedObj = {...preferences}\n                                updatedObj[props.objKey] = !preferences[props.objKey];\n                                setPreferences(updatedObj)\n                            },350)\n                        }).catch(()=>{\n                            setPrefsRefresh(true);\n                            updateAlert(\"Settings Update Failed\",\"Settings could not be updated\")\n                        })\n                    }}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const InputRow = (props) =>{\n        return(\n            <ListItem\n                onClick={()=>setAlert({open: true,label: props.title, objKey:props.objKey})}\n            >\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <FontAwesomeIcon icon={faEdit}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const [alert,setAlert] = useState({\n        open:false,\n        label:\"\",\n        objKey:\"\"\n    })\n\n    let alertInput = useRef()\n\n    if(settings.loggedin){\n        return (\n        <div className={\"settingsCol\"}>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Downloads\n                </ListHeader>\n                <SwitchRow\n                    title={\"Create SubFolders\"}\n                    icon={faFolders}\n                    objKey={\"create_subfolder_enabled\"}\n                    color={\"#006ce2\"}\n                />\n                <SwitchRow\n                    title={\"Start Torrent Paused\"}\n                    icon={faMinusHexagon}\n                    objKey={\"start_paused_enabled\"}\n                    color={\"#bf0000\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Paths\n                </ListHeader>\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#2ca700\"}\n                />\n                <SwitchRow\n                    title={\"Temp Folder\"}\n                    icon={faFolderMinus}\n                    objKey={\"temp_path_enabled\"}\n                    color={\"#5b00b6\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Proxy\n                </ListHeader>\n                <InputRow\n                    title={\"Host\"}\n                    icon={faNetworkWired}\n                    objKey={\"proxy_ip\"}\n                    color={\"#00a799\"}\n                />\n                <InputRow\n                    title={\"Port\"}\n                    icon={faEthernet}\n                    objKey={\"proxy_port\"}\n                    color={\"#b600a4\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Peer Connections\"}\n                    icon={faUsersClass}\n                    objKey={\"proxy_peer_connections\"}\n                    color={\"#ea9d00\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Auth Enabled\"}\n                    icon={faUserLock}\n                    objKey={\"proxy_auth_enabled\"}\n                    color={\"#b7ea00\"}\n                />\n                <InputRow\n                    title={\"Proxy Username\"}\n                    icon={faUserRobot}\n                    objKey={\"proxy_username\"}\n                    color={\"#ea5200\"}\n                />\n                <InputRow\n                    title={\"Proxy Password\"}\n                    icon={faKey}\n                    objKey={\"proxy_password\"}\n                    color={\"#ea5200\"}\n                />\n            </List>\n\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    WebUI\n                </ListHeader>\n                <SwitchRow\n                    title={\"Custom WebUI Enabled\"}\n                    icon={faPaintBrushAlt}\n                    objKey={\"alternative_webui_enabled\"}\n                    color={\"#19a700\"}\n                />\n                <InputRow\n                    title={\"WebUI Path\"}\n                    icon={faAngleRight}\n                    objKey={\"alternative_webui_path\"}\n                    color={\"#0086a7\"}\n                />\n                <InputRow\n                    title={\"WebUI IP Address\"}\n                    icon={faWifi}\n                    objKey={\"web_ui_address\"}\n                    color={\"#7a00a7\"}\n                />\n                <InputRow\n                    title={\"WebUI Port\"}\n                    icon={faEthernet}\n                    objKey={\"web_ui_port\"}\n                    color={\"#b60049\"}\n                />\n                <SwitchRow\n                    title={\"WebUI UPnP Enabled\"}\n                    icon={faOutlet}\n                    objKey={\"web_ui_upnp\"}\n                    color={\"#ea9d00\"}\n                />\n                <InputRow\n                    title={\"WebUI Username\"}\n                    icon={faUser}\n                    objKey={\"web_ui_username\"}\n                    color={\"#0069ea\"}\n                />\n                <InputRow\n                    title={\"WebUI Password\"}\n                    icon={faKey}\n                    objKey={\"web_ui_password\"}\n                    color={\"#0069ea\"}\n                />\n            </List>\n            <Button className={\"danger\"} modifier={\"large--quiet\"}\n                onClick={()=> {\n                    window.location.reload();\n                    saveStorage(\"user\", {})\n                }}\n            >\n                Log Out\n            </Button>\n\n\n            <AlertDialog className={\"settingsAlert\"} isOpen={alert.open} onCancel={()=>setAlert({open: false})} modifier={\"rowfooter\"} cancelable>\n                <div className=\"alert-dialog-title\">{alert.label}</div>\n                <div className=\"alert-dialog-content\">\n                    <input ref={alertInput} type={\"text\"} defaultValue={preferences[alert.objKey]} placeholder={\"Enter \"+alert.label}/>\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({...alert,open: false})} className=\"alert-dialog-button\">\n                        Cancel\n                    </Button>\n                    <Button onClick={()=>{\n                        let updateJSON = {}\n                        updateJSON[alert.objKey] = alertInput.current.value\n\n                        updatePref(JSON.stringify(updateJSON)).then(()=>{\n                            setTimeout(()=>{\n                                setPrefsRefresh(true)\n                            },300)\n                        })\n                    }} className=\"alert-dialog-button\">\n                        Save\n                    </Button>\n                </div>\n            </AlertDialog>\n        </div>\n        )\n    }else{\n        return (\n            <div className={\"settingsCol\"}>\n                <h2 style={{textAlign:\"center\"}}>\n                    Settings require login.\n                </h2>\n            </div>\n        )\n    }\n}\n\nexport default Settings\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getCategories, removeCategories } from \"../utils/TorrClient\";\nimport { Context } from \"../App\";\nimport { AlertDialog, AlertDialogButton } from \"react-onsenui\";\n\nconst Categories = (props) => {\n  const { contextCategories } = useContext(Context);\n\n  const [categories, setCategories] = useState(contextCategories);\n  const [categoryRefresh, setCategoryRefresh] = useState(contextCategories);\n\n  useEffect(() => {\n    if (categoryRefresh) {\n      getCategories().then((response) => {\n        setCategories(response.data);\n        setCategoryRefresh(false);\n      });\n    }\n\n    if (contextCategories !== categories) {\n      setCategories(categories);\n    }\n  }, [contextCategories, categories, categoryRefresh]);\n\n  const [confirmAlert, setConfirmAlert] = useState({ open: false, name: \"\" });\n\n  return (\n    <div className={\"categoryCol\"}>\n      {Object.keys(categories).map((item, key) => (\n        <div className={\"categoryBox\"} key={key}>\n          <h3 className={\"title\"}>{categories[item].name}</h3>\n          <div className={\"actionRow\"}>\n            <button>Edit</button>\n            <button\n              className={\"danger\"}\n              onClick={() =>\n                setConfirmAlert({ open: true, name: categories[item].name })\n              }\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      ))}\n      {confirmAlert && (\n        <AlertDialog\n          isOpen={confirmAlert.open}\n          onCancel={() => confirmAlert({ open: false, name: \"\" })}\n          cancelable\n        >\n          <div className=\"alert-dialog-title\">Delete {confirmAlert.name}</div>\n          <div className=\"alert-dialog-content\">\n            Are you sure you want to delete this category?\n          </div>\n          <div className=\"alert-dialog-footer\">\n            <AlertDialogButton\n              onClick={async () => {\n                await removeCategories(confirmAlert.name);\n                setCategoryRefresh(true);\n                setConfirmAlert({ open: false, name: \"\" });\n              }}\n              class={\"danger\"}\n            >\n              Yes, Delete Category\n            </AlertDialogButton>\n\n            <AlertDialogButton\n              onClick={() => setConfirmAlert({ open: false, name: \"\" })}\n            >\n              Cancel\n            </AlertDialogButton>\n          </div>\n        </AlertDialog>\n      )}\n    </div>\n  );\n};\n\nexport default Categories;\n","import {Button, Icon, List, ListItem, Popover, Radio, ToolbarButton} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\n\n\nconst TorrentTopControls = (props) => {\n    const [addTorrentPopover, setAddTorrentPopover] = useState({\n        open: false,\n        target: null\n    })\n\n    const {settings, bigScreen, updateModal, updateAlert} = useContext(Context)\n\n    let AddButton = React.createRef()\n    let SortButton = React.createRef()\n\n    const [torrentURL, setTorrentURL] = useState(null)\n\n    const handleAddTorrent = () => {\n        addTorrent(torrentURL)\n            .then(response => {\n                console.log(response.data)\n                if (response.data === \"Ok.\") {\n                    updateAlert(\"Torrent Was Added\", \"This torrent was added successfully.\")\n                } else {\n                    updateAlert(\"Could Not Add Torrent\", \"This address could not be added.\")\n                }\n            }).catch(() => {\n            updateAlert(\"Could Not Add Torrent\", \"This address could not be added.\")\n        }).finally(() => {\n            setAddTorrentPopover({open: false, target: addTorrentPopover.target})\n        })\n    }\n\n\n    const AddTorrentModal = () => {\n        return (\n            <div className={\"modalAddTorrent\"}>\n                <h2>Enter Torrent URL</h2>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"}\n                          rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={() => handleAddTorrent()}\n                >Add Torrent</Button>\n            </div>\n        )\n    }\n\n\n    const showAddPopover = () => {\n        if (bigScreen) {\n            setAddTorrentPopover({open: true, target: AddButton.current})\n        } else {\n            updateModal({\n                open: true,\n                content: <AddTorrentModal/>,\n                top: window.innerHeight / 2,\n            })\n        }\n    }\n\n    const [sortPopover, setSortPopover] = useState({open: false, selected: 0})\n\n    const showSortPopover = () => {\n        setSortPopover({open: true, selected: sortPopover.selected})\n    }\n\n    const SortingOptions = [\n        {\n            object: {\n                key: \"added_on\",\n                reverse: true\n            },\n            label: \"Added Latest Up Top\",\n        },\n        {\n            object: {\n                key: \"added_on\",\n                reverse: false\n            },\n            label: \"Added Oldest Up Top\",\n        },\n        {\n            object: {\n                key: \"name\",\n                reverse: false\n            },\n            label: \"Abc... Up Top\",\n        },\n        {\n            object: {\n                key: \"name\",\n                reverse: true\n            },\n            label: \"Zxy... Up Top\",\n        },\n    ]\n\n    const updateSorting = (object, key) => {\n        setSortPopover({open: false, selected: key})\n        props.updateSorting(object)\n    }\n\n    return (\n        <div>\n            <ToolbarButton\n                ref={SortButton}\n                onClick={() => showSortPopover()}\n            >\n                <Icon size={30} icon=\"ion-ios-list\"/>\n            </ToolbarButton>\n            <ToolbarButton\n                ref={AddButton}\n                onClick={() => showAddPopover()}\n            >\n                <Icon size={35} icon=\"ion-ios-add\"/>\n            </ToolbarButton>\n\n            <Popover\n                isOpen={addTorrentPopover.open}\n                onCancel={() => setAddTorrentPopover({open: false, target: addTorrentPopover.target})}\n                getTarget={() => addTorrentPopover.target}\n                className={\"AddTorrentPopover\"}\n            >\n                <p>Enter Torrent URL</p>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"}\n                          rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={() => handleAddTorrent()}\n                >Add Torrent</Button>\n            </Popover>\n\n            <Popover\n                isOpen={sortPopover.open}\n                onCancel={() => setSortPopover({open: false, selected: sortPopover.selected})}\n                getTarget={() => SortButton.current}\n                className={\"SortTorrentPopover\"}\n            >\n                <List>\n                    {\n                        SortingOptions.map((option, key) =>\n                            <ListItem\n                                modifier={\"longdivider\"}\n                                key={key}\n                                onClick={() => updateSorting(option.object, key)}\n                            >\n                                <div>\n                                    <Radio name=\"color\" checked={key === sortPopover.selected}/>\n                                    {option.label}\n                                </div>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nexport default TorrentTopControls;\n","import {\n  Button,\n  Icon,\n  List,\n  ListItem,\n  Popover,\n  Radio,\n  ToolbarButton,\n} from \"react-onsenui\";\nimport React, { useContext, useState } from \"react\";\n\nconst CategoriesTopControls = (props) => {\n  const [addCategory, setAddCategory] = useState({\n    open: false,\n    target: null,\n  });\n\n  let AddButton = React.createRef();\n\n  return (\n    <div>\n      <ToolbarButton ref={AddButton}>\n        <Icon size={35} icon=\"ion-ios-add\" />\n      </ToolbarButton>\n\n      {/*<Popover*/}\n      {/*    isOpen={addTorrentPopover.open}*/}\n      {/*    onCancel={() => setAddTorrentPopover({open: false, target: addTorrentPopover.target})}*/}\n      {/*    getTarget={() => addTorrentPopover.target}*/}\n      {/*    className={\"AddTorrentPopover\"}*/}\n      {/*>*/}\n      {/*    <p>Enter Torrent URL</p>*/}\n      {/*    <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"}*/}\n      {/*              rows={10}/>*/}\n      {/*    <Button*/}\n      {/*        modifier={\"large--quiet\"}*/}\n      {/*        onClick={() => handleAddTorrent()}*/}\n      {/*    >Add Torrent</Button>*/}\n      {/*</Popover>*/}\n    </div>\n  );\n};\n\nexport default CategoriesTopControls;\n","import React, { useContext, useState } from \"react\";\nimport TorrentsCol from \"../Pages/TorrentsCol\";\nimport { Page, Tab, Tabbar, Toolbar } from \"react-onsenui\";\nimport Search from \"../Pages/Search\";\nimport Settings from \"../Pages/Settings\";\nimport Categories from \"../Pages/Categories\";\nimport { Context } from \"../App\";\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport CategoriesTopControls from \"./CategoriesTopControls\";\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const pageTitles = [\"Your Torrents\", \"Search\", \"Categories\", \"Settings\"];\n\n  const { settings, bigScreen } = useContext(Context);\n\n  const [sort, setSort] = useState({ key: \"added_on\", reverse: true });\n\n  const updateSorting = (SortObj) => {\n    setSort(SortObj);\n  };\n\n  return (\n    <>\n      <Toolbar>\n        <div className=\"left\">\n          <h1>{pageTitles[activeTab]}</h1>\n        </div>\n        <div className=\"right\">\n          {settings.loggedin && !bigScreen && activeTab === 0 ? (\n            <TorrentTopControls updateSorting={(obj) => updateSorting(obj)} />\n          ) : null}\n          {settings.loggedin && !bigScreen && activeTab === 2 ? (\n            <CategoriesTopControls />\n          ) : null}\n        </div>\n      </Toolbar>\n      <Tabbar\n        className={\"tabWrapper\"}\n        animation={\"none\"}\n        position=\"bottom\"\n        onPreChange={({ index }) => setActiveTab(index)}\n        index={activeTab}\n        renderTabs={(activeIndex) => [\n          {\n            content: (\n              <Page key={1}>\n                <TorrentsCol\n                  sortingObj={sort}\n                  title={pageTitles[0]}\n                  active={(activeIndex === 0).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Torrents\" icon=\"ion-ios-download\" />,\n          },\n          {\n            content: (\n              <Page key={2}>\n                <Search\n                  title={pageTitles[1]}\n                  active={(activeIndex === 1).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Search\" icon=\"ion-ios-search\" />,\n          },\n          {\n            content: (\n              <Page key={3}>\n                <Categories\n                  title={pageTitles[2]}\n                  active={(activeIndex === 2).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Categories\" icon=\"ion-ios-pricetags\" />,\n          },\n          {\n            content: (\n              <Page key={4}>\n                <Settings\n                  title={pageTitles[3]}\n                  active={(activeIndex === 3).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Settings\" icon=\"ion-ios-cog\" />,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default Tabs;\n","import TorrentsCol from \"../Pages/TorrentsCol\";\nimport {Icon, Page, Toolbar, ToolbarButton} from \"react-onsenui\";\nimport Search from \"../Pages/Search\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport { Context } from \"../App\"\nimport RoundLogo from \"../images/logo_round.png\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport Settings from \"../Pages/Settings\";\n\nconst TabletView = () => {\n\n    const {settings,updateModal} = useContext(Context)\n\n    const [sort,setSort] = useState({key: \"added_on\",reverse:true})\n\n    const updateSorting = (SortObj) => {\n        setSort(SortObj)\n    }\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left tabletHeader\">\n                    <div>\n                        {settings.loggedin?<img className={\"loginImage-small\"} alt={\"iQbit Logo\"} src={RoundLogo}/>:null}\n                        <h1>iQbit</h1>\n                    </div>\n                    {settings.loggedin?\n                        <TorrentTopControls\n                            updateSorting={(obj)=>updateSorting(obj)}\n                        />\n                        :null\n                    }\n                </div>\n                <div className=\"right\">\n                    <ToolbarButton\n                        onClick={()=>updateModal({\n                            open:true,\n                            content:<Settings/>,\n                        })}\n                    >\n                        <Icon size={35} icon=\"ion-ios-cog\" />\n                    </ToolbarButton>\n                </div>\n            </Toolbar>\n            <Page>\n                <div className=\"tabletView\">\n                    <TorrentsCol\n                        sortingObj={sort}\n                    />\n                    <Search/>\n                </div>\n            </Page>\n        </>\n    )\n}\n\nexport default TabletView;\n","import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize;\n","import React, {useEffect, useState} from \"react\";\nimport Draggable from 'react-draggable';\nimport useWindowSize from \"../utils/useWindowSize\";\n\nconst BottomSheet = (props) => {\n\n    const WindowSize = useWindowSize();\n\n    const topDiff = props.top || 100;\n    const leftDiff = props.left || 0;\n    // const open = props.open;\n\n    const [open,setOpen] = useState(false)\n\n    useEffect(()=>{\n        if(props.open){\n            setOpen(true)\n        }else{\n            setOpen(false)\n        }\n    },[props])\n\n    const initialPosition = {x: 0, y: WindowSize.height}\n\n    const finalPosition = {\n        y: topDiff,\n        x: leftDiff,\n    }\n\n    const threshold = .25;\n\n    return (\n        <div className={open?\"BottomSheet open\":\"BottomSheet\"}>\n            <div\n                className={\"BottomSheetOverlay\"}\n                onClick={()=>props.onDismiss()}\n            />\n            <div>\n                <Draggable\n                    onClick={(event)=> {\n                        console.log(event)\n                        console.log('clicked inside')\n                    }}\n                    axis={\"y\"}\n                    handle={\".handleArea\"}\n                    defaultPosition={initialPosition}\n                    position={open?finalPosition:initialPosition}\n                    children={\n                        <div className={\"modal\"}>\n                            <span className={\"handleArea\"}><span className={\"handle\"}/></span>\n                            {props.children}\n                        </div>\n                    }\n                    bounds={{top:topDiff}}\n                    onStop={(event)=>{\n                        if(event.pageY > ( WindowSize.height - (WindowSize.height * threshold))){\n                            setOpen(false)\n                            setTimeout(()=>{\n                                props.onDismiss()\n                            },400)\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BottomSheet\n","import {useState,useEffect} from \"react\";\n\nfunction useMedia(queries, values, defaultValue) {\n    // Array containing a media query list for each query\n    const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n    // Function that gets value based on matching media query\n    const getValue = () => {\n        // Get index of first media query that matches\n        const index = mediaQueryLists.findIndex(mql => mql.matches);\n        // Return related value or defaultValue if none\n        return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n    };\n\n    // State and setter for matched value\n    const [value, setValue] = useState(getValue);\n\n    useEffect(\n        () => {\n            // Event listener callback\n            // Note: By defining getValue outside of useEffect we ensure that it has ...\n            // ... current values of hook args (as this hook callback is created once on mount).\n            const handler = () => setValue(getValue);\n            // Set a listener for each media query with above handler as callback.\n            mediaQueryLists.forEach(mql => mql.addListener(handler));\n            // Remove listeners on cleanup\n            return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n        },\n        [] // Empty array ensures effect is only run on mount and unmount\n    );\n\n    return value;\n}\n\nexport default useMedia;\n","import {useState} from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import {useEffect} from \"react\";\nimport useMedia from \"./useMedia\"\nimport useLocalStorage from \"./useLocalStorage\"\n\nexport function useDarkMode() {\n    // Use our useLocalStorage hook to persist state through a page refresh.\n    // Read the recipe for this hook to learn more: usehooks.com/useLocalStorage\n    const [enabledState, setEnabledState] = useLocalStorage('dark-mode-enabled');\n\n    // See if user has set a browser or OS preference for dark mode.\n    // The usePrefersDarkMode hook composes a useMedia hook (see code below).\n    const prefersDarkMode = usePrefersDarkMode();\n\n    // If enabledState is defined use it, otherwise fallback to prefersDarkMode.\n    // This allows user to override OS level setting on our website.\n    const enabled =\n        typeof enabledState !== 'undefined' ? enabledState : prefersDarkMode;\n\n    // Fire off effect that add/removes dark mode class\n    useEffect(\n        () => {\n            const className = 'dark-mode';\n            const element = window.document.body;\n            if (enabled) {\n                element.classList.add(className);\n            } else {\n                element.classList.remove(className);\n            }\n        },\n        [enabled] // Only re-call effect when value changes\n    );\n\n    // Return enabled state and setter\n    return [enabled, setEnabledState];\n}\n\n// Compose our useMedia hook to detect dark mode preference.\n// The API for useMedia looks a bit weird, but that's because ...\n// ... it was designed to support multiple media queries and return values.\n// Thanks to hook composition we can hide away that extra complexity!\n// Read the recipe for useMedia to learn more: usehooks.com/useMedia\nexport function usePrefersDarkMode() {\n    return useMedia(['(prefers-color-scheme: dark)'], [true], false);\n}\n","import React, {useState, createContext, useEffect} from 'react';\nimport Tabs from './components/Tabs';\nimport TabletView from './components/TabletView';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './App.scss';\nimport { getStorage, saveStorage } from './utils/Storage';\nimport BottomSheet from \"./components/BottomSheet\";\nimport {getCategories, getPrefs, login} from \"./utils/TorrClient\";\nimport {AlertDialog,Button} from \"react-onsenui\"\nimport {useDarkMode} from \"./utils/useDarkMode\"\n\nexport const Context = createContext(null);\n\nconst App = () => {\n\n    const [settings,setSettings] = useState({\n        loggedin:null,\n        username:null,\n        password:null\n    });\n\n    useEffect(()=>{\n        const settings = getStorage(\"user\")\n        let templateObject = settings;\n\n        if(settings === null){\n            templateObject = {\n                loggedin:false,\n                username:null,\n                password:null,\n            }\n            saveStorage(\"user\",templateObject)\n        }else{\n            setSettings(settings)\n        }\n    },[])\n\n    useDarkMode();\n\n    const screenWidth = window.innerWidth;\n    const breakpoint = 768;\n\n    const [bigScreen] = useState(screenWidth > breakpoint)\n    const installed =  window.matchMedia('(display-mode: standalone)').matches\n    const [prefs,setPrefs] = useState({\n        add_trackers: \"\",\n        add_trackers_enabled: null,\n        alt_dl_limit: null,\n        alt_up_limit: null,\n        alternative_webui_enabled: null,\n        alternative_webui_path: \"\",\n        announce_ip: \"\",\n        announce_to_all_tiers: null,\n        announce_to_all_trackers: null,\n        anonymous_mode: null,\n        async_io_threads: null,\n        auto_delete_mode: null,\n        auto_tmm_enabled: null,\n        autorun_enabled: null,\n        autorun_program: \"\",\n        banned_IPs: \"\",\n        bittorrent_protocol: null,\n        bypass_auth_subnet_whitelist: \"\",\n        bypass_auth_subnet_whitelist_enabled: null,\n        bypass_local_auth: null,\n        category_changed_tmm_enabled: null,\n        checking_memory_use: null,\n        create_subfolder_enabled: null,\n        current_interface_address: \"\",\n        current_network_interface: \"\",\n        dht: null,\n        disk_cache: null,\n        disk_cache_ttl: null,\n        dl_limit: null,\n        dont_count_slow_torrents: null,\n        dyndns_domain: \"\",\n        dyndns_enabled: false,\n        dyndns_password: \"\",\n        dyndns_service: null,\n        dyndns_username: \"\",\n        embedded_tracker_port: null,\n        enable_coalesce_read_write: null,\n        enable_embedded_tracker: null,\n        enable_multi_connections_from_same_ip: null,\n        enable_os_cache: null,\n        enable_piece_extent_affinity: null,\n        enable_upload_suggestions: null,\n        encryption: null,\n        export_dir: \"\",\n        export_dir_fin: \"\",\n        file_pool_size: null,\n        incomplete_files_ext: null,\n        ip_filter_enabled: null,\n        ip_filter_path: \"\",\n        ip_filter_trackers: null,\n        limit_lan_peers: null,\n        limit_tcp_overhead: null,\n        limit_utp_rate: null,\n        listen_port: null,\n        locale: \"\",\n        lsd: null,\n        mail_notification_auth_enabled: null,\n        mail_notification_email: \"\",\n        mail_notification_enabled: null,\n        mail_notification_password: \"\",\n        mail_notification_sender: \"\",\n        mail_notification_smtp: \"\",\n        mail_notification_ssl_enabled: false,\n        mail_notification_username: \"\",\n        max_active_downloads: null,\n        max_active_torrents: null,\n        max_active_uploads: null,\n        max_connec: null,\n        max_connec_per_torrent: null,\n        max_ratio: null,\n        max_ratio_act: null,\n        max_ratio_enabled: null,\n        max_seeding_time: null,\n        max_seeding_time_enabled: null,\n        max_uploads: null,\n        max_uploads_per_torrent: null,\n        outgoing_ports_max: null,\n        outgoing_ports_min: null,\n        pex: null,\n        preallocate_all: null,\n        proxy_auth_enabled: null,\n        proxy_ip: \"\",\n        proxy_password: \"\",\n        proxy_peer_connections: null,\n        proxy_port: null,\n        proxy_torrents_only: null,\n        proxy_type: null,\n        proxy_username: \"\",\n        queueing_enabled: null,\n        random_port: null,\n        recheck_completed_torrents: null,\n        resolve_peer_countries: null,\n        rss_auto_downloading_enabled:null,\n        rss_download_repack_proper_episodes:null,\n        rss_max_articles_per_feed:null,\n        rss_processing_enabled:null,\n        rss_refresh_interval:null,\n        rss_smart_episode_filters:\"\",\n        save_path: \"\",\n        save_path_changed_tmm_enabled: false,\n        save_resume_data_interval: null,\n        scan_dirs:{},\n        schedule_from_hour: null,\n        schedule_from_min: null,\n        schedule_to_hour: null,\n        schedule_to_min: null,\n        scheduler_days: null,\n        scheduler_enabled: false,\n        send_buffer_low_watermark: null,\n        send_buffer_watermark: null,\n        send_buffer_watermark_factor: null,\n        slow_torrent_dl_rate_threshold: null,\n        slow_torrent_inactive_timer: null,\n        slow_torrent_ul_rate_threshold: null,\n        socket_backlog_size: null,\n        start_paused_enabled: false,\n        stop_tracker_timeout: null,\n        temp_path: \"\",\n        temp_path_enabled: null,\n        torrent_changed_tmm_enabled: null,\n        up_limit: null,\n        upload_choking_algorithm: null,\n        upload_slots_behavior: null,\n        upnp: null,\n        use_https: null,\n        utp_tcp_mixed_mode: null,\n        web_ui_address: \"\",\n        web_ui_ban_duration: null,\n        web_ui_clickjacking_protection_enabled: null,\n        web_ui_csrf_protection_enabled: null,\n        web_ui_custom_http_headers: \"\",\n        web_ui_domain_list: \"\",\n        web_ui_host_header_validation_enabled: null,\n        web_ui_https_cert_path: \"\",\n        web_ui_https_key_path: \"\",\n        web_ui_max_auth_fail_count: null,\n        web_ui_port: null,\n        web_ui_secure_cookie_enabled: null,\n        web_ui_session_timeout: null,\n        web_ui_upnp: null,\n        web_ui_use_custom_http_headers_enabled: null,\n        web_ui_username: \"\"\n    });\n\n\n    const updateSettings = (settings) => {\n        setSettings(settings);\n    }\n\n    const [modal,setModal] = useState({\n        open:false,\n        content:null\n    })\n\n    const updateModal = (update = {open:true,content:<span/>}) => {\n        setModal(update)\n    }\n\n    const [contextCategories,setContextCategories] = useState({})\n    const [cookie,setCookie] = useState(false);\n\n    useEffect(()=>{\n\n        if(settings.loggedin){\n            login({\n                username:settings.username,\n                password:settings.password\n            }).then(()=>{\n                setCookie(true)\n                getPrefs().then((response)=>{\n                    setPrefs(response.data)\n                })\n\n                getCategories().then((response)=>{\n                    setContextCategories(response.data)\n                })\n            })\n        }\n\n    },[settings,settings.loggedin, settings.password, settings.username])\n\n    const [alert,setAlert] = useState({\n        open:false,\n        title:null,\n        message:null\n    })\n\n    const updateAlert = (title,message) => {\n        setAlert({open:true,title,message})\n    }\n\n    const Alert = (props) =>{\n        return(\n            <AlertDialog isOpen={props.open} onCancel={()=>setAlert({open: false,title:alert.title,message:alert.message})} cancelable>\n                <div className=\"alert-dialog-title\">{props.title}</div>\n                <div className=\"alert-dialog-content\">\n                    {props.message}\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({open: false,title:alert.title,message:alert.message})} className=\"alert-dialog-button\">\n                        Ok\n                    </Button>\n                </div>\n            </AlertDialog>\n        )\n    }\n\n    return (\n        <Context.Provider value={{\n            settings,\n            updateSettings,\n            bigScreen,\n            modal,\n            updateModal,\n            installed,\n            updateAlert,\n            prefs,\n            contextCategories,\n            cookie\n        }}\n        >\n            <div className={(settings.loggedin ? \"loggedin \":\" login \") + (installed ? \" installed\" : \"\")}>\n                {bigScreen ? <TabletView/> : <Tabs/>}\n                <BottomSheet  open={modal.open} onDismiss={()=>setModal({open: false})} top={modal.top?modal.top:bigScreen?25:85} children={modal.content}/>\n                <Alert open={alert.open} title={alert.title} message={alert.message} />\n            </div>\n        </Context.Provider>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_round.651d9c54.png\";","module.exports = __webpack_public_path__ + \"static/media/imagemissing.960d2bd1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-YTS.fdd85bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-TPB.8635a316.svg\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t108,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t109,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t110,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t111,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t112,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t113,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t114,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t115,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t116,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t117,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t118,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t119,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t120,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t121,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t122,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t123,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t124,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t125,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t126,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t127,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t128,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t129,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t130,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t131,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t132,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t133,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t134,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t135,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t136,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t137,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t138,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t139,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t140,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t141,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t142,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t143,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t144,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t145,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t146,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t147,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t148,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t149,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t150,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 76;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t151,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 78;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}