{"version":3,"sources":["../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/TorrClient.js","components/stateDictionary.js","utils/useInterval.js","components/TorrentInfo.js","components/TorrentBox.js","utils/Storage.js","components/LogoHeader.js","components/Torrents.js","components/TorrentsCol.js","searchAPIs/yts.js","components/Search.js","components/Settings.js","components/TorrentsTopControls.js","components/Tabs.js","components/TabletView.js","utils/useWindowSize.js","components/BottomSheet.js","App.js","serviceWorker.js","index.js","images/logo_round.png","images/logo-YTS.svg","images/imagemissing.png","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","serverAddress","window","location","href","substring","length","console","log","baseURL","APICall","axios","create","withCredentials","login","a","username","password","get","params","sync","rid","resume","hash","hashes","pause","remove","deleteFiles","addTorrent","url","urls","getPrefs","updatePref","json","stateDictionary","error","long","short","missingFiles","uploading","pausedUP","queuedUP","stalledUP","checkingUP","forcedUP","allocating","downloading","metaDL","pausedDL","queuedDL","stalledDL","checkingDL","forceDL","checkingResumeData","moving","unknown","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","StatsRow","props","className","title","data","item","key","value","icon","label","TorrentInfo","name","useState","torrent","setTorrent","resp","torrents","AmountRow","fileSize","downloaded","size","faDownload","downloaded_session","faPallet","uploaded","faUpload","uploaded_session","faPalletAlt","ratio","toFixed","faShareAlt","date","Date","setSeconds","eta","timeString","toISOString","substr","SpeedsRow","dlspeed","faTachometerAltFastest","faTachometerAltSlowest","upspeed","faStopwatch","DataRow","num_seeds","num_complete","faUserAstronaut","num_leechs","num_incomplete","faUserSecret","save_path","faFolderOpen","StateRow","state","faBolt","progress","secondaryValue","TorrentBox","filter","torrentData","actionLoading","setActionLoading","isDone","includes","isPaused","isDL","statsIconStyle","color","marginRight","setTimeout","useContext","Context","installed","updateModal","open","options","modifier","onclick","torrentAction","setTorrentAction","undefined","deleteAlert","setDeleteAlert","style","paddingBottom","faCloudUpload","faCloudDownload","faTachometerAltFast","filesize","round","type","onClick","content","handleMoreButton","disabled","isOpen","isCancelable","onCancel","option","cancelable","saveStorage","localStorage","setItem","JSON","stringify","getItem","LogoHeader","alt","src","roundLogo","Torrents","settings","updateSettings","feedback","setFeedback","setUsername","setPassword","torrentList","setTorrentList","setTorrentData","RID","setRID","loggedin","full_update","updatedObj","forEach","property","fullData","segment","htmlFor","onChange","event","target","placeholder","autoCapitalize","autoCorrect","autoComplete","response","userObject","catch","TorrentsCol","setSegment","SegmentPicker","mode","onIonChange","detail","YTSModalInfo","updateAlert","TorrentAttr","letter","otherInfo","language","faComments","rating","faMedal","runtime","genres","join","faFilm","downloadsStarted","setDownloadsStarted","title_long","thisTorrent","faTv","quality","faFilmCanister","seeds","faUsersClass","peers","faBox","faFolderDownload","class","encodeURI","handleDownload","description_full","yt_trailer_code","width","height","YTSSearch","searchTerm","setSearchTerm","searchLoading","setSearchLoading","searchResults","setSearchResults","searchReady","setSearchReady","submitQuery","limit","page","minimum_rating","query_term","genre","sorty_by","with_rt_ratings","moviesArray","movies","category","onKeyPress","role","backgroundImage","medium_cover_image","imageMissing","Search","logo","YTSLogo","categories","component","providers","selectedProvider","setSelectedProvider","selectedCategory","setSelectedCategory","Settings","prefs","preferences","setPreferences","prefsRefresh","setPrefsRefresh","SwitchRow","backgroundColor","checked","objKey","InputRow","tappable","setAlert","faEdit","alert","alertInput","faFolders","faMinusHexagon","faFolderMinus","faNetworkWired","faEthernet","faUserLock","faUserRobot","faKey","faPaintBrushAlt","faAngleRight","faWifi","faOutlet","faUser","reload","ref","defaultValue","textAlign","TorrentTopControls","addTorrentPopover","setAddTorrentPopover","bigScreen","updateTorrentList","AddButton","React","createRef","torrentURL","setTorrentURL","handleAddTorrent","finally","AddTorrentModal","rows","top","innerHeight","getTarget","Tabs","activeTab","setActiveTab","pageTitles","animation","position","onPreChange","index","renderTabs","activeIndex","active","tab","TabletView","RoundLogo","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","addEventListener","removeEventListener","BottomSheet","WindowSize","topDiff","leftDiff","left","setOpen","initialPosition","x","y","finalPosition","axis","handle","defaultPosition","children","bounds","onStop","pageY","onDismiss","createContext","App","setSettings","parse","getStorage","screenWidth","matchMedia","matches","add_trackers","add_trackers_enabled","alt_dl_limit","alt_up_limit","alternative_webui_enabled","alternative_webui_path","announce_ip","announce_to_all_tiers","announce_to_all_trackers","anonymous_mode","async_io_threads","auto_delete_mode","auto_tmm_enabled","autorun_enabled","autorun_program","banned_IPs","bittorrent_protocol","bypass_auth_subnet_whitelist","bypass_auth_subnet_whitelist_enabled","bypass_local_auth","category_changed_tmm_enabled","checking_memory_use","create_subfolder_enabled","current_interface_address","current_network_interface","dht","disk_cache","disk_cache_ttl","dl_limit","dont_count_slow_torrents","dyndns_domain","dyndns_enabled","dyndns_password","dyndns_service","dyndns_username","embedded_tracker_port","enable_coalesce_read_write","enable_embedded_tracker","enable_multi_connections_from_same_ip","enable_os_cache","enable_piece_extent_affinity","enable_upload_suggestions","encryption","export_dir","export_dir_fin","file_pool_size","incomplete_files_ext","ip_filter_enabled","ip_filter_path","ip_filter_trackers","limit_lan_peers","limit_tcp_overhead","limit_utp_rate","listen_port","locale","lsd","mail_notification_auth_enabled","mail_notification_email","mail_notification_enabled","mail_notification_password","mail_notification_sender","mail_notification_smtp","mail_notification_ssl_enabled","mail_notification_username","max_active_downloads","max_active_torrents","max_active_uploads","max_connec","max_connec_per_torrent","max_ratio","max_ratio_act","max_ratio_enabled","max_seeding_time","max_seeding_time_enabled","max_uploads","max_uploads_per_torrent","outgoing_ports_max","outgoing_ports_min","pex","preallocate_all","proxy_auth_enabled","proxy_ip","proxy_password","proxy_peer_connections","proxy_port","proxy_torrents_only","proxy_type","proxy_username","queueing_enabled","random_port","recheck_completed_torrents","resolve_peer_countries","rss_auto_downloading_enabled","rss_download_repack_proper_episodes","rss_max_articles_per_feed","rss_processing_enabled","rss_refresh_interval","rss_smart_episode_filters","save_path_changed_tmm_enabled","save_resume_data_interval","scan_dirs","schedule_from_hour","schedule_from_min","schedule_to_hour","schedule_to_min","scheduler_days","scheduler_enabled","send_buffer_low_watermark","send_buffer_watermark","send_buffer_watermark_factor","slow_torrent_dl_rate_threshold","slow_torrent_inactive_timer","slow_torrent_ul_rate_threshold","socket_backlog_size","start_paused_enabled","stop_tracker_timeout","temp_path","temp_path_enabled","torrent_changed_tmm_enabled","up_limit","upload_choking_algorithm","upload_slots_behavior","upnp","use_https","utp_tcp_mixed_mode","web_ui_address","web_ui_ban_duration","web_ui_clickjacking_protection_enabled","web_ui_csrf_protection_enabled","web_ui_custom_http_headers","web_ui_domain_list","web_ui_host_header_validation_enabled","web_ui_https_cert_path","web_ui_https_key_path","web_ui_max_auth_fail_count","web_ui_port","web_ui_secure_cookie_enabled","web_ui_session_timeout","web_ui_upnp","web_ui_use_custom_http_headers_enabled","web_ui_username","setPrefs","modal","setModal","message","Alert","Provider","update","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f12a828.chunk.js","sourcesContent":["var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t181,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 105;\nmodule.exports = webpackAsyncContext;","import axios from 'axios';\n\nlet serverAddress = window.location.href;\n\nif(serverAddress.substring(serverAddress.length-1) !== \"/\"){\n  serverAddress = `${serverAddress}/`\n}\n\nconsole.log(serverAddress)\n\nconst baseURL = `${serverAddress}api/v2/`\n\nconst APICall = axios.create({\n  baseURL:baseURL,\n  withCredentials:true\n})\n\nexport const login = async ({username, password}) => {\n  return APICall.get('auth/login',{\n    params:{username,password}\n  })\n}\n\nexport const logout = () => {\n  return axios.get('auth/logout')\n}\n\nexport const getTorrents = async () => {\n  return APICall.get('torrents/info',{\n    params:{\n      sort:\"added_on\",\n      reverse:true,\n    }\n  })\n}\n\nexport const getProperties = async (hash) => {\n  return APICall.get('torrents/properties',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const sync = async (rid) => {\n\n  return APICall.get('sync/maindata',{\n    params:{\n      rid\n    }\n  })\n}\n\nexport const resume = async (hash=\"\") => {\n  return APICall.get('torrents/resume',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const pause = async (hash=\"\") => {\n  return APICall.get('torrents/pause',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const remove = async (hash=\"\",deleteFiles=false) => {\n  return APICall.get('torrents/delete',{\n    params:{\n      hashes:hash,\n      deleteFiles\n    }\n  })\n}\n\nexport const addTorrent = async (url=\"\") => {\n  return APICall.get('torrents/add',{\n    params:{\n      urls:url,\n    }\n  })\n}\n\nexport const getPrefs = async () => {\n  return APICall.get('app/preferences')\n}\n\nexport const updatePref = async (json={}) =>{\n  return APICall.get('app/setPreferences',{\n    params:{\n      json\n    },\n  })\n}\n","const stateDictionary = {\n  error : {\n    long:\"Some error occurred, applies to paused torrents\",\n    short:\"Error\"\n  },\n  missingFiles : {\n    long:\"Torrent data files is missing\",\n    short:\"Files Missing\"\n  },\n  uploading : {\n    long:\"Torrent is being seeded and data is being transferred\",\n    short:\"Seeding\"\n  },\n  pausedUP : {\n    long:\"Torrent is paused and has finished downloading\",\n    short:\"Paused / Done\"\n  },\n  queuedUP : {\n    long:\"Queuing is enabled and torrent is queued for upload\",\n    short:\"Queued For Seeding\"\n  },\n  stalledUP : {\n    long:\"Torrent is being seeded, but no connections were made\",\n    short:\"Available for Seeding\"\n  },\n  checkingUP : {\n    long:\"Torrent has finished downloading and is being checked\",\n    short:\"Checking Files\"\n  },\n  forcedUP : {\n    long:\"Torrent is forced to uploading and ignore queue limit\",\n    short:\"Force Uploading\",\n  },\n  allocating : {\n    long:\"Torrent is allocating disk space for download\",\n    short:\"Allocating Space\"\n  },\n  downloading : {\n    long:\"Torrent is being downloaded and data is being transferred\",\n    short:\"Downloading\"\n  },\n  metaDL : {\n    long:\"Torrent has just started downloading and is fetching metadata\",\n    short:\"Fetching Metadata\"\n  },\n  pausedDL : {\n    long:\"Torrent is paused and has NOT finished downloading\",\n    short:\"Paused\"\n  },\n  queuedDL : {\n    long:\"Queuing is enabled and torrent is queued for download\",\n    short:\"Queued for Download\"\n  },\n  stalledDL : {\n    long:\"Torrent is being downloaded, but no connection were made\",\n    short:\"Stalled\"\n  },\n  checkingDL : {\n    long:\"Same as checkingUP, but torrent has NOT finished downloading\",\n    short:\"Checking Files\"\n  },\n  forceDL : {\n    long:\"Torrent is forced to downloading to ignore queue limit\",\n    short:\"Force Downloading\"\n  },\n  checkingResumeData : {\n    long:\"Checking resume data on qBt startup\",\n    short:\"Checking Resume\"\n  },\n  moving : {\n    long:\"Torrent is moving to another location\",\n    short:\"Moving Location\",\n  },\n  unknown : {\n    long:\"Unknown status\",\n    short:\"Unknown\",\n  },\n}\n\nexport default stateDictionary;\n","import {useEffect,useRef} from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, {useState} from \"react\";\nimport {ProgressBar} from \"react-onsenui\";\nimport fileSize from \"filesize\";\nimport stateDictionary from './stateDictionary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faBolt, faDownload,\n    faFolderOpen,\n    faPallet,\n    faPalletAlt,\n    faShareAlt,\n    faStopwatch,\n    faTachometerAltFastest,\n    faTachometerAltSlowest,\n    faUpload,\n    faUserAstronaut,\n    faUserSecret\n} from '@fortawesome/pro-regular-svg-icons'\nimport useInterval from \"../utils/useInterval\";\nimport {sync} from \"../utils/TorrClient\";\n\nconst TorrentInfo = (props) => {\n    const {item} = props;\n    const {name} = item\n    const {hash} = props\n\n    const [torrent,setTorrent] = useState(item)\n\n    useInterval(() => {\n        sync().then(resp => {\n            setTorrent(resp.data.torrents[hash])\n        });\n    },1000)\n\n    const AmountRow = [\n        {\n            value: `${fileSize(torrent.downloaded)} / ${fileSize(torrent.size)}`,\n            icon: faDownload,\n            label: \"Downloaded\"\n        },\n        {\n            value: fileSize(torrent.downloaded_session),\n            icon: faPallet,\n            label: \"Downloaded This Session\"\n        },\n        {\n            value: fileSize(torrent.uploaded),\n            icon: faUpload,\n            label: \"Uploaded\"\n        },\n        {\n            value: fileSize(torrent.uploaded_session),\n            icon: faPalletAlt,\n            label: \"Uploaded This Session\"\n        },\n        {\n            value: torrent.ratio?torrent.ratio.toFixed(2):0,\n            icon: faShareAlt,\n            label: \"Share Ratio\"\n        },\n    ]\n\n    const date = new Date(0);\n    date.setSeconds(torrent.eta); // specify value for SECONDS here\n    const timeString = date.toISOString().substr(11, 8);\n\n    const SpeedsRow = [\n        {\n            value: `${fileSize(torrent.dlspeed)}/s`,\n            icon: torrent.dlspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: `${fileSize(torrent.upspeed)}/s`,\n            icon: torrent.upspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: torrent.eta !== 8640000 ?\n                timeString\n                :0\n            ,\n            icon: faStopwatch,\n            label: \"Estimate Time Left\"\n        },\n    ]\n\n    const DataRow = [\n        {\n            value: `${torrent.num_seeds} (${torrent.num_complete})`,\n            icon: faUserAstronaut,\n            label: \"Seeds\"\n        },\n        {\n            value: `${torrent.num_leechs} (${torrent.num_incomplete})`,\n            icon: faUserSecret,\n            label: \"Leechs\"\n        },\n        {\n            value: torrent.save_path,\n            icon: faFolderOpen,\n            label: \"Save Path\"\n        },\n    ]\n\n    const StateRow = [\n        {\n            value: stateDictionary[torrent.state].short,\n            icon: faBolt,\n            label: stateDictionary[torrent.state].long\n        },\n    ]\n\n    return(\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{name}</h2>\n                <div>\n                    <span className={\"ProgressAmount\"}>{(torrent.progress*100).toFixed(1)}%</span>\n                    <ProgressBar\n                        value={torrent.progress*100}\n                        secondaryValue={100}\n                    />\n                </div>\n            </div>\n            <StatsRow data={StateRow} title={\"CurrentState\"}/>\n            <StatsRow data={DataRow} title={\"Metadata\"}/>\n            <StatsRow data={SpeedsRow} title={\"Speeds\"}/>\n            <StatsRow data={AmountRow} title={\"Amounts\"}/>\n        </div>\n    )\n}\n\nexport const StatsRow = (props) => {\n    return(\n        <div className={\"infoStatsRowWrapper\"}>\n            <div className={\"infoTitleBox\"}>\n                <h3>{props.title}</h3>\n            </div>\n            <div className={\"infoStatsRow\"}>\n                {props.data.map((item,key) =>\n                    <div className={\"infoStatBox\"} key={key}>\n                        <h4 className={\"infoStat\"}>{item.value}</h4>\n                        <div>\n                            <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                            <span className={\"infoStatLabel\"}>{item.label}</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default TorrentInfo;\n","import React, {useState, useEffect, useContext} from 'react';\nimport {ActionSheet, ActionSheetButton, AlertDialog, AlertDialogButton, Icon, ProgressBar} from 'react-onsenui';\nimport stateDictionary from './stateDictionary';\nimport {pause, remove, resume} from '../utils/TorrClient';\nimport filesize from \"filesize\"\nimport {IonSpinner} from \"@ionic/react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faCloudDownload, faCloudUpload, faTachometerAltFast} from \"@fortawesome/pro-regular-svg-icons\";\nimport {Context} from \"../App\";\nimport TorrentInfo from \"./TorrentInfo\";\n\nconst TorrentBox = ( props ) => {\n\n  // const template = {\n  //   added_on: 1596849714,\n  //   amount_left: 2025018553,\n  //   auto_tmm: false,\n  //   availability: 0.004999999888241291,\n  //   category: \"\",\n  //   completed: 19824640,\n  //   completion_on: 18000,\n  //   dl_limit: -1,\n  //   dlspeed: 0,\n  //   downloaded: 19542669,\n  //   downloaded_session: 19900384,\n  //   eta: 8640000,\n  //   f_l_piece_prio: false,\n  //   force_start: false,\n  //   last_activity: 0,\n  //   magnet_uri: \"magnet:?xt=urn:btih:633545e90ff160e875f0bc267b4895abe828542e&dn=Blood%20Diamond%20(2006)%20%5b1080p%5d\",\n  //   max_ratio: -1,\n  //   max_seeding_time: -1,\n  //   name: \"Blood Diamond (2006) [1080p]\",\n  //   num_complete: 25,\n  //   num_incomplete: 206,\n  //   num_leechs: 0,\n  //   num_seeds: 0,\n  //   priority: 3,\n  //   progress: 0.009694943880227397,\n  //   ratio: 0,\n  //   ratio_limit: -2,\n  //   save_path: \"/home/ntoporcov/Downloads/\",\n  //   seeding_time_limit: -2,\n  //   seen_complete: 1596849724,\n  //   seq_dl: false,\n  //   size: 2044843193,\n  //   state: \"pausedDL\",\n  //   super_seeding: false,\n  //   tags: \"\",\n  //   time_active: 11,\n  //   total_size: 2044843193,\n  //   tracker: \"\",\n  //   up_limit: -1,\n  //   uploaded: 0,\n  //   uploaded_session: 0,\n  //   upspeed: 0}\n\n  const item = props.item;\n  const  hash  = props.hash;\n  const { name } = item;\n\n  const { filter } = props;\n\n  // const {syncData} = useContext(Context)\n\n  const torrentData = item ;\n\n  const { progress } = torrentData || 0\n  const { eta } = torrentData || 0\n  const { state } = torrentData || \"\"\n  const { num_leechs } = torrentData || 0\n  const { num_seeds } = torrentData || 0\n  const { upspeed } = torrentData || 0\n  const { dlspeed } = torrentData || 0\n\n  const [actionLoading,setActionLoading] = useState(false)\n\n  const date = new Date(0);\n  date.setSeconds(eta); // specify value for SECONDS here\n  const timeString = eta?date.toISOString().substr(11, 8):0;\n\n  const isDone = () => {\n    return !!state.includes(\"UP\");\n  }\n\n  const isPaused = () => {\n    switch (state) {\n      case \"pausedDL\" : return true;\n      case \"pausedUP\" : return true;\n      default: return false;\n    }\n  }\n\n  const isDL = () => {\n    switch (state) {\n      case \"downloading\" : return true;\n      case \"metaDL\" : return true;\n      case \"queuedDL\" : return true;\n      case \"stalledDL\" : return true;\n      case \"checkingDL\" : return true;\n      case \"forceDL\" : return true;\n      case \"checkingResumeData\" : return true;\n      case \"allocating\" : return true;\n      default: return false;\n    }\n  }\n\n  const statsIconStyle = {\n      color:isDL()?\"#0076ff\":\"#b2b2b2\",\n      marginRight:5,\n  }\n\n  useEffect(()=>{\n    if(actionLoading){\n      setTimeout(()=>{\n          setActionLoading(false)\n      },1000)\n    }\n  },[actionLoading])\n\n  const {installed,updateModal} = useContext(Context)\n\n  const [torrentAction, setTorrentAction] = useState({\n    open: false,\n    options: [{\n      label: \"More Info\",\n      modifier: null,\n      onclick: () => false,\n    },\n      {\n        label: \"Remove Torrent\",\n        modifier: \"destructive\",\n        onclick: () => false,\n      },\n    ]\n  })\n\n  const [deleteAlert, setDeleteAlert] = useState({\n    open:false,\n    hash:undefined,\n  })\n\n  const handleMoreButton = (hash,item) =>{\n    setTorrentAction({\n      open: true,\n      options: [\n        {\n          label: \"Remove Torrent\",\n          modifier: \"destructive\",\n          onclick: () => setDeleteAlert({open:true,hash}),\n        },\n        {\n          label: \"More Info\",\n          modifier: null,\n          onclick: () => updateModal({open: true,content:<TorrentInfo item={item} hash={hash} /> }),\n        },\n      ]\n    })\n  }\n\n  if(\n      (filter=== \"downloading\" && progress < 1)\n      || (filter === \"complete\" && progress === 1)\n      || (filter === \"all\")\n  ) {\n    return (\n        <>\n          <div className=\"torrentBox\">\n            <h3>{name}</h3>\n            <div className=\"stats\">\n              <span>{(progress * 100).toFixed(0)}%</span>\n              {eta !== 8640000 ? <span>{timeString}</span> : <span>{stateDictionary[state].short}</span>}\n            </div>\n            <ProgressBar\n                style={{paddingBottom: 10}}\n                value={progress * 100}\n                secondaryValue={100}\n            />\n            <div className=\"details\">\n              <div className=\"statsRow\">\n              <span>\n                <FontAwesomeIcon style={statsIconStyle}\n                                 icon={isDone() ? faCloudUpload : faCloudDownload}\n                />\n                <span className={\"data\"}>\n                  {isDone() ? num_leechs : num_seeds}\n                </span>\n              </span>\n                <span>\n                <FontAwesomeIcon style={statsIconStyle} icon={faTachometerAltFast}/>\n                <span className={\"data\"}>\n                  {isPaused() || isDone() ? \"0\" : filesize(isDone() ? upspeed : dlspeed, {round: 1}) + \"/s\"}\n                </span>\n              </span>\n              </div>\n              {\n                actionLoading ?\n                    <IonSpinner name={\"lines\"}/>\n                    : <div className=\"buttonsRow\">\n                      <button\n                          type=\"button\"\n                          onClick={() => handleMoreButton(hash,item)}\n                      >\n                        <Icon size={30} icon=\"ion-ios-more\"/>\n                      </button>\n                      <button\n                          className={isPaused() ? \"active\" : null}\n                          type=\"button\"\n                          disabled={isDone()}\n                          onClick={() => {\n                            setActionLoading(true)\n                            pause(hash)\n                          }}\n                      >\n                        <Icon size={30} icon=\"ion-ios-pause\"/>\n                      </button>\n                      <button\n                          className={isDL() ? \"active\" : null}\n                          type=\"button\"\n                          disabled={isDone()}\n                          onClick={() => {\n                            setActionLoading(true)\n                            resume(hash)\n                          }}\n                      >\n                        <Icon size={30} icon=\"ion-ios-play\"/>\n                      </button>\n                    </div>\n              }\n            </div>\n          </div>\n\n          {\n            torrentAction.open?\n            <ActionSheet\n              className={installed ? \"installed\" : null}\n              isOpen={torrentAction.open}\n              isCancelable={true}\n              onCancel={() => setTorrentAction({open: false, options: torrentAction.options})}\n          >\n            {\n              torrentAction.options.map((option, key) =>\n                  <ActionSheetButton\n                      key={key}\n                      modifier={option.modifier}\n                      onClick={() => {\n                        setTorrentAction({open: false, options: torrentAction.options})\n                        option.onclick()\n                      }}\n                  >{option.label}</ActionSheetButton>)\n            }\n\n            <ActionSheetButton\n                onClick={() =>\n                    setTorrentAction({\n                      open: false,\n                      options: torrentAction.options\n                    })\n                }>Cancel\n            </ActionSheetButton>\n          </ActionSheet>:null\n\n          }\n\n          { deleteAlert.open?\n            <AlertDialog\n                isOpen={deleteAlert.open}\n                onCancel={()=>setDeleteAlert({open: false})}\n                cancelable\n            >\n              <div className=\"alert-dialog-title\">Delete Files</div>\n              <div className=\"alert-dialog-content\">\n                Would you also like to delete the files downloaded?\n              </div>\n              <div className=\"alert-dialog-footer\">\n\n                <AlertDialogButton\n                    onClick={()=> {\n                      setDeleteAlert({open: false});\n                      remove(deleteAlert.hash, true);\n                    }}\n                    className={\"danger\"}\n                >\n                  Yes, Delete Files\n                </AlertDialogButton>\n\n                <AlertDialogButton\n                    onClick={()=> {\n                      setDeleteAlert({open: false});\n                      remove(deleteAlert.hash, false);\n                    }}\n                >\n                  No, Keep Files\n                </AlertDialogButton>\n\n                <AlertDialogButton onClick={()=>setDeleteAlert({open: false})}>Cancel</AlertDialogButton>\n              </div>\n            </AlertDialog>:null\n          }\n        </>\n    )\n  }else{\n    return null\n  }\n}\n\nexport default TorrentBox;\n","export const getStorage = (key=\"\") => {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport const saveStorage = async (key=\"\",value={}) => {\n  new Promise ( (resolve) => {\n    localStorage.setItem(key,JSON.stringify(value));\n    setInterval(()=>{\n      if(localStorage.getItem(key) !== undefined){\n        resolve()\n      }\n    },100)\n  })\n}\n","import roundLogo from \"../images/logo_round.png\";\nimport React from \"react\";\n\nconst LogoHeader = () => {\n    return (\n        <div className=\"LogoHeader\">\n            <img className=\"loginImage\" alt=\"iQbit logo\" src={roundLogo}/>\n            <span className={\"iqbit\"}>iQbit</span>\n            <span className={\"poweredBy\"}>Powered by qBitTorrent</span>\n            <hr/>\n        </div>\n    )\n}\n\nexport default LogoHeader;\n","import React, {useState,useContext} from 'react';\nimport {Button, ActionSheet, ActionSheetButton, AlertDialog, AlertDialogButton} from 'react-onsenui'; // Only import the necessary components\nimport {sync, login, remove } from '../utils/TorrClient';\nimport TorrentBox from './TorrentBox';\nimport { Context } from \"../App\"\nimport { saveStorage } from '../utils/Storage';\nimport LogoHeader from \"./LogoHeader\";\nimport TorrentInfo from \"./TorrentInfo\"\nimport useInterval from \"../utils/useInterval\";\n\nconst Torrents = (props) =>{\n  const {settings,updateSettings,installed, updateModal} = useContext(Context);\n\n  const [feedback, setFeedback] = useState(null)\n  const [username,setUsername] = useState(undefined)\n  const [password,setPassword] = useState(undefined)\n\n  const [torrentList,setTorrentList] = useState([])\n  const [torrentData,setTorrentData] = useState({})\n\n\n  const [RID,setRID] = useState(0)\n\n  useInterval(()=>{\n      if(settings.loggedin){\n          sync(RID).then(resp => {\n              const {data} = resp\n\n              if(data.full_update){\n                setTorrentData(data.torrents);\n                setTorrentList(Object.keys(data.torrents));\n              }\n              else{\n\n                if(data.torrents){\n                  let updatedObj = torrentData;\n\n                  const keysArray = Object.keys(data.torrents);\n\n                  keysArray.forEach((hash) => {\n\n                      if(updatedObj[hash]===undefined){\n                          updatedObj[hash]={};\n                      }\n\n                      const properties = Object.keys(data.torrents[hash]);\n\n                      properties.forEach((property)=>{\n                        updatedObj[hash][property] = data.torrents[hash][property]\n                      })\n                   })\n\n                  setTorrentData(updatedObj);\n                }\n\n              }\n\n              setRID(RID+1)\n          });\n      }\n  },1000)\n\n  const handleSignin = () => {\n\n    login({username,password}).then(response => {\n\n      if(response.data===\"Ok.\"){\n\n        const userObject = {\n          username,\n          password,\n          loggedin:true,\n        };\n\n        saveStorage(\"user\", userObject).then(() => {\n          updateSettings(userObject)\n        })\n\n      }else{\n        setFeedback(\"Login Unauthorized.\")\n      }\n\n    }).catch(() => {\n      setFeedback(\"Too many login attempts. This IP is temporarily blocked. You can restart qBitTorrent to reset this.\")\n    })\n  }\n\n  const LoginForm = () => {\n    return (\n      <div className={\"torrentBox login\"}>\n        <LogoHeader/>\n        <h2 className=\"centered\">Welcome To Your WebUI</h2>\n        <div className=\"inputGroup\">\n          <label htmlFor=\"username-input\">\n            <span>Username</span>\n            <input\n                id=\"username-input\"\n                type=\"text\"\n                onChange={(event) => setUsername(event.target.value)}\n                placeholder=\"Username\"\n                autoCapitalize={\"none\"}\n                autoCorrect={\"none\"}\n                autoComplete={\"none\"}\n            />\n          </label>\n          <label htmlFor=\"password-input\">\n            <span>Password</span>\n            <input\n                id=\"password-input\"\n                type=\"password\"\n                onChange={(event) => setPassword(event.target.value)}\n                placeholder=\"Password\"/>\n          </label>\n        </div>\n        {feedback?<p className=\"feedback\">{feedback}</p>:null}\n        <Button modifier=\"large--quiet\" onClick={()=>handleSignin()}>\n          Sign In\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n      <>\n\n        {\n          settings.loggedin?\n              torrentList.map((hash) =>\n            <TorrentBox\n                item={torrentData[hash]}\n                fullData={torrentData}\n                key={hash}\n                hash = {hash}\n                filter={props.segment}\n            />)\n            :null\n        }\n\n        {settings.loggedin? null : LoginForm()}\n\n        </>\n\n  )\n}\n\nexport default Torrents\n","import React, {useContext, useState} from \"react\";\nimport {IonLabel, IonSegment, IonSegmentButton} from \"@ionic/react\";\nimport Torrents from \"./Torrents\";\nimport {Context} from \"../App\";\n\nconst TorrentsCol = () => {\n    const {settings} = useContext(Context)\n\n    const [segment,setSegment] = useState(\"all\");\n\n    const SegmentPicker = () => {\n\n        if(settings.loggedin){\n            return(\n                <div className={\"segmentPicker\"}>\n                    <IonSegment mode={\"ios\"} value={segment} onIonChange={e => {\n                        setTimeout(()=>{\n                            setSegment(e.detail.value)\n                        },200)\n                    }}>\n                        <IonSegmentButton mode={\"ios\"} value=\"all\">\n                            <IonLabel>All Torrents</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"complete\">\n                            <IonLabel>Complete</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"downloading\">\n                            <IonLabel>Downloading</IonLabel>\n                        </IonSegmentButton>\n                    </IonSegment>\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    return(\n        <div  className={\"torrentsCol\"}>\n            <SegmentPicker/>\n            <Torrents segment={segment}/>\n        </div>\n    )\n}\n\nexport default TorrentsCol\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n    faBox,\n    faFilmCanister,\n    faMedal,\n    faTv,\n    faUserAstronaut,\n    faUsersClass,\n    faComments, faStopwatch, faFilm\n    ,faFolderDownload\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst YTSSearch = (props) => {\n    const {updateModal} = useContext(Context)\n    const [searchTerm,setSearchTerm] = useState(undefined)\n    const [searchLoading,setSearchLoading] = useState(false)\n    const [searchResults,setSearchResults] = useState([])\n    const [searchReady,setSearchReady] = useState(false);\n\n    const submitQuery = () => {\n        setSearchLoading(true);\n        axios.get(\"https://yts.mx/api/v2/list_movies.json\",{\n            params:{\n                limit:null,                     //Integer between 1 - 50 (inclusive)\n                page:null,                      //Integer (Unsigned)\n                quality:null,                   //String (720p, 1080p, 2160p, 3D)\n                minimum_rating:null,            //Integer between 0 - 9 (inclusive)\n                query_term:searchTerm,          //String\n                genre:null,                     //String from http://www.imdb.com/genre/\n                sorty_by:null,                  //String (title, year, rating, peers, seeds, download_count, like_count, date_added)\n                with_rt_ratings:true,           //Bool\n            }\n        }).then(response => {\n            const moviesArray = response.data.data.movies\n            setSearchResults(moviesArray);\n            setSearchLoading(false);\n            setSearchReady(true);\n        })\n    }\n\n    return (\n        <div>\n            <div className={\"searchInputRow\"}>\n                <SearchInput\n                    className={\"searchInput\"}\n                    style={{height:\"100%\"}}\n                    placeholder={`Search ${props.category}`}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n                />\n                {\n                    searchLoading ? <IonSpinner name={\"lines\"}/> :\n                        <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n                            <Icon icon={\"ion-ios-search\"} size={25} />\n                        </Fab>\n                }\n            </div>\n            <div className={\"searchResults\"}>\n                {\n                    searchReady?\n                        searchResults ?\n                        searchResults.map((item,key) =>\n                            <div\n                                role={\"button\"}\n                                className={\"MoviePoster\"}\n                                key={key}\n                                style={{\n                                    backgroundImage: `url(${item.medium_cover_image}), url(${imageMissing})`,\n                                }}\n                                onClick={()=>{\n                                    updateModal({open: true,content:<YTSModalInfo item={item}/>})\n                                }}\n                            >\n                                <span>{item.title}</span>\n                            </div>\n\n                        )\n                            :<div>No results were found for that search</div>\n                        :null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const YTSModalInfo = (props) => {\n    const { item } = props\n    const {updateAlert} = useContext(Context)\n\n    const TorrentAttr = (props) => {\n        return (\n            <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n                {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n                <span>{props.value}</span>\n            </span>\n        )\n    }\n\n    const otherInfo = [\n        {\n            value: item.language,\n            icon: faComments,\n            label: \"Language\"\n        },\n        {\n            value: item.rating,\n            icon: faMedal,\n            label: \"Ratings\"\n        },\n        {\n            value: item.runtime+\" Minutes\",\n            icon: faStopwatch,\n            label: \"Runtime\"\n        },\n        {\n            value: item.genres.join(\", \"),\n            icon: faFilm,\n            label: \"Genres\"\n        },\n    ]\n\n    const [downloadsStarted,setDownloadsStarted] = useState([])\n\n    const handleDownload = (torrent,title,key) =>{\n\n        addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n        .then(response=>{\n            if(response.data === \"Ok.\"){\n                setDownloadsStarted([...downloadsStarted, key])\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        })\n    };\n\n    return (\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{item.title_long}</h2>\n                <hr/>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Torrents</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {item.torrents.map((thisTorrent,key) =>\n                        <div className={\"infoStatBox flex-row w100\"} key={key}>\n                            <div className={\"attrBox\"}>\n                                <TorrentAttr icon={faTv} value={thisTorrent.quality}/>\n                                <TorrentAttr icon={faFilmCanister} value={thisTorrent.type}/>\n                                <TorrentAttr icon={faUserAstronaut} value={thisTorrent.seeds} letter={\"S\"}/>\n                                <TorrentAttr icon={faUsersClass} value={thisTorrent.peers} letter={\"P\"}/>\n                                <TorrentAttr icon={faBox} value={thisTorrent.size}/>\n                            </div>\n                            {\n                                downloadsStarted.includes(key) ?\n                                    <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                                    :\n                                    <Button class={\"downloadBtn\"}\n                                            onClick={() => handleDownload(thisTorrent, item.title_long, key)}\n                                    >\n                                        Download\n                                    </Button>\n\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Description</h3>\n                </div>\n                <p>{item.description_full}</p>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Other Info</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {otherInfo.map((item,key) =>\n                        <div className={\"infoStatBox\"} key={key}>\n                            <h4 className={\"infoStat\"}>{item.value}</h4>\n                            <div>\n                                <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                                <span className={\"infoStatLabel\"}>{item.label}</span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            {\n                item.yt_trailer_code===\"\"?null:\n                    <div className={\"infoStatsRowWrapper\"}>\n                        <div className={\"infoTitleBox\"}>\n                            <h3>Movie Trailer</h3>\n                        </div>\n                        <iframe\n                            className={\"movieTrailer\"}\n                            title={\"Movie Trailer\"}\n                            width=\"100%\" height=\"450\"\n                            src={\"https://www.youtube.com/embed/\"+item.yt_trailer_code}\n                        />\n                    </div>\n\n            }\n        </div>\n    )\n}\n\nexport default YTSSearch;\n","import React,{useState} from 'react';\nimport YTSLogo from \"../images/logo-YTS.svg\"\nimport YTSSearch from \"../searchAPIs/yts\";\n\nconst Search = (props) =>{\n\n    const [providers] = useState([\n      {\n          logo:YTSLogo,\n          name:\"YTS\",\n          categories:[\"Movies\"],\n          component:(props)=>YTSSearch(props)\n      },\n    ])\n\n    const [selectedProvider,setSelectedProvider] = useState(0)\n    const [selectedCategory,setSelectedCategory] = useState(0)\n\n    return (\n    <div className=\"searchCol\" {...props}>\n        <h3>Select Search Provider</h3>\n        <p>Warning: Be sure to comply with your country's copyright laws when downloading torrents from any of these search engines.</p>\n        <div className={\"providerRow\"}>\n            {providers.map((item,key) =>\n                <button className={key===selectedProvider?\"providerBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedProvider(key)}>\n                    <img alt={\"YTS Logo\"} src={item.logo}/>\n                </button>\n            )}\n        </div>\n        {\n            providers[selectedProvider].categories.length > 1?\n                <div className={\"categoriesRow\"}>\n                    {providers[selectedProvider].categories.map((item,key) =>\n                        <button className={key===selectedCategory?\"categoryBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedCategory(key)}>\n                            <p>{item}</p>\n                        </button>\n                    )}\n                </div>:null\n        }\n        {\n            providers[selectedProvider].component({\n                category:providers[selectedProvider].categories[selectedCategory]\n            })\n        }\n    </div>\n    )\n}\n\nexport default Search\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {List, ListItem, ListHeader, Switch, AlertDialog, Button} from \"react-onsenui\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {\n    faAngleRight,\n    faEdit, faEthernet,\n    faFolderDownload, faFolderMinus,\n    faFolders, faKey,\n    faMinusHexagon, faNetworkWired, faOutlet, faPaintBrushAlt,\n    faUser, faUserLock, faUserRobot, faUsersClass, faWifi\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport {getPrefs, updatePref} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\nimport {saveStorage} from \"../utils/Storage\";\n\nconst Settings = (props) =>{\n\n    const {settings,updateAlert,prefs} = useContext(Context)\n    const [preferences,setPreferences] = useState(prefs)\n    const [prefsRefresh,setPrefsRefresh] = useState(true)\n\n    useEffect(()=>{\n        if(prefsRefresh){\n            getPrefs().then(response=>{\n                setPreferences(response.data)\n                setPrefsRefresh(false);\n            })\n        }\n    },[prefsRefresh,settings.loggedin,prefs])\n\n    const SwitchRow = (props) =>{\n        return(\n            <ListItem>\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <Switch checked={preferences[props.objKey]} onChange={()=>{\n                        updatePref(`{\"${props.objKey}\":${!preferences[props.objKey]}}`).then(()=>{\n                            setTimeout(()=>{\n                                let updatedObj = {...preferences}\n                                updatedObj[props.objKey] = !preferences[props.objKey];\n                                setPreferences(updatedObj)\n                            },350)\n                        }).catch(()=>{\n                            setPrefsRefresh(true);\n                            updateAlert(\"Settings Update Failed\",\"Settings could not be updated\")\n                        })\n                    }}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const InputRow = (props) =>{\n        return(\n            <ListItem tappable\n                onClick={()=>setAlert({open: true,label: props.title, objKey:props.objKey})}\n            >\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <FontAwesomeIcon icon={faEdit}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const [alert,setAlert] = useState({\n        open:false,\n        label:\"\",\n        objKey:\"\"\n    })\n\n    let alertInput = useRef()\n\n    if(settings.loggedin){\n        return (\n        <div className={\"settingsCol\"}>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Downloads\n                </ListHeader>\n                <SwitchRow\n                    title={\"Create SubFolders\"}\n                    icon={faFolders}\n                    objKey={\"create_subfolder_enabled\"}\n                    color={\"#006ce2\"}\n                />\n                <SwitchRow\n                    title={\"Start Torrent Paused\"}\n                    icon={faMinusHexagon}\n                    objKey={\"start_paused_enabled\"}\n                    color={\"#bf0000\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Paths\n                </ListHeader>\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#2ca700\"}\n                />\n                <SwitchRow\n                    title={\"Temp Folder\"}\n                    icon={faFolderMinus}\n                    objKey={\"temp_path_enabled\"}\n                    color={\"#5b00b6\"}\n                />\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#ea9d00\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Proxy\n                </ListHeader>\n                <InputRow\n                    title={\"Host\"}\n                    icon={faNetworkWired}\n                    objKey={\"proxy_ip\"}\n                    color={\"#00a799\"}\n                />\n                <InputRow\n                    title={\"Port\"}\n                    icon={faEthernet}\n                    objKey={\"proxy_port\"}\n                    color={\"#b600a4\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Peer Connections\"}\n                    icon={faUsersClass}\n                    objKey={\"proxy_peer_connections\"}\n                    color={\"#ea9d00\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Auth Enabled\"}\n                    icon={faUserLock}\n                    objKey={\"proxy_auth_enabled\"}\n                    color={\"#b7ea00\"}\n                />\n                <InputRow\n                    title={\"Proxy Username\"}\n                    icon={faUserRobot}\n                    objKey={\"proxy_username\"}\n                    color={\"#ea5200\"}\n                />\n                <InputRow\n                    title={\"Proxy Password\"}\n                    icon={faKey}\n                    objKey={\"proxy_password\"}\n                    color={\"#ea5200\"}\n                />\n            </List>\n\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    WebUI\n                </ListHeader>\n                <SwitchRow\n                    title={\"Custom WebUI Enabled\"}\n                    icon={faPaintBrushAlt}\n                    objKey={\"alternative_webui_enabled\"}\n                    color={\"#19a700\"}\n                />\n                <InputRow\n                    title={\"WebUI Path\"}\n                    icon={faAngleRight}\n                    objKey={\"alternative_webui_path\"}\n                    color={\"#0086a7\"}\n                />\n                <InputRow\n                    title={\"WebUI IP Address\"}\n                    icon={faWifi}\n                    objKey={\"web_ui_address\"}\n                    color={\"#7a00a7\"}\n                />\n                <InputRow\n                    title={\"WebUI Port\"}\n                    icon={faEthernet}\n                    objKey={\"web_ui_port\"}\n                    color={\"#b60049\"}\n                />\n                <SwitchRow\n                    title={\"WebUI UPnP Enabled\"}\n                    icon={faOutlet}\n                    objKey={\"web_ui_upnp\"}\n                    color={\"#ea9d00\"}\n                />\n                <InputRow\n                    title={\"WebUI Username\"}\n                    icon={faUser}\n                    objKey={\"web_ui_username\"}\n                    color={\"#0069ea\"}\n                />\n                <InputRow\n                    title={\"WebUI Password\"}\n                    icon={faKey}\n                    objKey={\"web_ui_password\"}\n                    color={\"#0069ea\"}\n                />\n            </List>\n            <Button className={\"danger\"} modifier={\"large--quiet\"}\n                onClick={()=> {\n                    window.location.reload();\n                    saveStorage(\"user\", {})\n                }}\n            >\n                Log Out\n            </Button>\n\n\n            <AlertDialog className={\"settingsAlert\"} isOpen={alert.open} onCancel={()=>setAlert({open: false})} modifier={\"rowfooter\"} cancelable>\n                <div className=\"alert-dialog-title\">{alert.label}</div>\n                <div className=\"alert-dialog-content\">\n                    <input ref={alertInput} type={\"text\"} defaultValue={preferences[alert.objKey]} placeholder={\"Enter \"+alert.label}/>\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({open: false})} className=\"alert-dialog-button\">\n                        Cancel\n                    </Button>\n                    <Button onClick={()=>{\n                        updatePref(`{\"${props.objKey}\":\"${alertInput.current.value}\"}`).then(()=>{\n                            setTimeout(()=>{\n                                setPrefsRefresh(true)\n                            },300)\n                        })\n                    }} className=\"alert-dialog-button\">\n                        Save\n                    </Button>\n                </div>\n            </AlertDialog>\n        </div>\n        )\n    }else{\n        return (\n            <div className={\"settingsCol\"}>\n                <h2 style={{textAlign:\"center\"}}>\n                    Settings require login.\n                </h2>\n            </div>\n        )\n    }\n}\n\nexport default Settings\n","import {Icon, ToolbarButton, Popover,Button} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\n\n\nconst TorrentTopControls = () =>{\n    const [addTorrentPopover,setAddTorrentPopover] = useState({\n        open:false,\n        target:null\n    })\n\n    const {bigScreen,updateTorrentList,updateModal,updateAlert} = useContext(Context)\n\n    let AddButton = React.createRef()\n\n    const [torrentURL,setTorrentURL] = useState(null)\n\n    const handleAddTorrent = () =>{\n        addTorrent(torrentURL)\n        .then(response=>{\n            if(response.data===\"Ok.\"){\n                updateTorrentList()\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        }).catch(()=>{\n            updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n        }).finally(()=>{\n            setAddTorrentPopover({open: false,target: addTorrentPopover.target})\n        })\n    }\n\n\n    const AddTorrentModal = () =>{\n        return (\n            <div className={\"modalAddTorrent\"}>\n                <h2>Enter Torrent URL</h2>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"} rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={()=>handleAddTorrent()}\n                >Add Torrent</Button>\n            </div>\n        )\n    }\n\n\n    const handleButtonClick= () =>{\n        if(bigScreen){\n            setAddTorrentPopover({open: true,target:AddButton.current})\n        }else{\n            updateModal({\n                open:true,\n                content:<AddTorrentModal/>,\n                top:window.innerHeight/2,\n            })\n        }\n    }\n\n    return(\n        <div>\n            {/*<ToolbarButton>*/}\n            {/*    <Icon size={30} icon=\"ion-ios-search\" />*/}\n            {/*</ToolbarButton>*/}\n            <ToolbarButton\n                ref={AddButton}\n                onClick={()=>handleButtonClick()}\n            >\n                <Icon size={35} icon=\"ion-ios-add\" />\n            </ToolbarButton>\n            <Popover\n                isOpen={addTorrentPopover.open}\n                onCancel={() => setAddTorrentPopover({open:false,target:addTorrentPopover.target})}\n                getTarget={() => addTorrentPopover.target}\n\n            >\n                <p>Enter Torrent URL</p>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"} rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={()=>handleAddTorrent()}\n                >Add Torrent</Button>\n            </Popover>\n        </div>\n    )\n}\n\nexport default TorrentTopControls;\n","import TorrentsCol from \"./TorrentsCol\";\nimport {Page, Tab, Tabbar, Toolbar} from \"react-onsenui\";\nimport Search from \"./Search\";\nimport Settings from \"./Settings\";\nimport React, {useContext, useState} from \"react\";\nimport {Context} from \"../App\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\n\nconst Tabs = () => {\n    const [activeTab,setActiveTab] = useState(0)\n\n    const pageTitles = [\n        \"Your Torrents\",\n        \"Search\",\n        \"Settings\"\n    ]\n\n    const {settings,bigScreen} = useContext(Context);\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left\">\n                    <h1>\n                        {pageTitles[activeTab]}\n                    </h1>\n                </div>\n                <div className=\"right\">\n                    {settings.loggedin && !bigScreen && activeTab===0?\n                        <TorrentTopControls/>\n                        :null\n                    }\n                </div>\n            </Toolbar>\n            <Tabbar\n                className={\"tabWrapper\"}\n                animation={\"none\"}\n                position='bottom'\n                onPreChange={({index}) => setActiveTab(index)}\n                index={activeTab}\n                renderTabs={(activeIndex) => [\n                    {\n                        content: <Page><TorrentsCol title={pageTitles[0]} active={activeIndex === 0}/></Page>,\n                        tab: <Tab label=\"Torrents\" icon=\"ion-ios-download\"/>\n                    },\n                    {\n                        content: <Page><Search title={pageTitles[1]} active={activeIndex === 1}/></Page>,\n                        tab: <Tab label=\"Search\" icon=\"ion-ios-search\"/>\n                    },\n                    {\n                        content: <Page><Settings title={pageTitles[2]} active={activeIndex === 1}/></Page>,\n                        tab: <Tab label=\"Settings\" icon=\"ion-ios-cog\"/>\n                    },\n                ]\n                }\n            />\n        </>\n    )\n}\n\nexport default Tabs;\n","import TorrentsCol from \"./TorrentsCol\";\nimport {Icon, Page, Toolbar, ToolbarButton} from \"react-onsenui\";\nimport Search from \"./Search\";\nimport React, {useContext} from \"react\";\nimport { Context } from \"../App\"\nimport RoundLogo from \"../images/logo_round.png\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport Settings from \"./Settings\";\n\nconst TabletView = () => {\n\n    const {settings,updateModal} = useContext(Context)\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left tabletHeader\">\n                    <div>\n                        {settings.loggedin?<img className={\"loginImage-small\"} alt={\"iQbit Logo\"} src={RoundLogo}/>:null}\n                        <h1>iQbit</h1>\n                    </div>\n                    {settings.loggedin?\n                        <TorrentTopControls/>\n                        :null\n                    }\n                </div>\n                <div className=\"right\">\n                    <ToolbarButton\n                        onClick={()=>updateModal({\n                            open:true,\n                            content:<Settings/>,\n                        })}\n                    >\n                        <Icon size={35} icon=\"ion-ios-cog\" />\n                    </ToolbarButton>\n                </div>\n            </Toolbar>\n            <Page>\n                <div className=\"tabletView\">\n                    <TorrentsCol/>\n                    <Search/>\n                </div>\n            </Page>\n        </>\n    )\n}\n\nexport default TabletView;\n","import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize;\n","import React, {useEffect, useState} from \"react\";\nimport Draggable from 'react-draggable';\nimport useWindowSize from \"../utils/useWindowSize\";\n\nconst BottomSheet = (props) => {\n\n    const WindowSize = useWindowSize();\n\n    const topDiff = props.top || 100;\n    const leftDiff = props.left || 0;\n    // const open = props.open;\n\n    const [open,setOpen] = useState(false)\n\n    useEffect(()=>{\n        if(props.open){\n            setOpen(true)\n        }else{\n            setOpen(false)\n        }\n    },[props])\n\n    const initialPosition = {x: 0, y: WindowSize.height}\n\n    const finalPosition = {\n        y: topDiff,\n        x: leftDiff,\n    }\n\n    const threshold = .25;\n\n    return (\n        <div className={open?\"BottomSheet open\":\"BottomSheet\"}>\n            <Draggable\n                axis={\"y\"}\n                handle={\".handleArea\"}\n                defaultPosition={initialPosition}\n                position={open?finalPosition:initialPosition}\n                children={\n                    <div className={\"modal\"}>\n                        <span className={\"handleArea\"}><span className={\"handle\"}/></span>\n                        {props.children}\n                    </div>\n                }\n                bounds={{top:topDiff}}\n                onStop={(event)=>{\n                    if(event.pageY > ( WindowSize.height - (WindowSize.height * threshold))){\n                        setOpen(false)\n                        setTimeout(()=>{\n                            props.onDismiss()\n                        },400)\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nexport default BottomSheet\n","import React, {useState, createContext, useEffect} from 'react';\nimport Tabs from './components/Tabs';\nimport TabletView from './components/TabletView';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './App.scss';\nimport { getStorage, saveStorage } from './utils/Storage';\nimport BottomSheet from \"./components/BottomSheet\";\nimport {getPrefs, login} from \"./utils/TorrClient\";\nimport {AlertDialog,Button} from \"react-onsenui\"\n\n\nexport const Context = createContext(null);\n\nconst App = () => {\n\n    const [settings,setSettings] = useState({\n        loggedin:null,\n        username:null,\n        password:null\n    });\n\n    useEffect(()=>{\n        const settings = getStorage(\"user\")\n        let templateObject = settings;\n\n        if(settings === null){\n            templateObject = {\n                loggedin:false,\n                username:null,\n                password:null\n            }\n            saveStorage(\"user\",templateObject)\n        }else{\n            setSettings(settings)\n        }\n    },[])\n\n    const screenWidth = window.innerWidth;\n    const breakpoint = 768;\n\n    const [bigScreen] = useState(screenWidth > breakpoint)\n    const installed =  window.matchMedia('(display-mode: standalone)').matches\n    const [prefs,setPrefs] = useState({\n        add_trackers: \"\",\n        add_trackers_enabled: null,\n        alt_dl_limit: null,\n        alt_up_limit: null,\n        alternative_webui_enabled: null,\n        alternative_webui_path: \"\",\n        announce_ip: \"\",\n        announce_to_all_tiers: null,\n        announce_to_all_trackers: null,\n        anonymous_mode: null,\n        async_io_threads: null,\n        auto_delete_mode: null,\n        auto_tmm_enabled: null,\n        autorun_enabled: null,\n        autorun_program: \"\",\n        banned_IPs: \"\",\n        bittorrent_protocol: null,\n        bypass_auth_subnet_whitelist: \"\",\n        bypass_auth_subnet_whitelist_enabled: null,\n        bypass_local_auth: null,\n        category_changed_tmm_enabled: null,\n        checking_memory_use: null,\n        create_subfolder_enabled: null,\n        current_interface_address: \"\",\n        current_network_interface: \"\",\n        dht: null,\n        disk_cache: null,\n        disk_cache_ttl: null,\n        dl_limit: null,\n        dont_count_slow_torrents: null,\n        dyndns_domain: \"\",\n        dyndns_enabled: false,\n        dyndns_password: \"\",\n        dyndns_service: null,\n        dyndns_username: \"\",\n        embedded_tracker_port: null,\n        enable_coalesce_read_write: null,\n        enable_embedded_tracker: null,\n        enable_multi_connections_from_same_ip: null,\n        enable_os_cache: null,\n        enable_piece_extent_affinity: null,\n        enable_upload_suggestions: null,\n        encryption: null,\n        export_dir: \"\",\n        export_dir_fin: \"\",\n        file_pool_size: null,\n        incomplete_files_ext: null,\n        ip_filter_enabled: null,\n        ip_filter_path: \"\",\n        ip_filter_trackers: null,\n        limit_lan_peers: null,\n        limit_tcp_overhead: null,\n        limit_utp_rate: null,\n        listen_port: null,\n        locale: \"\",\n        lsd: null,\n        mail_notification_auth_enabled: null,\n        mail_notification_email: \"\",\n        mail_notification_enabled: null,\n        mail_notification_password: \"\",\n        mail_notification_sender: \"\",\n        mail_notification_smtp: \"\",\n        mail_notification_ssl_enabled: false,\n        mail_notification_username: \"\",\n        max_active_downloads: null,\n        max_active_torrents: null,\n        max_active_uploads: null,\n        max_connec: null,\n        max_connec_per_torrent: null,\n        max_ratio: null,\n        max_ratio_act: null,\n        max_ratio_enabled: null,\n        max_seeding_time: null,\n        max_seeding_time_enabled: null,\n        max_uploads: null,\n        max_uploads_per_torrent: null,\n        outgoing_ports_max: null,\n        outgoing_ports_min: null,\n        pex: null,\n        preallocate_all: null,\n        proxy_auth_enabled: null,\n        proxy_ip: \"\",\n        proxy_password: \"\",\n        proxy_peer_connections: null,\n        proxy_port: null,\n        proxy_torrents_only: null,\n        proxy_type: null,\n        proxy_username: \"\",\n        queueing_enabled: null,\n        random_port: null,\n        recheck_completed_torrents: null,\n        resolve_peer_countries: null,\n        rss_auto_downloading_enabled:null,\n        rss_download_repack_proper_episodes:null,\n        rss_max_articles_per_feed:null,\n        rss_processing_enabled:null,\n        rss_refresh_interval:null,\n        rss_smart_episode_filters:\"\",\n        save_path: \"\",\n        save_path_changed_tmm_enabled: false,\n        save_resume_data_interval: null,\n        scan_dirs:{},\n        schedule_from_hour: null,\n        schedule_from_min: null,\n        schedule_to_hour: null,\n        schedule_to_min: null,\n        scheduler_days: null,\n        scheduler_enabled: false,\n        send_buffer_low_watermark: null,\n        send_buffer_watermark: null,\n        send_buffer_watermark_factor: null,\n        slow_torrent_dl_rate_threshold: null,\n        slow_torrent_inactive_timer: null,\n        slow_torrent_ul_rate_threshold: null,\n        socket_backlog_size: null,\n        start_paused_enabled: false,\n        stop_tracker_timeout: null,\n        temp_path: \"\",\n        temp_path_enabled: null,\n        torrent_changed_tmm_enabled: null,\n        up_limit: null,\n        upload_choking_algorithm: null,\n        upload_slots_behavior: null,\n        upnp: null,\n        use_https: null,\n        utp_tcp_mixed_mode: null,\n        web_ui_address: \"\",\n        web_ui_ban_duration: null,\n        web_ui_clickjacking_protection_enabled: null,\n        web_ui_csrf_protection_enabled: null,\n        web_ui_custom_http_headers: \"\",\n        web_ui_domain_list: \"\",\n        web_ui_host_header_validation_enabled: null,\n        web_ui_https_cert_path: \"\",\n        web_ui_https_key_path: \"\",\n        web_ui_max_auth_fail_count: null,\n        web_ui_port: null,\n        web_ui_secure_cookie_enabled: null,\n        web_ui_session_timeout: null,\n        web_ui_upnp: null,\n        web_ui_use_custom_http_headers_enabled: null,\n        web_ui_username: \"\"\n    });\n\n\n    const updateSettings = (settings) => {\n        setSettings(settings);\n    }\n\n    const [modal,setModal] = useState({\n        open:false,\n        content:null\n    })\n\n    const updateModal = (update = {open:true,content:<span/>}) => {\n        setModal(update)\n    }\n\n    useEffect(()=>{\n\n        if(settings.loggedin){\n            login({\n                username:settings.username,\n                password:settings.password\n            }).then(()=>{\n                getPrefs().then((response)=>{\n                    setPrefs(response)\n                })\n            })\n        }\n\n    },[settings,settings.loggedin, settings.password, settings.username])\n\n    const [alert,setAlert] = useState({\n        open:false,\n        title:null,\n        message:null\n    })\n\n    const updateAlert = (title,message) => {\n        setAlert({open:true,title,message})\n    }\n\n    const Alert = (props) =>{\n        return(\n            <AlertDialog isOpen={props.open} onCancel={()=>setAlert({open: false,title:alert.title,message:alert.message})} cancelable>\n                <div className=\"alert-dialog-title\">{props.title}</div>\n                <div className=\"alert-dialog-content\">\n                    {props.message}\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({open: false,title:alert.title,message:alert.message})} className=\"alert-dialog-button\">\n                        Ok\n                    </Button>\n                </div>\n            </AlertDialog>\n        )\n    }\n\n    return (\n        <Context.Provider value={{\n            settings,\n            updateSettings,\n            bigScreen,\n            modal,\n            updateModal,\n            installed,\n            updateAlert,\n            prefs\n        }}\n        >\n            <div className={(settings.loggedin ? \"loggedin \":\" login \") + (installed ? \" installed\" : \"\")}>\n                {bigScreen ? <TabletView/> : <Tabs/>}\n                <BottomSheet  open={modal.open} onDismiss={()=>setModal({open: false})} top={modal.top?modal.top:bigScreen?25:85} children={modal.content}/>\n                <Alert open={alert.open} title={alert.title} message={alert.message} />\n            </div>\n        </Context.Provider>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_round.651d9c54.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-YTS.fdd85bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagemissing.960d2bd1.png\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t135,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t136,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t137,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t138,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t139,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t140,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t141,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t142,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t143,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t144,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t145,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t146,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t147,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t148,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t149,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t150,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t151,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t152,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t153,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t154,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t155,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t156,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t157,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t158,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t159,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t160,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t161,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t162,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t163,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t164,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t165,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t166,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t167,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t168,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t169,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t170,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t171,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t172,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t173,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t174,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t175,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t176,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t177,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 83;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}