{"version":3,"sources":["utils/TorrClient.js","components/stateDictionary.js","utils/useInterval.js","components/TorrentInfo.js","components/TorrentBox.js","utils/Storage.js","components/LogoHeader.js","components/Torrents.js","Pages/TorrentsCol.js","searchAPIs/yts.js","searchAPIs/tpb.js","Pages/Search.js","Pages/Settings.js","Pages/Categories.js","components/TorrentsTopControls.js","components/CategoriesTopControls.js","components/Tabs.js","components/TabletView.js","utils/useWindowSize.js","components/BottomSheet.js","utils/useMedia.js","utils/useLocalStorage.js","utils/useDarkMode.js","App.js","serviceWorker.js","index.js","images/logo_round.png","images/imagemissing.png","images/logo-YTS.svg","images/logo-TPB.svg","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["serverAddress","window","location","origin","substring","length","console","log","baseURL","APICall","axios","create","withCredentials","login","a","username","password","get","params","getTorrents","sortKey","reverse","sort","sync","rid","resume","hash","hashes","resumeAll","pause","pauseAll","remove","deleteFiles","addTorrent","url","urls","getPrefs","updatePref","json","getCategories","addCategory","name","path","category","savePath","removeCategories","categories","editCategory","setTorrentCategory","stateDictionary","error","long","short","missingFiles","uploading","pausedUP","queuedUP","stalledUP","checkingUP","forcedUP","allocating","downloading","metaDL","pausedDL","queuedDL","stalledDL","checkingDL","forceDL","checkingResumeData","moving","unknown","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","StatsRow","props","className","title","data","map","item","key","value","icon","label","TorrentInfo","useState","torrent","setTorrent","then","resp","torrents","AmountRow","fileSize","downloaded","size","faDownload","downloaded_session","faPallet","uploaded","faUpload","uploaded_session","faPalletAlt","ratio","toFixed","faShareAlt","date","Date","setSeconds","eta","timeString","toISOString","substr","SpeedsRow","dlspeed","faTachometerAltFastest","faTachometerAltSlowest","upspeed","faStopwatch","DataRow","num_seeds","num_complete","faUserAstronaut","num_leechs","num_incomplete","faUserSecret","save_path","faFolderOpen","StateRow","state","faBolt","progress","secondaryValue","TorrentBox","contextCategories","useContext","Context","filter","torrentData","added_on","actionLoading","setActionLoading","isDone","isPaused","statsIconStyle","color","isDL","marginRight","setTimeout","installed","updateModal","open","options","modifier","onclick","torrentAction","setTorrentAction","undefined","deleteAlert","setDeleteAlert","moveAlert","setMoveAlert","style","paddingBottom","faCloudUpload","faCloudDownload","faTachometerAltFast","filesize","round","faCalendarDay","toLocaleDateString","type","onClick","content","handleMoreButton","isOpen","isCancelable","onCancel","option","cancelable","removeFromFeed","Object","keys","saveStorage","Promise","resolve","localStorage","setItem","JSON","stringify","getItem","LogoHeader","alt","src","roundLogo","Torrents","settings","updateSettings","feedback","setFeedback","setUsername","setPassword","torrentList","setTorrentList","setTorrentData","initialLoad","setInitialLoad","setSort","needsFullRefresh","setNeedsRefresh","sortingObj","TorrentArray","hashArray","forEach","push","RID","setRID","loggedin","full_update","updatedObj","property","includes","play","masterButtonsLoading","setMasterButtonsLoading","fullData","segment","hashIndex","indexOf","listToUpdate","splice","htmlFor","onChange","event","target","placeholder","autoCapitalize","autoCorrect","autoComplete","response","userObject","catch","TorrentsCol","setSegment","SegmentPicker","mode","onIonChange","e","detail","YTSModalInfo","updateAlert","TorrentAttr","letter","otherInfo","language","faComments","rating","faMedal","runtime","genres","join","faFilm","downloadsStarted","setDownloadsStarted","title_long","thisTorrent","faTv","quality","faFilmCanister","seeds","faUsersClass","peers","faBox","faFolderDownload","class","encodeURI","handleDownload","description_full","yt_trailer_code","width","height","YTSSearch","searchTerm","setSearchTerm","searchLoading","setSearchLoading","searchResults","setSearchResults","searchReady","setSearchReady","submitQuery","limit","page","minimum_rating","query_term","genre","sorty_by","with_rt_ratings","moviesArray","movies","onKeyPress","role","backgroundImage","medium_cover_image","imageMissing","TPBSearch","q","cat","results","seeders","faUserCowboy","leechers","info_hash","Search","logo","YTSLogo","component","PTB","providers","selectedProvider","setSelectedProvider","selectedCategory","setSelectedCategory","Settings","prefs","cookie","preferences","setPreferences","prefsRefresh","setPrefsRefresh","SwitchRow","backgroundColor","checked","objKey","InputRow","setAlert","faEdit","alert","alertInput","faFolders","faMinusHexagon","faFolderMinus","faNetworkWired","faEthernet","faUserLock","faUserRobot","faKey","faPaintBrushAlt","faAngleRight","faWifi","faOutlet","faUser","reload","ref","defaultValue","updateJSON","textAlign","Categories","refreshCategories","confirmAlert","setConfirmAlert","editAlert","setEditAlert","newPath","TorrentTopControls","addTorrentPopover","setAddTorrentPopover","bigScreen","AddButton","React","createRef","SortButton","torrentURL","setTorrentURL","handleAddTorrent","finally","AddTorrentModal","rows","selected","sortPopover","setSortPopover","top","innerHeight","getTarget","object","updateSorting","CategoriesTopControls","addAlertOpen","setAddAlertOpen","categoryName","newName","Tabs","activeTab","setActiveTab","pageTitles","obj","animation","position","onPreChange","index","renderTabs","activeIndex","active","toString","tab","TabletView","RoundLogo","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","addEventListener","removeEventListener","BottomSheet","WindowSize","topDiff","leftDiff","left","setOpen","initialPosition","x","y","finalPosition","onDismiss","axis","handle","defaultPosition","children","bounds","onStop","pageY","useMedia","queries","values","mediaQueryLists","matchMedia","getValue","findIndex","mql","matches","setValue","handler","addListener","removeListener","useLocalStorage","initialValue","parse","storedValue","setStoredValue","valueToStore","Function","useDarkMode","enabledState","setEnabledState","prefersDarkMode","enabled","element","document","body","classList","add","createContext","App","setSettings","getStorage","screenWidth","add_trackers","add_trackers_enabled","alt_dl_limit","alt_up_limit","alternative_webui_enabled","alternative_webui_path","announce_ip","announce_to_all_tiers","announce_to_all_trackers","anonymous_mode","async_io_threads","auto_delete_mode","auto_tmm_enabled","autorun_enabled","autorun_program","banned_IPs","bittorrent_protocol","bypass_auth_subnet_whitelist","bypass_auth_subnet_whitelist_enabled","bypass_local_auth","category_changed_tmm_enabled","checking_memory_use","create_subfolder_enabled","current_interface_address","current_network_interface","dht","disk_cache","disk_cache_ttl","dl_limit","dont_count_slow_torrents","dyndns_domain","dyndns_enabled","dyndns_password","dyndns_service","dyndns_username","embedded_tracker_port","enable_coalesce_read_write","enable_embedded_tracker","enable_multi_connections_from_same_ip","enable_os_cache","enable_piece_extent_affinity","enable_upload_suggestions","encryption","export_dir","export_dir_fin","file_pool_size","incomplete_files_ext","ip_filter_enabled","ip_filter_path","ip_filter_trackers","limit_lan_peers","limit_tcp_overhead","limit_utp_rate","listen_port","locale","lsd","mail_notification_auth_enabled","mail_notification_email","mail_notification_enabled","mail_notification_password","mail_notification_sender","mail_notification_smtp","mail_notification_ssl_enabled","mail_notification_username","max_active_downloads","max_active_torrents","max_active_uploads","max_connec","max_connec_per_torrent","max_ratio","max_ratio_act","max_ratio_enabled","max_seeding_time","max_seeding_time_enabled","max_uploads","max_uploads_per_torrent","outgoing_ports_max","outgoing_ports_min","pex","preallocate_all","proxy_auth_enabled","proxy_ip","proxy_password","proxy_peer_connections","proxy_port","proxy_torrents_only","proxy_type","proxy_username","queueing_enabled","random_port","recheck_completed_torrents","resolve_peer_countries","rss_auto_downloading_enabled","rss_download_repack_proper_episodes","rss_max_articles_per_feed","rss_processing_enabled","rss_refresh_interval","rss_smart_episode_filters","save_path_changed_tmm_enabled","save_resume_data_interval","scan_dirs","schedule_from_hour","schedule_from_min","schedule_to_hour","schedule_to_min","scheduler_days","scheduler_enabled","send_buffer_low_watermark","send_buffer_watermark","send_buffer_watermark_factor","slow_torrent_dl_rate_threshold","slow_torrent_inactive_timer","slow_torrent_ul_rate_threshold","socket_backlog_size","start_paused_enabled","stop_tracker_timeout","temp_path","temp_path_enabled","torrent_changed_tmm_enabled","up_limit","upload_choking_algorithm","upload_slots_behavior","upnp","use_https","utp_tcp_mixed_mode","web_ui_address","web_ui_ban_duration","web_ui_clickjacking_protection_enabled","web_ui_csrf_protection_enabled","web_ui_custom_http_headers","web_ui_domain_list","web_ui_host_header_validation_enabled","web_ui_https_cert_path","web_ui_https_key_path","web_ui_max_auth_fail_count","web_ui_port","web_ui_secure_cookie_enabled","web_ui_session_timeout","web_ui_upnp","web_ui_use_custom_http_headers_enabled","web_ui_username","setPrefs","modal","setModal","setContextCategories","setCookie","message","Alert","Provider","update","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","webpackAsyncContext","req","__webpack_require__","o","Error","code","ids"],"mappings":"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","file":"static/js/main.41964d48.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet serverAddress = window.location.origin;\n\nif (serverAddress.substring(serverAddress.length - 1) !== \"/\") {\n  serverAddress = `${serverAddress}/`;\n}\n\nconsole.log(serverAddress);\n\nconst baseURL = `${serverAddress}api/v2/`;\n\nconst APICall = axios.create({\n  baseURL: baseURL,\n  withCredentials: true,\n});\n\nexport const login = async ({ username, password }) => {\n  return await APICall.get(\"auth/login\", {\n    params: { username, password },\n  });\n};\n\nexport const logout = async () => {\n  return await axios.get(\"auth/logout\");\n};\n\nexport const getTorrents = async (sortKey = \"added_on\", reverse = true) => {\n  return await APICall.get(\"torrents/info\", {\n    params: {\n      sort: sortKey,\n      reverse,\n    },\n  });\n};\n\nexport const getProperties = async (hash) => {\n  return await APICall.get(\"torrents/properties\", {\n    params: {\n      hashes: hash,\n    },\n  });\n};\n\nexport const sync = async (rid) => {\n  return await APICall.get(\"sync/maindata\", {\n    params: {\n      rid,\n    },\n  });\n};\n\nexport const resume = async (hash = \"\") => {\n  return await APICall.get(\"torrents/resume\", {\n    params: {\n      hashes: hash,\n    },\n  });\n};\n\nexport const resumeAll = async () => {\n  return await APICall.get(\"torrents/resume\", {\n    params: {\n      hashes: \"all\",\n    },\n  });\n};\n\nexport const pause = async (hash = \"\") => {\n  return await APICall.get(\"torrents/pause\", {\n    params: {\n      hashes: hash,\n    },\n  });\n};\n\nexport const pauseAll = async () => {\n  return await APICall.get(\"torrents/pause\", {\n    params: {\n      hashes: \"all\",\n    },\n  });\n};\n\nexport const remove = async (hash = \"\", deleteFiles = false) => {\n  return await APICall.get(\"torrents/delete\", {\n    params: {\n      hashes: hash,\n      deleteFiles,\n    },\n  });\n};\n\nexport const addTorrent = async (url = \"\") => {\n  return await APICall.get(\"torrents/add\", {\n    params: {\n      urls: url,\n    },\n  });\n};\n\nexport const getPrefs = async () => {\n  return await APICall.get(\"app/preferences\");\n};\n\nexport const updatePref = async (json = {}) => {\n  return await APICall.get(\"app/setPreferences\", {\n    params: {\n      json,\n    },\n  });\n};\n\nexport const getCategories = async () => {\n  return await APICall.get(\"torrents/categories\");\n};\n\nexport const addCategory = async (name, path) => {\n  return await APICall.get(\"torrents/createCategory\", {\n    params: {\n      category: name,\n      savePath: path,\n    },\n  });\n};\n\nexport const removeCategories = async (category) => {\n  return await APICall.get(\"torrents/removeCategories\", {\n    params: {\n      categories: category,\n    },\n  });\n};\n\nexport const editCategory = async (category, path) => {\n  return await APICall.get(\"torrents/editCategory\", {\n    params: {\n      category,\n      path,\n    },\n  });\n};\n\nexport const setTorrentCategory = async (hash = \"\", category = \"\") => {\n  return await APICall.get(\"torrents/setCategory\", {\n    params: {\n      hashes: hash,\n      category,\n    },\n  });\n};\n","const stateDictionary = {\n  error : {\n    long:\"Some error occurred, applies to paused torrents\",\n    short:\"Error\"\n  },\n  missingFiles : {\n    long:\"Torrent data files is missing\",\n    short:\"Files Missing\"\n  },\n  uploading : {\n    long:\"Torrent is being seeded and data is being transferred\",\n    short:\"Seeding\"\n  },\n  pausedUP : {\n    long:\"Torrent is paused and has finished downloading\",\n    short:\"Paused / Done\"\n  },\n  queuedUP : {\n    long:\"Queuing is enabled and torrent is queued for upload\",\n    short:\"Queued For Seeding\"\n  },\n  stalledUP : {\n    long:\"Torrent is being seeded, but no connections were made\",\n    short:\"Available for Seeding\"\n  },\n  checkingUP : {\n    long:\"Torrent has finished downloading and is being checked\",\n    short:\"Checking Files\"\n  },\n  forcedUP : {\n    long:\"Torrent is forced to uploading and ignore queue limit\",\n    short:\"Force Uploading\",\n  },\n  allocating : {\n    long:\"Torrent is allocating disk space for download\",\n    short:\"Allocating Space\"\n  },\n  downloading : {\n    long:\"Torrent is being downloaded and data is being transferred\",\n    short:\"Downloading\"\n  },\n  metaDL : {\n    long:\"Torrent has just started downloading and is fetching metadata\",\n    short:\"Fetching Metadata\"\n  },\n  pausedDL : {\n    long:\"Torrent is paused and has NOT finished downloading\",\n    short:\"Paused\"\n  },\n  queuedDL : {\n    long:\"Queuing is enabled and torrent is queued for download\",\n    short:\"Queued for Download\"\n  },\n  stalledDL : {\n    long:\"Torrent is being downloaded, but no connection were made\",\n    short:\"Stalled\"\n  },\n  checkingDL : {\n    long:\"Same as checkingUP, but torrent has NOT finished downloading\",\n    short:\"Checking Files\"\n  },\n  forceDL : {\n    long:\"Torrent is forced to downloading to ignore queue limit\",\n    short:\"Force Downloading\"\n  },\n  checkingResumeData : {\n    long:\"Checking resume data on qBt startup\",\n    short:\"Checking Resume\"\n  },\n  moving : {\n    long:\"Torrent is moving to another location\",\n    short:\"Moving Location\",\n  },\n  unknown : {\n    long:\"Unknown status\",\n    short:\"Unknown\",\n  },\n}\n\nexport default stateDictionary;\n","import {useEffect,useRef} from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, {useState} from \"react\";\nimport {ProgressBar} from \"react-onsenui\";\nimport fileSize from \"filesize\";\nimport stateDictionary from './stateDictionary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faBolt, faDownload,\n    faFolderOpen,\n    faPallet,\n    faPalletAlt,\n    faShareAlt,\n    faStopwatch,\n    faTachometerAltFastest,\n    faTachometerAltSlowest,\n    faUpload,\n    faUserAstronaut,\n    faUserSecret\n} from '@fortawesome/pro-regular-svg-icons'\nimport useInterval from \"../utils/useInterval\";\nimport {sync} from \"../utils/TorrClient\";\n\nconst TorrentInfo = (props) => {\n    const {item} = props;\n    const {name} = item\n    const {hash} = props\n\n    const [torrent,setTorrent] = useState(item)\n\n    useInterval(() => {\n        sync().then(resp => {\n            setTorrent(resp.data.torrents[hash])\n        });\n    },1000)\n\n    const AmountRow = [\n        {\n            value: `${fileSize(torrent.downloaded)} / ${fileSize(torrent.size)}`,\n            icon: faDownload,\n            label: \"Downloaded\"\n        },\n        {\n            value: fileSize(torrent.downloaded_session),\n            icon: faPallet,\n            label: \"Downloaded This Session\"\n        },\n        {\n            value: fileSize(torrent.uploaded),\n            icon: faUpload,\n            label: \"Uploaded\"\n        },\n        {\n            value: fileSize(torrent.uploaded_session),\n            icon: faPalletAlt,\n            label: \"Uploaded This Session\"\n        },\n        {\n            value: torrent.ratio?torrent.ratio.toFixed(2):0,\n            icon: faShareAlt,\n            label: \"Share Ratio\"\n        },\n    ]\n\n    const date = new Date(0);\n    date.setSeconds(torrent.eta); // specify value for SECONDS here\n    const timeString = date.toISOString().substr(11, 8);\n\n    const SpeedsRow = [\n        {\n            value: `${fileSize(torrent.dlspeed)}/s`,\n            icon: torrent.dlspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: `${fileSize(torrent.upspeed)}/s`,\n            icon: torrent.upspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: torrent.eta !== 8640000 ?\n                timeString\n                :0\n            ,\n            icon: faStopwatch,\n            label: \"Estimate Time Left\"\n        },\n    ]\n\n    const DataRow = [\n        {\n            value: `${torrent.num_seeds} (${torrent.num_complete})`,\n            icon: faUserAstronaut,\n            label: \"Seeds\"\n        },\n        {\n            value: `${torrent.num_leechs} (${torrent.num_incomplete})`,\n            icon: faUserSecret,\n            label: \"Leechs\"\n        },\n        {\n            value: torrent.save_path,\n            icon: faFolderOpen,\n            label: \"Save Path\"\n        },\n    ]\n\n    const StateRow = [\n        {\n            value: stateDictionary[torrent.state].short,\n            icon: faBolt,\n            label: stateDictionary[torrent.state].long\n        },\n    ]\n\n    return(\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{name}</h2>\n                <div>\n                    <span className={\"ProgressAmount\"}>{(torrent.progress*100).toFixed(1)}%</span>\n                    <ProgressBar\n                        value={torrent.progress*100}\n                        secondaryValue={100}\n                    />\n                </div>\n            </div>\n            <StatsRow data={StateRow} title={\"CurrentState\"}/>\n            <StatsRow data={DataRow} title={\"Metadata\"}/>\n            <StatsRow data={SpeedsRow} title={\"Speeds\"}/>\n            <StatsRow data={AmountRow} title={\"Amounts\"}/>\n        </div>\n    )\n}\n\nexport const StatsRow = (props) => {\n    return(\n        <div className={\"infoStatsRowWrapper\"}>\n            <div className={\"infoTitleBox\"}>\n                <h3>{props.title}</h3>\n            </div>\n            <div className={\"infoStatsRow\"}>\n                {props.data.map((item,key) =>\n                    <div className={\"infoStatBox\"} key={key}>\n                        <h4 className={\"infoStat\"}>{item.value}</h4>\n                        <div>\n                            <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                            <span className={\"infoStatLabel\"}>{item.label}</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default TorrentInfo;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  ActionSheet,\n  ActionSheetButton,\n  AlertDialog,\n  AlertDialogButton,\n  Icon,\n  ProgressBar,\n} from \"react-onsenui\";\nimport stateDictionary from \"./stateDictionary\";\nimport { pause, remove, resume, setTorrentCategory } from \"../utils/TorrClient\";\nimport filesize from \"filesize\";\nimport { IonSpinner } from \"@ionic/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarDay,\n  faCloudDownload,\n  faCloudUpload,\n  faTachometerAltFast,\n} from \"@fortawesome/pro-regular-svg-icons\";\nimport { Context } from \"../App\";\nimport TorrentInfo from \"./TorrentInfo\";\n\nconst TorrentBox = (props) => {\n  const { contextCategories } = useContext(Context);\n\n  const item = props.item;\n  const hash = props.hash;\n  const { name } = item;\n  const { filter } = props;\n\n  // const {syncData} = useContext(Context)\n\n  const torrentData = item;\n\n  const { progress } = torrentData || 0;\n  const { eta } = torrentData || 0;\n  const { state } = torrentData || \"\";\n  const { category } = torrentData || \"\";\n  const { num_leechs } = torrentData || 0;\n  const { num_seeds } = torrentData || 0;\n  const { upspeed } = torrentData || 0;\n  const { dlspeed } = torrentData || 0;\n  const { added_on } = torrentData || 0;\n\n  const [actionLoading, setActionLoading] = useState(false);\n\n  const date = new Date(0);\n  date.setSeconds(eta); // specify value for SECONDS here\n  const timeString = eta ? date.toISOString().substr(11, 8) : 0;\n\n  const isDone = () => {\n    return !!progress >= 1;\n  };\n\n  const isPaused = () => {\n    switch (state) {\n      case \"pausedDL\":\n        return true;\n      case \"pausedUP\":\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const isDL = () => {\n    switch (state) {\n      case \"downloading\":\n        return true;\n      case \"metaDL\":\n        return true;\n      case \"queuedDL\":\n        return true;\n      case \"stalledDL\":\n        return true;\n      case \"checkingDL\":\n        return true;\n      case \"forceDL\":\n        return true;\n      case \"checkingResumeData\":\n        return true;\n      case \"allocating\":\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const statsIconStyle = {\n    color: isDL() ? \"#0076ff\" : \"#b2b2b2\",\n    marginRight: 5,\n  };\n\n  useEffect(() => {\n    if (actionLoading) {\n      setTimeout(() => {\n        setActionLoading(false);\n      }, 1000);\n    }\n  }, [actionLoading]);\n\n  const { installed, updateModal } = useContext(Context);\n\n  const [torrentAction, setTorrentAction] = useState({\n    open: false,\n    options: [\n      {\n        label: \"More Info\",\n        modifier: null,\n        onclick: () => false,\n      },\n      {\n        label: \"Remove Torrent\",\n        modifier: \"destructive\",\n        onclick: () => false,\n      },\n    ],\n  });\n\n  const [deleteAlert, setDeleteAlert] = useState({\n    open: false,\n    hash: undefined,\n  });\n\n  const [moveAlert, setMoveAlert] = useState({\n    open: false,\n    hash: undefined,\n  });\n\n  const handleMoreButton = (hash, item) => {\n    setTorrentAction({\n      open: true,\n      options: [\n        {\n          label: \"Remove Torrent\",\n          modifier: \"destructive\",\n          onclick: () => setDeleteAlert({ open: true, hash }),\n        },\n        {\n          label: \"More Info\",\n          modifier: null,\n          onclick: () =>\n            updateModal({\n              open: true,\n              content: <TorrentInfo item={item} hash={hash} />,\n            }),\n        },\n        {\n          label: \"Change Categories\",\n          modifier: null,\n          onclick: () => setMoveAlert({ open: true, hash }),\n        },\n      ],\n    });\n  };\n\n  if (\n    (filter === \"downloading\" && progress < 1) ||\n    (filter === \"complete\" && progress === 1) ||\n    filter === \"all\"\n  ) {\n    return (\n      <>\n        <div className=\"torrentBox\">\n          <div className={\"titleRow\"}>\n            <h3>{name}</h3>\n            <span>{category}</span>\n          </div>\n          <div className=\"stats\">\n            <span>{(progress * 100).toFixed(0)}%</span>\n            {eta !== 8640000 ? (\n              <span>{timeString}</span>\n            ) : (\n              <span>{stateDictionary[state].short}</span>\n            )}\n          </div>\n          <ProgressBar\n            style={{ paddingBottom: 10 }}\n            value={progress * 100}\n            secondaryValue={100}\n          />\n          <div className=\"details\">\n            <div className=\"statsRow\">\n              <span>\n                <FontAwesomeIcon\n                  style={statsIconStyle}\n                  icon={isDone() ? faCloudUpload : faCloudDownload}\n                />\n                <span className={\"data\"}>\n                  {isDone() ? num_leechs : num_seeds}\n                </span>\n              </span>\n              <span>\n                <FontAwesomeIcon\n                  style={statsIconStyle}\n                  icon={faTachometerAltFast}\n                />\n                <span className={\"data\"}>\n                  {() => {\n                    if (isPaused()) {\n                      return \"0\";\n                    } else if (isDone()) {\n                      return filesize(upspeed, { round: 1 });\n                    } else {\n                      return filesize(dlspeed, { round: 1 });\n                    }\n                  }}\n                  {isPaused()\n                    ? \"0\"\n                    : filesize(isDone() ? upspeed : dlspeed, { round: 1 }) +\n                      \"/s\"}\n                </span>\n              </span>\n              <span>\n                <FontAwesomeIcon style={statsIconStyle} icon={faCalendarDay} />\n                <span className={\"data\"}>\n                  {new Date(added_on * 1000).toLocaleDateString()}\n                </span>\n              </span>\n            </div>\n            {actionLoading ? (\n              <IonSpinner name={\"lines\"} />\n            ) : (\n              <div className=\"buttonsRow\">\n                <button\n                  type=\"button\"\n                  onClick={() => handleMoreButton(hash, item)}\n                >\n                  <Icon size={30} icon=\"ion-ios-more\" />\n                </button>\n\n                <button\n                  className={isPaused() ? \"active\" : null}\n                  type=\"button\"\n                  onClick={() => {\n                    setActionLoading(true);\n                    isPaused() ? resume(hash) : pause(hash);\n                  }}\n                >\n                  <Icon size={30} icon=\"ion-ios-pause\" />\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n        {torrentAction.open ? (\n          <ActionSheet\n            className={installed ? \"installed\" : null}\n            isOpen={torrentAction.open}\n            isCancelable={true}\n            onCancel={() =>\n              setTorrentAction({ open: false, options: torrentAction.options })\n            }\n          >\n            {torrentAction.options.map((option, key) => (\n              <ActionSheetButton\n                key={key}\n                modifier={option.modifier}\n                onClick={() => {\n                  setTorrentAction({\n                    open: false,\n                    options: torrentAction.options,\n                  });\n                  option.onclick();\n                }}\n              >\n                {option.label}\n              </ActionSheetButton>\n            ))}\n\n            <ActionSheetButton\n              onClick={() =>\n                setTorrentAction({\n                  open: false,\n                  options: torrentAction.options,\n                })\n              }\n            >\n              Cancel\n            </ActionSheetButton>\n          </ActionSheet>\n        ) : null}\n        {deleteAlert.open ? (\n          <AlertDialog\n            isOpen={deleteAlert.open}\n            onCancel={() => setDeleteAlert({ open: false })}\n            cancelable\n          >\n            <div className=\"alert-dialog-title\">Delete Files</div>\n            <div className=\"alert-dialog-content\">\n              Would you also like to delete the files downloaded?\n            </div>\n            <div className=\"alert-dialog-footer\">\n              <AlertDialogButton\n                onClick={() => {\n                  setDeleteAlert({ open: false });\n                  remove(deleteAlert.hash, true);\n                  props.removeFromFeed(hash);\n                }}\n                className={\"danger\"}\n              >\n                Yes, Delete Files\n              </AlertDialogButton>\n\n              <AlertDialogButton\n                onClick={() => {\n                  setDeleteAlert({ open: false });\n                  remove(deleteAlert.hash, false);\n                  props.removeFromFeed(hash);\n                }}\n              >\n                No, Keep Files\n              </AlertDialogButton>\n\n              <AlertDialogButton\n                onClick={() => setDeleteAlert({ open: false })}\n              >\n                Cancel\n              </AlertDialogButton>\n            </div>\n          </AlertDialog>\n        ) : null}\n        {moveAlert.open && (\n          <AlertDialog\n            isOpen={moveAlert.open}\n            onCancel={() => setDeleteAlert({ open: false })}\n            cancelable\n          >\n            <div className=\"alert-dialog-title\">Change Category</div>\n            <div className=\"alert-dialog-content\">\n              What category would you like to move this torrent to?\n            </div>\n            <div className=\"alert-dialog-footer\">\n              {Object.keys(contextCategories).map((key) => (\n                <AlertDialogButton\n                  onClick={async () => {\n                    await setTorrentCategory(hash, contextCategories[key].name);\n                    setMoveAlert({ open: false, hash });\n                  }}\n                >\n                  {contextCategories[key].name}\n                </AlertDialogButton>\n              ))}\n\n              <AlertDialogButton\n                className={\"danger\"}\n                onClick={() => setMoveAlert({ open: false })}\n              >\n                Cancel\n              </AlertDialogButton>\n            </div>\n          </AlertDialog>\n        )}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TorrentBox;\n","export const getStorage = (key=\"\") => {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport const saveStorage = async (key=\"\",value={}) => {\n  new Promise ( (resolve) => {\n    localStorage.setItem(key,JSON.stringify(value));\n    setInterval(()=>{\n      if(localStorage.getItem(key) !== undefined){\n        resolve()\n      }\n    },100)\n  })\n}\n","import roundLogo from \"../images/logo_round.png\";\nimport React from \"react\";\n\nconst LogoHeader = () => {\n    return (\n        <div className=\"LogoHeader\">\n            <img className=\"loginImage\" alt=\"iQbit logo\" src={roundLogo}/>\n            <span className={\"iqbit\"}>iQbit</span>\n            <span className={\"poweredBy\"}>Powered by qBitTorrent</span>\n            <hr/>\n        </div>\n    )\n}\n\nexport default LogoHeader;\n","import React, {useState, useContext, useEffect} from 'react';\nimport {Button, Icon} from 'react-onsenui';\nimport {sync, login, getTorrents, pauseAll, resumeAll} from '../utils/TorrClient';\nimport TorrentBox from './TorrentBox';\nimport {Context} from \"../App\"\nimport {saveStorage} from '../utils/Storage';\nimport LogoHeader from \"./LogoHeader\";\nimport useInterval from \"../utils/useInterval\";\nimport {IonSpinner} from \"@ionic/react\";\n\nconst Torrents = (props) => {\n    const {settings, updateSettings} = useContext(Context);\n\n    const [feedback, setFeedback] = useState(null)\n    const [username, setUsername] = useState(undefined)\n    const [password, setPassword] = useState(undefined)\n\n    const [torrentList, setTorrentList] = useState([])\n    const [torrentData, setTorrentData] = useState({})\n    const [initialLoad,setInitialLoad] = useState(false)\n    const [sort,setSort] = useState({key:\"added_on\",reverse:true})\n    const [needsFullRefresh, setNeedsRefresh] = useState(false);\n\n    useEffect(() => {\n        setSort(props.sortingObj)\n        setNeedsRefresh(true)\n    },[props.sortingObj])\n\n    useEffect(()=>{\n        if(initialLoad && needsFullRefresh){\n            getTorrents(sort.key,sort.reverse).then( resp => {\n                const TorrentArray =  resp.data;\n                let hashArray = [];\n\n                TorrentArray.forEach((torrent) => {\n                    hashArray.push(torrent.hash)\n                })\n\n                setTorrentList(hashArray);\n                setNeedsRefresh(false);\n            })\n        }\n    },[needsFullRefresh])\n\n\n    const [RID, setRID] = useState(0)\n\n    useInterval(() => {\n        if (settings.loggedin) {\n\n            sync(RID).then(resp => {\n                const {data} = resp\n\n                if (data.full_update) {\n                    setTorrentData(data.torrents);\n\n                    getTorrents(sort.key,sort.reverse).then( resp => {\n                        const TorrentArray =  resp.data;\n                        let hashArray = [];\n\n                        TorrentArray.forEach((torrent) => {\n                            hashArray.push(torrent.hash)\n                        })\n\n                        setTorrentList(hashArray);\n                        setNeedsRefresh(false);\n                    })\n\n                } else {\n\n                    if (data.torrents) {\n                        let updatedObj = torrentData;\n\n                        const keysArray = Object.keys(data.torrents);\n\n                        keysArray.forEach((hash) => {\n\n                            if (!updatedObj[hash]) {\n                                updatedObj[hash] = {};\n                            }\n\n                            const properties = Object.keys(data.torrents[hash]);\n\n                            properties.forEach((property) => {\n                                updatedObj[hash][property] = data.torrents[hash][property]\n                            })\n\n                            if(!torrentList.includes(hash)){\n                                setTorrentList([hash,...torrentList])\n                            }\n                        })\n\n                        setTorrentData(updatedObj);\n                    }\n\n                }\n\n                setRID(RID + 1)\n\n                if(RID === 0){\n                    setInitialLoad(true)\n                }\n            });\n        }\n    }, 1000)\n\n    const handleSignin = () => {\n\n        login({username, password}).then(response => {\n\n            if (response.data === \"Ok.\") {\n\n                const userObject = {\n                    username,\n                    password,\n                    loggedin: true,\n                };\n\n                saveStorage(\"user\", userObject).then(() => {\n                    updateSettings(userObject)\n                })\n\n            } else {\n                setFeedback(\"Login Unauthorized.\")\n            }\n\n        }).catch(() => {\n            setFeedback(\"Too many login attempts. This IP is temporarily blocked. You can restart qBitTorrent to reset this.\")\n        })\n    }\n\n    const LoginForm = () => {\n        return (\n            <div className={\"torrentBox login\"}>\n                <LogoHeader/>\n                <h2 className=\"centered\">Welcome To Your WebUI</h2>\n                <div className=\"inputGroup\">\n                    <label htmlFor=\"username-input\">\n                        <span>Username</span>\n                        <input\n                            id=\"username-input\"\n                            type=\"text\"\n                            onChange={(event) => setUsername(event.target.value)}\n                            placeholder=\"Username\"\n                            autoCapitalize={\"none\"}\n                            autoCorrect={\"none\"}\n                            autoComplete={\"none\"}\n                        />\n                    </label>\n                    <label htmlFor=\"password-input\">\n                        <span>Password</span>\n                        <input\n                            id=\"password-input\"\n                            type=\"password\"\n                            onChange={(event) => setPassword(event.target.value)}\n                            placeholder=\"Password\"/>\n                    </label>\n                </div>\n                {feedback ? <p className=\"feedback\">{feedback}</p> : null}\n                <Button modifier=\"large--quiet\" onClick={() => handleSignin()}>\n                    Sign In\n                </Button>\n            </div>\n        )\n    }\n\n    const removeFromFeed = (hash) => {\n        const hashIndex = torrentList.indexOf(hash);\n        const listToUpdate = torrentList;\n        listToUpdate.splice(hashIndex,1);\n        setTorrentList(listToUpdate);\n    }\n\n    const [masterButtonsLoading,setMasterButtonsLoading] = useState({\n        pause:false,\n        play:false,\n    })\n\n    useEffect(()=>{\n        if(masterButtonsLoading.pause){\n            setTimeout(()=>{\n                setMasterButtonsLoading({\n                    pause: false,\n                    play: masterButtonsLoading.play\n                })\n            },1500)\n        }\n\n        if(masterButtonsLoading.play){\n            setTimeout(()=>{\n                setMasterButtonsLoading({\n                    pause: masterButtonsLoading.pause,\n                    play: false\n                })\n            },1500)\n        }\n    },[masterButtonsLoading])\n\n    return (\n        <>\n            {\n                settings.loggedin ?\n                <div className={\"torrentBox compact\"}>\n                    <div className=\"buttonsRow\">\n\n                        {\n                            masterButtonsLoading.pause ?\n                            <IonSpinner name={\"lines\"}/> :\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    pauseAll()\n                                    setMasterButtonsLoading({\n                                        pause: true,\n                                        play: masterButtonsLoading.play\n                                    })\n                                }}\n                            >\n                                <Icon size={30} icon=\"ion-ios-pause\"/>\n                            </button>\n                        }\n\n                        {\n                            masterButtonsLoading.play?\n                                <IonSpinner name={\"lines\"}/>:\n                                <button\n                                    type=\"button\"\n                                    onClick={()=> {\n                                        resumeAll()\n                                        setMasterButtonsLoading({\n                                            pause: masterButtonsLoading.pause,\n                                            play: true\n                                        })\n                                    }}\n                                >\n                                    <Icon size={30} icon=\"ion-ios-play\"/>\n                                </button>\n                        }\n\n                    </div>\n                </div>\n                :null\n            }\n\n            {\n                settings.loggedin ?\n                    torrentList.map((hash) =>\n                        <TorrentBox\n                            item={torrentData[hash]}\n                            fullData={torrentData}\n                            key={hash}\n                            hash={hash}\n                            filter={props.segment}\n                            removeFromFeed={(hash)=>{removeFromFeed(hash)}}\n                        />)\n                    : null\n            }\n\n            {settings.loggedin ? null : LoginForm()}\n\n        </>\n\n    )\n}\n\nexport default Torrents\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {IonLabel, IonSegment, IonSegmentButton} from \"@ionic/react\";\nimport Torrents from \"../components/Torrents\";\nimport {Context} from \"../App\";\n\nconst TorrentsCol = (props) => {\n    const {settings} = useContext(Context)\n\n    const [segment,setSegment] = useState(\"all\");\n\n    const SegmentPicker = () => {\n\n        if(settings.loggedin){\n            return(\n                <div className={\"segmentPicker\"}>\n                    <IonSegment mode={\"ios\"} value={segment} onIonChange={e => {\n                        setTimeout(()=>{\n                            setSegment(e.detail.value)\n                        },200)\n                    }}>\n                        <IonSegmentButton mode={\"ios\"} value=\"all\">\n                            <IonLabel>All Torrents</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"complete\">\n                            <IonLabel>Complete</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"downloading\">\n                            <IonLabel>Downloading</IonLabel>\n                        </IonSegmentButton>\n                    </IonSegment>\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    return(\n        <div  className={\"torrentsCol\"}>\n            <SegmentPicker/>\n            <Torrents sortingObj={props.sortingObj} segment={segment}/>\n        </div>\n    )\n}\n\nexport default TorrentsCol\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n    faBox,\n    faFilmCanister,\n    faMedal,\n    faTv,\n    faUserAstronaut,\n    faUsersClass,\n    faComments, faStopwatch, faFilm\n    ,faFolderDownload\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst YTSSearch = (props) => {\n    const {updateModal} = useContext(Context)\n    const [searchTerm,setSearchTerm] = useState(undefined)\n    const [searchLoading,setSearchLoading] = useState(false)\n    const [searchResults,setSearchResults] = useState([])\n    const [searchReady,setSearchReady] = useState(false);\n\n    const submitQuery = () => {\n        setSearchLoading(true);\n        axios.get(\"https://yts.mx/api/v2/list_movies.json\",{\n            params:{\n                limit:null,                     //Integer between 1 - 50 (inclusive)\n                page:null,                      //Integer (Unsigned)\n                quality:null,                   //String (720p, 1080p, 2160p, 3D)\n                minimum_rating:null,            //Integer between 0 - 9 (inclusive)\n                query_term:searchTerm,          //String\n                genre:null,                     //String from http://www.imdb.com/genre/\n                sorty_by:null,                  //String (title, year, rating, peers, seeds, download_count, like_count, date_added)\n                with_rt_ratings:true,           //Bool\n            }\n        }).then(response => {\n            const moviesArray = response.data.data.movies\n            setSearchResults(moviesArray);\n            setSearchLoading(false);\n            setSearchReady(true);\n        })\n    }\n\n    return (\n        <div>\n            <div className={\"searchInputRow\"}>\n                <SearchInput\n                    className={\"searchInput\"}\n                    style={{height:\"100%\"}}\n                    placeholder={`Search ${props.category}`}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n                />\n                {\n                    searchLoading ? <IonSpinner name={\"lines\"}/> :\n                        <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n                            <Icon icon={\"ion-ios-search\"} size={25} />\n                        </Fab>\n                }\n            </div>\n            <div className={\"searchResults\"}>\n                {\n                    searchReady?\n                        searchResults ?\n                        searchResults.map((item,key) =>\n                            <div\n                                role={\"button\"}\n                                className={\"MoviePoster\"}\n                                key={key}\n                                style={{\n                                    backgroundImage: `url(${item.medium_cover_image}), url(${imageMissing})`,\n                                }}\n                                onClick={()=>{\n                                    updateModal({open: true,content:<YTSModalInfo item={item}/>})\n                                }}\n                            >\n                                <span>{item.title}</span>\n                            </div>\n\n                        )\n                            :<div>No results were found for that search</div>\n                        :null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const YTSModalInfo = (props) => {\n    const { item } = props\n    const {updateAlert} = useContext(Context)\n\n    const TorrentAttr = (props) => {\n        return (\n            <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n                {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n                <span>{props.value}</span>\n            </span>\n        )\n    }\n\n    const otherInfo = [\n        {\n            value: item.language,\n            icon: faComments,\n            label: \"Language\"\n        },\n        {\n            value: item.rating,\n            icon: faMedal,\n            label: \"Ratings\"\n        },\n        {\n            value: item.runtime+\" Minutes\",\n            icon: faStopwatch,\n            label: \"Runtime\"\n        },\n        {\n            value: item.genres.join(\", \"),\n            icon: faFilm,\n            label: \"Genres\"\n        },\n    ]\n\n    const [downloadsStarted,setDownloadsStarted] = useState([])\n\n    const handleDownload = (torrent,title,key) =>{\n\n        addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n        .then(response=>{\n            if(response.data === \"Ok.\"){\n                setDownloadsStarted([...downloadsStarted, key])\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        })\n    };\n\n    return (\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{item.title_long}</h2>\n                <hr/>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Torrents</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {item.torrents.map((thisTorrent,key) =>\n                        <div className={\"infoStatBox flex-row w100\"} key={key}>\n                            <div className={\"attrBox\"}>\n                                <TorrentAttr icon={faTv} value={thisTorrent.quality}/>\n                                <TorrentAttr icon={faFilmCanister} value={thisTorrent.type}/>\n                                <TorrentAttr icon={faUserAstronaut} value={thisTorrent.seeds} letter={\"S\"}/>\n                                <TorrentAttr icon={faUsersClass} value={thisTorrent.peers} letter={\"P\"}/>\n                                <TorrentAttr icon={faBox} value={thisTorrent.size}/>\n                            </div>\n                            {\n                                downloadsStarted.includes(key) ?\n                                    <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                                    :\n                                    <Button class={\"downloadBtn\"}\n                                            onClick={() => handleDownload(thisTorrent, item.title_long, key)}\n                                    >\n                                        Download\n                                    </Button>\n\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Description</h3>\n                </div>\n                <p>{item.description_full}</p>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Other Info</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {otherInfo.map((item,key) =>\n                        <div className={\"infoStatBox\"} key={key}>\n                            <h4 className={\"infoStat\"}>{item.value}</h4>\n                            <div>\n                                <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                                <span className={\"infoStatLabel\"}>{item.label}</span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            {\n                item.yt_trailer_code===\"\"?null:\n                    <div className={\"infoStatsRowWrapper\"}>\n                        <div className={\"infoTitleBox\"}>\n                            <h3>Movie Trailer</h3>\n                        </div>\n                        <iframe\n                            className={\"movieTrailer\"}\n                            title={\"Movie Trailer\"}\n                            width=\"100%\" height=\"450\"\n                            src={\"https://www.youtube.com/embed/\"+item.yt_trailer_code}\n                        />\n                    </div>\n\n            }\n        </div>\n    )\n}\n\nexport default YTSSearch;\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n  faBox,\n  faFilmCanister,\n  faMedal,\n  faTv,\n  faUserAstronaut,\n  faUsersClass,\n  faComments, faStopwatch, faFilm\n  ,faFolderDownload,\n  faUserCowboy\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst TPBSearch = (props) => {\n  const {updateModal} = useContext(Context)\n  const [searchTerm,setSearchTerm] = useState(undefined)\n  const [searchLoading,setSearchLoading] = useState(false)\n  const [searchResults,setSearchResults] = useState([])\n  const [searchReady,setSearchReady] = useState(false);\n  const [downloadsStarted,setDownloadsStarted] = useState([])\n  const {updateAlert} = useContext(Context)\n\n  const submitQuery = () => {\n    setSearchLoading(true);\n    axios.get(\"https://cors-container.herokuapp.com/https://apibay.org/q.php\",{\n      params:{\n        q:searchTerm,\n        cat:props.category\n      }\n    }).then(response => {\n      const results = response.data\n      console.log(results);\n      setSearchResults(results);\n      setSearchLoading(false);\n      setSearchReady(true);\n    })\n  }\n\n  const TorrentAttr = (props) => {\n    return (\n      <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n        {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n        <span>{props.value}</span>\n            </span>\n    )\n  }\n\n  const handleDownload = ({torrent, title, key}) =>{\n\n    addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.info_hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n    .then(response=>{\n      if(response.data === \"Ok.\"){\n        setDownloadsStarted([...downloadsStarted, key])\n      }else{\n        updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n      }\n    })\n  };\n\n  return (\n    <div>\n      <div className={\"searchInputRow\"}>\n        <SearchInput\n          className={\"searchInput\"}\n          style={{height:\"100%\"}}\n          placeholder={`Search ${props.category}`}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n        />\n        {\n          searchLoading ? <IonSpinner name={\"lines\"}/> :\n            <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n              <Icon icon={\"ion-ios-search\"} size={25} />\n            </Fab>\n        }\n      </div>\n      <div className={\"searchResults tpb\"}>\n        {\n          searchReady?\n            searchResults ?\n              searchResults.map((item,key) =>\n                <div className={\"infoStatsRow\"} key={key}>\n                  <div className={\"infoStatBox flex-row w100\"}>\n                    <div className={\"attrBox\"}>\n                      <h3>{item.name}</h3>\n                      <TorrentAttr icon={faUserAstronaut} value={item.seeders} letter={\"S\"}/>\n                      <TorrentAttr icon={faUserCowboy} value={item.leechers} letter={\"L\"}/>\n                    </div>\n                    {\n                      downloadsStarted.includes(key) ?\n                        <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                        :\n                        <Button class={\"downloadBtn\"}\n                                onClick={() => handleDownload({torrent:item,title:item.name, key})}\n                        >\n                          Download\n                        </Button>\n\n                    }\n                  </div>\n                </div>\n\n              )\n              :<div>No results were found for that search</div>\n            :null\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default TPBSearch;\n","import React,{useState} from 'react';\nimport YTSLogo from \"../images/logo-YTS.svg\"\nimport PTB from \"../images/logo-TPB.svg\"\nimport YTSSearch from \"../searchAPIs/yts\";\nimport TPBSearch from '../searchAPIs/tpb';\n\nconst Search = (props) =>{\n\n    const [providers] = useState([\n      {\n          logo:YTSLogo,\n          name:\"YTS\",\n          categories:[\"Movies\"],\n          component:(props)=>YTSSearch(props)\n      },\n      {\n          logo:PTB,\n          name:\"PirateBay\",\n          categories:[\"Video\",\"Audio\",\"Applications\",\"Games\",\"Porn\",\"Other\"],\n          component:(props)=>TPBSearch(props)\n      },\n    ])\n\n\n\n    const [selectedProvider,setSelectedProvider] = useState(0)\n    const [selectedCategory,setSelectedCategory] = useState(0)\n\n    return (\n    <div className=\"searchCol\" {...props}>\n        <h3>Select Search Provider</h3>\n        <p>Warning: Be sure to comply with your country's copyright laws when downloading torrents from any of these search engines.</p>\n        <div className={\"providerRow\"}>\n            {providers.map((item,key) =>\n                <button className={key===selectedProvider?\"providerBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedProvider(key)}>\n                    <img alt={\"YTS Logo\"} src={item.logo}/>\n                </button>\n            )}\n        </div>\n        {\n            providers[selectedProvider].categories.length > 1?\n                <div className={\"categoriesRow\"}>\n                    {providers[selectedProvider].categories.map((item,key) =>\n                        <button className={key===selectedCategory?\"categoryBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedCategory(key)}>\n                            <p>{item}</p>\n                        </button>\n                    )}\n                </div>:null\n        }\n        {\n            providers[selectedProvider].name==='PirateBay' && <TPBSearch category={providers[selectedProvider].categories[selectedCategory]}/>\n        }\n        {\n            providers[selectedProvider].name==='YTS' && <YTSSearch category={providers[selectedProvider].categories[selectedCategory]}/>\n        }\n    </div>\n    )\n}\n\nexport default Search\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {List, ListItem, ListHeader, Switch, AlertDialog, Button} from \"react-onsenui\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {\n    faAngleRight,\n    faEdit, faEthernet,\n    faFolderDownload, faFolderMinus,\n    faFolders, faKey,\n    faMinusHexagon, faMoonStars, faNetworkWired, faOutlet, faPaintBrushAlt,\n    faUser, faUserLock, faUserRobot, faUsersClass, faWifi\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport {getPrefs, updatePref} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\nimport {saveStorage} from \"../utils/Storage\";\n\nconst Settings = (props) =>{\n\n    const {settings,updateAlert,prefs, cookie} = useContext(Context)\n    const [preferences,setPreferences] = useState(prefs)\n    const [prefsRefresh,setPrefsRefresh] = useState(true)\n\n    useEffect(()=>{\n        if(prefsRefresh && cookie){\n            getPrefs().then(response=>{\n                setPreferences(response.data)\n                setPrefsRefresh(false);\n            })\n        }\n    },[prefsRefresh,settings.loggedin,prefs])\n\n    const SwitchRow = (props) =>{\n        return(\n            <ListItem>\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <Switch checked={preferences[props.objKey]} onChange={()=>{\n                        updatePref(`{\"${props.objKey}\":${!preferences[props.objKey]}}`).then(()=>{\n                            setTimeout(()=>{\n                                let updatedObj = {...preferences}\n                                updatedObj[props.objKey] = !preferences[props.objKey];\n                                setPreferences(updatedObj)\n                            },350)\n                        }).catch(()=>{\n                            setPrefsRefresh(true);\n                            updateAlert(\"Settings Update Failed\",\"Settings could not be updated\")\n                        })\n                    }}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const InputRow = (props) =>{\n        return(\n            <ListItem\n                onClick={()=>setAlert({open: true,label: props.title, objKey:props.objKey})}\n            >\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <FontAwesomeIcon icon={faEdit}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const [alert,setAlert] = useState({\n        open:false,\n        label:\"\",\n        objKey:\"\"\n    })\n\n    let alertInput = useRef()\n\n    if(settings.loggedin){\n        return (\n        <div className={\"settingsCol\"}>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Downloads\n                </ListHeader>\n                <SwitchRow\n                    title={\"Create SubFolders\"}\n                    icon={faFolders}\n                    objKey={\"create_subfolder_enabled\"}\n                    color={\"#006ce2\"}\n                />\n                <SwitchRow\n                    title={\"Start Torrent Paused\"}\n                    icon={faMinusHexagon}\n                    objKey={\"start_paused_enabled\"}\n                    color={\"#bf0000\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Paths\n                </ListHeader>\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#2ca700\"}\n                />\n                <SwitchRow\n                    title={\"Temp Folder\"}\n                    icon={faFolderMinus}\n                    objKey={\"temp_path_enabled\"}\n                    color={\"#5b00b6\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Proxy\n                </ListHeader>\n                <InputRow\n                    title={\"Host\"}\n                    icon={faNetworkWired}\n                    objKey={\"proxy_ip\"}\n                    color={\"#00a799\"}\n                />\n                <InputRow\n                    title={\"Port\"}\n                    icon={faEthernet}\n                    objKey={\"proxy_port\"}\n                    color={\"#b600a4\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Peer Connections\"}\n                    icon={faUsersClass}\n                    objKey={\"proxy_peer_connections\"}\n                    color={\"#ea9d00\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Auth Enabled\"}\n                    icon={faUserLock}\n                    objKey={\"proxy_auth_enabled\"}\n                    color={\"#b7ea00\"}\n                />\n                <InputRow\n                    title={\"Proxy Username\"}\n                    icon={faUserRobot}\n                    objKey={\"proxy_username\"}\n                    color={\"#ea5200\"}\n                />\n                <InputRow\n                    title={\"Proxy Password\"}\n                    icon={faKey}\n                    objKey={\"proxy_password\"}\n                    color={\"#ea5200\"}\n                />\n            </List>\n\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    WebUI\n                </ListHeader>\n                <SwitchRow\n                    title={\"Custom WebUI Enabled\"}\n                    icon={faPaintBrushAlt}\n                    objKey={\"alternative_webui_enabled\"}\n                    color={\"#19a700\"}\n                />\n                <InputRow\n                    title={\"WebUI Path\"}\n                    icon={faAngleRight}\n                    objKey={\"alternative_webui_path\"}\n                    color={\"#0086a7\"}\n                />\n                <InputRow\n                    title={\"WebUI IP Address\"}\n                    icon={faWifi}\n                    objKey={\"web_ui_address\"}\n                    color={\"#7a00a7\"}\n                />\n                <InputRow\n                    title={\"WebUI Port\"}\n                    icon={faEthernet}\n                    objKey={\"web_ui_port\"}\n                    color={\"#b60049\"}\n                />\n                <SwitchRow\n                    title={\"WebUI UPnP Enabled\"}\n                    icon={faOutlet}\n                    objKey={\"web_ui_upnp\"}\n                    color={\"#ea9d00\"}\n                />\n                <InputRow\n                    title={\"WebUI Username\"}\n                    icon={faUser}\n                    objKey={\"web_ui_username\"}\n                    color={\"#0069ea\"}\n                />\n                <InputRow\n                    title={\"WebUI Password\"}\n                    icon={faKey}\n                    objKey={\"web_ui_password\"}\n                    color={\"#0069ea\"}\n                />\n            </List>\n            <Button className={\"danger\"} modifier={\"large--quiet\"}\n                onClick={()=> {\n                    window.location.reload();\n                    saveStorage(\"user\", {})\n                }}\n            >\n                Log Out\n            </Button>\n\n\n            <AlertDialog className={\"settingsAlert\"} isOpen={alert.open} onCancel={()=>setAlert({open: false})} modifier={\"rowfooter\"} cancelable>\n                <div className=\"alert-dialog-title\">{alert.label}</div>\n                <div className=\"alert-dialog-content\">\n                    <input ref={alertInput} type={\"text\"} defaultValue={preferences[alert.objKey]} placeholder={\"Enter \"+alert.label}/>\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({...alert,open: false})} className=\"alert-dialog-button\">\n                        Cancel\n                    </Button>\n                    <Button onClick={()=>{\n                        let updateJSON = {}\n                        updateJSON[alert.objKey] = alertInput.current.value\n\n                        updatePref(JSON.stringify(updateJSON)).then(()=>{\n                            setTimeout(()=>{\n                                setPrefsRefresh(true)\n                            },300)\n                        })\n                    }} className=\"alert-dialog-button\">\n                        Save\n                    </Button>\n                </div>\n            </AlertDialog>\n        </div>\n        )\n    }else{\n        return (\n            <div className={\"settingsCol\"}>\n                <h2 style={{textAlign:\"center\"}}>\n                    Settings require login.\n                </h2>\n            </div>\n        )\n    }\n}\n\nexport default Settings\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  editCategory,\n  getCategories,\n  removeCategories,\n  updatePref,\n} from \"../utils/TorrClient\";\nimport { Context } from \"../App\";\nimport { AlertDialog, AlertDialogButton, Button } from \"react-onsenui\";\n\nconst Categories = (props) => {\n  const { contextCategories, refreshCategories } = useContext(Context);\n\n  const [confirmAlert, setConfirmAlert] = useState({ open: false, name: \"\" });\n  const [editAlert, setEditAlert] = useState({ open: false, name: \"\" });\n  let alertInput = useRef();\n\n  return (\n    <div className={\"categoryCol\"}>\n      {Object.keys(contextCategories).map((item, key) => (\n        <div className={\"categoryBox\"} key={key}>\n          <div className={\"infoRow\"}>\n            <h3 className={\"title\"}>{contextCategories[item].name}</h3>\n            <span className={\"path\"}>{contextCategories[item].savePath}</span>\n          </div>\n          <div className={\"actionRow\"}>\n            <button\n              onClick={() =>\n                setEditAlert({\n                  open: true,\n                  name: contextCategories[item].name,\n                  path: contextCategories[item].savePath,\n                })\n              }\n            >\n              Edit\n            </button>\n            <button\n              className={\"danger\"}\n              onClick={() =>\n                setConfirmAlert({\n                  open: true,\n                  name: contextCategories[item].name,\n                })\n              }\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      ))}\n      {confirmAlert.open && (\n        <AlertDialog\n          isOpen={confirmAlert.open}\n          onCancel={() => setConfirmAlert({ open: false, name: \"\", path: \"\" })}\n          cancelable\n        >\n          <div className=\"alert-dialog-title\">Delete {confirmAlert.name}</div>\n          <div className=\"alert-dialog-content\">\n            Are you sure you want to delete this category?\n          </div>\n          <div className=\"alert-dialog-footer\">\n            <AlertDialogButton\n              onClick={async () => {\n                await removeCategories(confirmAlert.name);\n                refreshCategories();\n                setConfirmAlert({ open: false, name: \"\" });\n              }}\n              class={\"danger\"}\n            >\n              Yes, Delete Category\n            </AlertDialogButton>\n\n            <AlertDialogButton\n              onClick={() => setConfirmAlert({ open: false, name: \"\" })}\n            >\n              Cancel\n            </AlertDialogButton>\n          </div>\n        </AlertDialog>\n      )}\n      {editAlert.open && (\n        <AlertDialog\n          className={\"settingsAlert\"}\n          isOpen={editAlert.open}\n          onCancel={() => setEditAlert({ ...editAlert, open: false })}\n          modifier={\"rowfooter\"}\n          cancelable\n        >\n          <div className=\"alert-dialog-title\">Edit {editAlert.name}</div>\n          <div className=\"alert-dialog-content\">\n            <input\n              ref={alertInput}\n              type={\"text\"}\n              defaultValue={editAlert.path}\n              placeholder={\"Enter \" + alert.label}\n            />\n          </div>\n          <div className=\"alert-dialog-footer\">\n            <Button\n              onClick={() => setEditAlert({ ...editAlert, open: false })}\n              className=\"alert-dialog-button\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={async () => {\n                const newPath = alertInput.current.value;\n                await editCategory(editAlert.name, newPath);\n                refreshCategories();\n                setEditAlert({ ...editAlert, open: false });\n              }}\n              className=\"alert-dialog-button\"\n            >\n              Save\n            </Button>\n          </div>\n        </AlertDialog>\n      )}\n    </div>\n  );\n};\n\nexport default Categories;\n","import {\n  Button,\n  Icon,\n  List,\n  ListItem,\n  Popover,\n  Radio,\n  ToolbarButton,\n} from \"react-onsenui\";\nimport React, { useContext, useState } from \"react\";\nimport { addTorrent } from \"../utils/TorrClient\";\nimport { Context } from \"../App\";\n\nconst TorrentTopControls = (props) => {\n  const [addTorrentPopover, setAddTorrentPopover] = useState({\n    open: false,\n    target: null,\n  });\n\n  const { bigScreen, updateModal, updateAlert } = useContext(Context);\n\n  let AddButton = React.createRef();\n  let SortButton = React.createRef();\n\n  const [torrentURL, setTorrentURL] = useState(null);\n\n  const handleAddTorrent = () => {\n    addTorrent(torrentURL)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data === \"Ok.\") {\n          updateAlert(\n            \"Torrent Was Added\",\n            \"This torrent was added successfully.\"\n          );\n        } else {\n          updateAlert(\n            \"Could Not Add Torrent\",\n            \"This address could not be added.\"\n          );\n        }\n      })\n      .catch(() => {\n        updateAlert(\n          \"Could Not Add Torrent\",\n          \"This address could not be added.\"\n        );\n      })\n      .finally(() => {\n        setAddTorrentPopover({ open: false, target: addTorrentPopover.target });\n      });\n  };\n\n  const AddTorrentModal = () => {\n    return (\n      <div className={\"modalAddTorrent\"}>\n        <h2>Enter Torrent URL</h2>\n        <textarea\n          onChange={(event) => setTorrentURL(event.target.value)}\n          placeholder={\"URLs or Magnet links\"}\n          rows={10}\n        />\n        <Button modifier={\"large--quiet\"} onClick={() => handleAddTorrent()}>\n          Add Torrent\n        </Button>\n      </div>\n    );\n  };\n\n  const showAddPopover = () => {\n    if (bigScreen) {\n      setAddTorrentPopover({ open: true, target: AddButton.current });\n    } else {\n      updateModal({\n        open: true,\n        content: <AddTorrentModal />,\n        top: window.innerHeight / 2,\n      });\n    }\n  };\n\n  const [sortPopover, setSortPopover] = useState({ open: false, selected: 0 });\n\n  const showSortPopover = () => {\n    setSortPopover({ open: true, selected: sortPopover.selected });\n  };\n\n  const SortingOptions = [\n    {\n      object: {\n        key: \"added_on\",\n        reverse: true,\n      },\n      label: \"Added Latest Up Top\",\n    },\n    {\n      object: {\n        key: \"added_on\",\n        reverse: false,\n      },\n      label: \"Added Oldest Up Top\",\n    },\n    {\n      object: {\n        key: \"name\",\n        reverse: false,\n      },\n      label: \"Abc... Up Top\",\n    },\n    {\n      object: {\n        key: \"name\",\n        reverse: true,\n      },\n      label: \"Zxy... Up Top\",\n    },\n  ];\n\n  const updateSorting = (object, key) => {\n    setSortPopover({ open: false, selected: key });\n    props.updateSorting(object);\n  };\n\n  return (\n    <div>\n      <ToolbarButton ref={SortButton} onClick={() => showSortPopover()}>\n        <Icon size={30} icon=\"ion-ios-list\" />\n      </ToolbarButton>\n      <ToolbarButton ref={AddButton} onClick={() => showAddPopover()}>\n        <Icon size={35} icon=\"ion-ios-add\" />\n      </ToolbarButton>\n\n      <Popover\n        isOpen={addTorrentPopover.open}\n        onCancel={() =>\n          setAddTorrentPopover({\n            open: false,\n            target: addTorrentPopover.target,\n          })\n        }\n        getTarget={() => addTorrentPopover.target}\n        className={\"AddTorrentPopover\"}\n      >\n        <p>Enter Torrent URL</p>\n        <textarea\n          onChange={(event) => setTorrentURL(event.target.value)}\n          placeholder={\"URLs or Magnet links\"}\n          rows={10}\n        />\n        <Button modifier={\"large--quiet\"} onClick={() => handleAddTorrent()}>\n          Add Torrent\n        </Button>\n      </Popover>\n\n      <Popover\n        isOpen={sortPopover.open}\n        onCancel={() =>\n          setSortPopover({ open: false, selected: sortPopover.selected })\n        }\n        getTarget={() => SortButton.current}\n        className={\"SortTorrentPopover\"}\n      >\n        <List>\n          {SortingOptions.map((option, key) => (\n            <ListItem\n              modifier={\"longdivider\"}\n              key={key}\n              onClick={() => updateSorting(option.object, key)}\n            >\n              <div>\n                <Radio name=\"color\" checked={key === sortPopover.selected} />\n                {option.label}\n              </div>\n            </ListItem>\n          ))}\n        </List>\n      </Popover>\n    </div>\n  );\n};\n\nexport default TorrentTopControls;\n","import {\n  AlertDialog,\n  Button,\n  Icon,\n  List,\n  ListItem,\n  Popover,\n  Radio,\n  ToolbarButton,\n} from \"react-onsenui\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport { addCategory, editCategory } from \"../utils/TorrClient\";\nimport { Context } from \"../App\";\n\nconst CategoriesTopControls = (props) => {\n  const { refreshCategories } = useContext(Context);\n  const [addAlertOpen, setAddAlertOpen] = useState(false);\n\n  const categoryName = useRef();\n  const path = useRef();\n\n  return (\n    <div>\n      <ToolbarButton onClick={() => setAddAlertOpen(true)}>\n        <Icon size={35} icon=\"ion-ios-add\" />\n      </ToolbarButton>\n\n      {addAlertOpen && (\n        <AlertDialog\n          className={\"settingsAlert\"}\n          isOpen={addAlertOpen}\n          onCancel={() => setAddAlertOpen(false)}\n          modifier={\"rowfooter\"}\n          cancelable\n        >\n          <div className=\"alert-dialog-title\">Add Category</div>\n          <div className=\"alert-dialog-content\">\n            <label>\n              <span>Category Name</span>\n              <input\n                ref={categoryName}\n                type={\"text\"}\n                placeholder={\"Very Cool Category Name\"}\n              />\n            </label>\n            <label>\n              <span>Category Path</span>\n              <input\n                ref={path}\n                type={\"text\"}\n                placeholder={\"/some/valid/path\"}\n              />\n            </label>\n          </div>\n          <div className=\"alert-dialog-footer\">\n            <Button\n              onClick={() => setAddAlertOpen(false)}\n              className=\"alert-dialog-button\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={async () => {\n                const newPath = path.current.value;\n                const newName = categoryName.current.value;\n                await addCategory(newName, newPath);\n                setAddAlertOpen(false);\n                refreshCategories();\n              }}\n              className=\"alert-dialog-button\"\n            >\n              Save\n            </Button>\n          </div>\n        </AlertDialog>\n      )}\n    </div>\n  );\n};\n\nexport default CategoriesTopControls;\n","import React, { useContext, useState } from \"react\";\nimport TorrentsCol from \"../Pages/TorrentsCol\";\nimport { Page, Tab, Tabbar, Toolbar } from \"react-onsenui\";\nimport Search from \"../Pages/Search\";\nimport Settings from \"../Pages/Settings\";\nimport Categories from \"../Pages/Categories\";\nimport { Context } from \"../App\";\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport CategoriesTopControls from \"./CategoriesTopControls\";\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const pageTitles = [\"Your Torrents\", \"Search\", \"Categories\", \"Settings\"];\n\n  const { settings, bigScreen } = useContext(Context);\n\n  const [sort, setSort] = useState({ key: \"added_on\", reverse: true });\n\n  const updateSorting = (SortObj) => {\n    setSort(SortObj);\n  };\n\n  return (\n    <>\n      <Toolbar>\n        <div className=\"left\">\n          <h1>{pageTitles[activeTab]}</h1>\n        </div>\n        <div className=\"right\">\n          {settings.loggedin && !bigScreen && activeTab === 0 ? (\n            <TorrentTopControls updateSorting={(obj) => updateSorting(obj)} />\n          ) : null}\n          {settings.loggedin && !bigScreen && activeTab === 2 ? (\n            <CategoriesTopControls />\n          ) : null}\n        </div>\n      </Toolbar>\n      <Tabbar\n        className={\"tabWrapper\"}\n        animation={\"none\"}\n        position=\"bottom\"\n        onPreChange={({ index }) => setActiveTab(index)}\n        index={activeTab}\n        renderTabs={(activeIndex) => [\n          {\n            content: (\n              <Page key={1}>\n                <TorrentsCol\n                  sortingObj={sort}\n                  title={pageTitles[0]}\n                  active={(activeIndex === 0).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Torrents\" icon=\"ion-ios-download\" />,\n          },\n          {\n            content: (\n              <Page key={2}>\n                <Search\n                  title={pageTitles[1]}\n                  active={(activeIndex === 1).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Search\" icon=\"ion-ios-search\" />,\n          },\n          {\n            content: (\n              <Page key={3}>\n                <Categories\n                  title={pageTitles[2]}\n                  active={(activeIndex === 2).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Categories\" icon=\"ion-ios-pricetags\" />,\n          },\n          {\n            content: (\n              <Page key={4}>\n                <Settings\n                  title={pageTitles[3]}\n                  active={(activeIndex === 3).toString()}\n                />\n              </Page>\n            ),\n            tab: <Tab label=\"Settings\" icon=\"ion-ios-cog\" />,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default Tabs;\n","import TorrentsCol from \"../Pages/TorrentsCol\";\nimport {Icon, Page, Toolbar, ToolbarButton} from \"react-onsenui\";\nimport Search from \"../Pages/Search\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport { Context } from \"../App\"\nimport RoundLogo from \"../images/logo_round.png\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport Settings from \"../Pages/Settings\";\n\nconst TabletView = () => {\n\n    const {settings,updateModal} = useContext(Context)\n\n    const [sort,setSort] = useState({key: \"added_on\",reverse:true})\n\n    const updateSorting = (SortObj) => {\n        setSort(SortObj)\n    }\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left tabletHeader\">\n                    <div>\n                        {settings.loggedin?<img className={\"loginImage-small\"} alt={\"iQbit Logo\"} src={RoundLogo}/>:null}\n                        <h1>iQbit</h1>\n                    </div>\n                    {settings.loggedin?\n                        <TorrentTopControls\n                            updateSorting={(obj)=>updateSorting(obj)}\n                        />\n                        :null\n                    }\n                </div>\n                <div className=\"right\">\n                    <ToolbarButton\n                        onClick={()=>updateModal({\n                            open:true,\n                            content:<Settings/>,\n                        })}\n                    >\n                        <Icon size={35} icon=\"ion-ios-cog\" />\n                    </ToolbarButton>\n                </div>\n            </Toolbar>\n            <Page>\n                <div className=\"tabletView\">\n                    <TorrentsCol\n                        sortingObj={sort}\n                    />\n                    <Search/>\n                </div>\n            </Page>\n        </>\n    )\n}\n\nexport default TabletView;\n","import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize;\n","import React, {useEffect, useState} from \"react\";\nimport Draggable from 'react-draggable';\nimport useWindowSize from \"../utils/useWindowSize\";\n\nconst BottomSheet = (props) => {\n\n    const WindowSize = useWindowSize();\n\n    const topDiff = props.top || 100;\n    const leftDiff = props.left || 0;\n    // const open = props.open;\n\n    const [open,setOpen] = useState(false)\n\n    useEffect(()=>{\n        if(props.open){\n            setOpen(true)\n        }else{\n            setOpen(false)\n        }\n    },[props])\n\n    const initialPosition = {x: 0, y: WindowSize.height}\n\n    const finalPosition = {\n        y: topDiff,\n        x: leftDiff,\n    }\n\n    const threshold = .25;\n\n    return (\n        <div className={open?\"BottomSheet open\":\"BottomSheet\"}>\n            <div\n                className={\"BottomSheetOverlay\"}\n                onClick={()=>props.onDismiss()}\n            />\n            <div>\n                <Draggable\n                    onClick={(event)=> {\n                        console.log(event)\n                        console.log('clicked inside')\n                    }}\n                    axis={\"y\"}\n                    handle={\".handleArea\"}\n                    defaultPosition={initialPosition}\n                    position={open?finalPosition:initialPosition}\n                    children={\n                        <div className={\"modal\"}>\n                            <span className={\"handleArea\"}><span className={\"handle\"}/></span>\n                            {props.children}\n                        </div>\n                    }\n                    bounds={{top:topDiff}}\n                    onStop={(event)=>{\n                        if(event.pageY > ( WindowSize.height - (WindowSize.height * threshold))){\n                            setOpen(false)\n                            setTimeout(()=>{\n                                props.onDismiss()\n                            },400)\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BottomSheet\n","import {useState,useEffect} from \"react\";\n\nfunction useMedia(queries, values, defaultValue) {\n    // Array containing a media query list for each query\n    const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n    // Function that gets value based on matching media query\n    const getValue = () => {\n        // Get index of first media query that matches\n        const index = mediaQueryLists.findIndex(mql => mql.matches);\n        // Return related value or defaultValue if none\n        return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n    };\n\n    // State and setter for matched value\n    const [value, setValue] = useState(getValue);\n\n    useEffect(\n        () => {\n            // Event listener callback\n            // Note: By defining getValue outside of useEffect we ensure that it has ...\n            // ... current values of hook args (as this hook callback is created once on mount).\n            const handler = () => setValue(getValue);\n            // Set a listener for each media query with above handler as callback.\n            mediaQueryLists.forEach(mql => mql.addListener(handler));\n            // Remove listeners on cleanup\n            return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n        },\n        [] // Empty array ensures effect is only run on mount and unmount\n    );\n\n    return value;\n}\n\nexport default useMedia;\n","import {useState} from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import {useEffect} from \"react\";\nimport useMedia from \"./useMedia\"\nimport useLocalStorage from \"./useLocalStorage\"\n\nexport function useDarkMode() {\n    // Use our useLocalStorage hook to persist state through a page refresh.\n    // Read the recipe for this hook to learn more: usehooks.com/useLocalStorage\n    const [enabledState, setEnabledState] = useLocalStorage('dark-mode-enabled');\n\n    // See if user has set a browser or OS preference for dark mode.\n    // The usePrefersDarkMode hook composes a useMedia hook (see code below).\n    const prefersDarkMode = usePrefersDarkMode();\n\n    // If enabledState is defined use it, otherwise fallback to prefersDarkMode.\n    // This allows user to override OS level setting on our website.\n    const enabled =\n        typeof enabledState !== 'undefined' ? enabledState : prefersDarkMode;\n\n    // Fire off effect that add/removes dark mode class\n    useEffect(\n        () => {\n            const className = 'dark-mode';\n            const element = window.document.body;\n            if (enabled) {\n                element.classList.add(className);\n            } else {\n                element.classList.remove(className);\n            }\n        },\n        [enabled] // Only re-call effect when value changes\n    );\n\n    // Return enabled state and setter\n    return [enabled, setEnabledState];\n}\n\n// Compose our useMedia hook to detect dark mode preference.\n// The API for useMedia looks a bit weird, but that's because ...\n// ... it was designed to support multiple media queries and return values.\n// Thanks to hook composition we can hide away that extra complexity!\n// Read the recipe for useMedia to learn more: usehooks.com/useMedia\nexport function usePrefersDarkMode() {\n    return useMedia(['(prefers-color-scheme: dark)'], [true], false);\n}\n","import React, { useState, createContext, useEffect } from \"react\";\nimport Tabs from \"./components/Tabs\";\nimport TabletView from \"./components/TabletView\";\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nimport \"./App.scss\";\nimport { getStorage, saveStorage } from \"./utils/Storage\";\nimport BottomSheet from \"./components/BottomSheet\";\nimport { getCategories, getPrefs, login } from \"./utils/TorrClient\";\nimport { AlertDialog, Button } from \"react-onsenui\";\nimport { useDarkMode } from \"./utils/useDarkMode\";\n\nexport const Context = createContext(null);\n\nconst App = () => {\n  const [settings, setSettings] = useState({\n    loggedin: null,\n    username: null,\n    password: null,\n  });\n\n  useEffect(() => {\n    const settings = getStorage(\"user\");\n    let templateObject = settings;\n\n    if (settings === null) {\n      templateObject = {\n        loggedin: false,\n        username: null,\n        password: null,\n      };\n      saveStorage(\"user\", templateObject);\n    } else {\n      setSettings(settings);\n    }\n  }, []);\n\n  useDarkMode();\n\n  const screenWidth = window.innerWidth;\n  const breakpoint = 768;\n\n  const [bigScreen] = useState(screenWidth > breakpoint);\n  const installed = window.matchMedia(\"(display-mode: standalone)\").matches;\n  const [prefs, setPrefs] = useState({\n    add_trackers: \"\",\n    add_trackers_enabled: null,\n    alt_dl_limit: null,\n    alt_up_limit: null,\n    alternative_webui_enabled: null,\n    alternative_webui_path: \"\",\n    announce_ip: \"\",\n    announce_to_all_tiers: null,\n    announce_to_all_trackers: null,\n    anonymous_mode: null,\n    async_io_threads: null,\n    auto_delete_mode: null,\n    auto_tmm_enabled: null,\n    autorun_enabled: null,\n    autorun_program: \"\",\n    banned_IPs: \"\",\n    bittorrent_protocol: null,\n    bypass_auth_subnet_whitelist: \"\",\n    bypass_auth_subnet_whitelist_enabled: null,\n    bypass_local_auth: null,\n    category_changed_tmm_enabled: null,\n    checking_memory_use: null,\n    create_subfolder_enabled: null,\n    current_interface_address: \"\",\n    current_network_interface: \"\",\n    dht: null,\n    disk_cache: null,\n    disk_cache_ttl: null,\n    dl_limit: null,\n    dont_count_slow_torrents: null,\n    dyndns_domain: \"\",\n    dyndns_enabled: false,\n    dyndns_password: \"\",\n    dyndns_service: null,\n    dyndns_username: \"\",\n    embedded_tracker_port: null,\n    enable_coalesce_read_write: null,\n    enable_embedded_tracker: null,\n    enable_multi_connections_from_same_ip: null,\n    enable_os_cache: null,\n    enable_piece_extent_affinity: null,\n    enable_upload_suggestions: null,\n    encryption: null,\n    export_dir: \"\",\n    export_dir_fin: \"\",\n    file_pool_size: null,\n    incomplete_files_ext: null,\n    ip_filter_enabled: null,\n    ip_filter_path: \"\",\n    ip_filter_trackers: null,\n    limit_lan_peers: null,\n    limit_tcp_overhead: null,\n    limit_utp_rate: null,\n    listen_port: null,\n    locale: \"\",\n    lsd: null,\n    mail_notification_auth_enabled: null,\n    mail_notification_email: \"\",\n    mail_notification_enabled: null,\n    mail_notification_password: \"\",\n    mail_notification_sender: \"\",\n    mail_notification_smtp: \"\",\n    mail_notification_ssl_enabled: false,\n    mail_notification_username: \"\",\n    max_active_downloads: null,\n    max_active_torrents: null,\n    max_active_uploads: null,\n    max_connec: null,\n    max_connec_per_torrent: null,\n    max_ratio: null,\n    max_ratio_act: null,\n    max_ratio_enabled: null,\n    max_seeding_time: null,\n    max_seeding_time_enabled: null,\n    max_uploads: null,\n    max_uploads_per_torrent: null,\n    outgoing_ports_max: null,\n    outgoing_ports_min: null,\n    pex: null,\n    preallocate_all: null,\n    proxy_auth_enabled: null,\n    proxy_ip: \"\",\n    proxy_password: \"\",\n    proxy_peer_connections: null,\n    proxy_port: null,\n    proxy_torrents_only: null,\n    proxy_type: null,\n    proxy_username: \"\",\n    queueing_enabled: null,\n    random_port: null,\n    recheck_completed_torrents: null,\n    resolve_peer_countries: null,\n    rss_auto_downloading_enabled: null,\n    rss_download_repack_proper_episodes: null,\n    rss_max_articles_per_feed: null,\n    rss_processing_enabled: null,\n    rss_refresh_interval: null,\n    rss_smart_episode_filters: \"\",\n    save_path: \"\",\n    save_path_changed_tmm_enabled: false,\n    save_resume_data_interval: null,\n    scan_dirs: {},\n    schedule_from_hour: null,\n    schedule_from_min: null,\n    schedule_to_hour: null,\n    schedule_to_min: null,\n    scheduler_days: null,\n    scheduler_enabled: false,\n    send_buffer_low_watermark: null,\n    send_buffer_watermark: null,\n    send_buffer_watermark_factor: null,\n    slow_torrent_dl_rate_threshold: null,\n    slow_torrent_inactive_timer: null,\n    slow_torrent_ul_rate_threshold: null,\n    socket_backlog_size: null,\n    start_paused_enabled: false,\n    stop_tracker_timeout: null,\n    temp_path: \"\",\n    temp_path_enabled: null,\n    torrent_changed_tmm_enabled: null,\n    up_limit: null,\n    upload_choking_algorithm: null,\n    upload_slots_behavior: null,\n    upnp: null,\n    use_https: null,\n    utp_tcp_mixed_mode: null,\n    web_ui_address: \"\",\n    web_ui_ban_duration: null,\n    web_ui_clickjacking_protection_enabled: null,\n    web_ui_csrf_protection_enabled: null,\n    web_ui_custom_http_headers: \"\",\n    web_ui_domain_list: \"\",\n    web_ui_host_header_validation_enabled: null,\n    web_ui_https_cert_path: \"\",\n    web_ui_https_key_path: \"\",\n    web_ui_max_auth_fail_count: null,\n    web_ui_port: null,\n    web_ui_secure_cookie_enabled: null,\n    web_ui_session_timeout: null,\n    web_ui_upnp: null,\n    web_ui_use_custom_http_headers_enabled: null,\n    web_ui_username: \"\",\n  });\n\n  const updateSettings = (settings) => {\n    setSettings(settings);\n  };\n\n  const [modal, setModal] = useState({\n    open: false,\n    content: null,\n  });\n\n  const updateModal = (update = { open: true, content: <span /> }) => {\n    setModal(update);\n  };\n\n  const [contextCategories, setContextCategories] = useState({});\n  const [cookie, setCookie] = useState(false);\n\n  useEffect(() => {\n    if (settings.loggedin) {\n      login({\n        username: settings.username,\n        password: settings.password,\n      }).then(() => {\n        setCookie(true);\n        getPrefs().then((response) => {\n          setPrefs(response.data);\n        });\n\n        getCategories().then((response) => {\n          setContextCategories(response.data);\n        });\n      });\n    }\n  }, [settings, settings.loggedin, settings.password, settings.username]);\n\n  const [alert, setAlert] = useState({\n    open: false,\n    title: null,\n    message: null,\n  });\n\n  const updateAlert = (title, message) => {\n    setAlert({ open: true, title, message });\n  };\n\n  const refreshCategories = () => {\n    getCategories().then((response) => {\n      setContextCategories(response.data);\n    });\n  };\n\n  const Alert = (props) => {\n    return (\n      <AlertDialog\n        isOpen={props.open}\n        onCancel={() =>\n          setAlert({ open: false, title: alert.title, message: alert.message })\n        }\n        cancelable\n      >\n        <div className=\"alert-dialog-title\">{props.title}</div>\n        <div className=\"alert-dialog-content\">{props.message}</div>\n        <div className=\"alert-dialog-footer\">\n          <Button\n            onClick={() =>\n              setAlert({\n                open: false,\n                title: alert.title,\n                message: alert.message,\n              })\n            }\n            className=\"alert-dialog-button\"\n          >\n            Ok\n          </Button>\n        </div>\n      </AlertDialog>\n    );\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        settings,\n        updateSettings,\n        bigScreen,\n        modal,\n        updateModal,\n        installed,\n        updateAlert,\n        prefs,\n        contextCategories,\n        refreshCategories,\n        cookie,\n      }}\n    >\n      <div\n        className={\n          (settings.loggedin ? \"loggedin \" : \" login \") +\n          (installed ? \" installed\" : \"\")\n        }\n      >\n        {bigScreen ? <TabletView /> : <Tabs />}\n        <BottomSheet\n          open={modal.open}\n          onDismiss={() => setModal({ open: false })}\n          top={modal.top ? modal.top : bigScreen ? 25 : 85}\n          children={modal.content}\n        />\n        <Alert open={alert.open} title={alert.title} message={alert.message} />\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_round.651d9c54.png\";","module.exports = __webpack_public_path__ + \"static/media/imagemissing.960d2bd1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-YTS.fdd85bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-TPB.8635a316.svg\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t108,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t109,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t110,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t111,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t112,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t113,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t114,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t115,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t116,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t117,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t118,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t119,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t120,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t121,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t122,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t123,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t124,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t125,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t126,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t127,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t128,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t129,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t130,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t131,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t132,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t133,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t134,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t135,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t136,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t137,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t138,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t139,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t140,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t141,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t142,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t143,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t144,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t145,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t146,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t147,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t148,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t149,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t150,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 76;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t151,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 78;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}